        Toccata: A Multi-Device System for Activity Scripting and
                                   Classroom Orchestration

           Valentin Lachand, Univ Lyon, INSA-Lyon, CNRS, LIRIS, valentin.lachand@liris.cnrs.fr
         Aurélien Tabard, Univ Lyon, Université Lyon 1, CNRS, LIRIS, aurelien.tabard@liris.cnrs.fr
           Christine Michel, Univ Lyon, INSA-Lyon, CNRS, LIRIS, christine.michel@liris.cnrs.fr

        Abstract: We present Toccata, a system supporting the management of rich multi-device
        pedagogical activities. Activities designed with Toccata are reusable, shareable and adaptable
        to the situation. Teachers face numerous challenges in designing and scripting pedagogical
        activities that incorporate rich media and applications, combine devices, group formations, and
        spaces. They also face challenges in orchestrating these activities in class, especially to guiding
        learners, following  their progress,  and   maintaining  a  coherent  learning experience.    Our
        demonstration will showcase how Toccata answers these challenges by supporting individual
        or collaborative activities, in class or outdoors, under diverse technical conditions, e.g., offline
        on mobile devices, or fully connected with Desktop computers.

Introduction
Toccata is an activity-centric system      supporting orchestration of   pedagogical   activities for  classrooms.
Orchestration aims at helping teachers to create pedagogical scripts, adapt and execute them in a given context [2].
Based on interviews with teachers [3], we identified a set of recurring challenges for creating and conducting
digital pedagogical activities in today's classrooms, such as resilience to networking problems, or support for a
wide variety of devices. We developed Toccata to facilitate the management of rich multi-device pedagogical
activities. In Toccata, activities are reusable, shareable and adaptable to the situation. Toccata supports tight or
loose activity scripting. It lets teachers conduct digital activities in class and in more open environments. Toccata
also lets teachers modify and adapt unfolding activities according to the situation in the classroom.
        Teachers  face numerous    challenges  in integrating  digital tools into smooth and  coherent       teaching
activities. Rich pedagogical activities are often fragmented in time, split into multiple sub-activities, built upon
multiple media and applications, and may unfold in various locations. They can be initiated in a specific context
(technical, physical or social) and continued in another, following a plan more or less strictly defined by teachers.
        For example, in a vocational school, a horticulture lesson can start in class with a lecture leveraging an
interactive whiteboard, continue in the school's greenhouse with individual work on tablets to inventory flowers
and, finish back in the classroom with a synthesis in groups shared with others. Follow-up activities and homework
can finally be conducted outside of the school on personal devices.
        Combining    various  activities,  devices, group    formations, and   spaces  brings new      pedagogical
opportunities such as the scenario previously described. But organizing such scenarios is complex as teachers
must be able to guide learners, and follow their progress, while maintaining a coherent learning environment. The
lack of tools to support these practices makes it difficult for teachers to put rich pedagogical activities into place.
And when such activities do happen, infrastructural problems (network, device set-up, content distribution) make
it even more challenging.
        We designed Toccata to work in schools with various technical set-ups and policies. Teachers can run
activities in their classroom, on fixed computers with a reliable network, but also across several rooms or with
multiple devices, even if there is no insurance of a reliable network. Toccata also supports disconnected contexts,
such as in sports class or activities unfolding outside of school. We have tested Toccata in three different middle
schools with highly varied situations: in classrooms over multiple sessions, in activities mixing digital and
physical resources, in nomadic activities.
        Our demonstration will showcase the versatility of Toccata. We will present activities created by teachers
and run with Toccata such as: 1) a fact checking activity, in which students have to verify and correct wiki articles
over multiple sessions; 2) a sales management activity which involves roaming, i.e. work on tablets and on a large
display in the classroom, but also documentation in a greenhouse; and 3) a collaborative activity involving paper
and tablets, in order to learn Agile project management. We will also discuss the underlying architecture allowing
our system to work in schools with diverse technical and policy constraints, and its theoretical grounding

CSCL 2019 Proceedings                                   989                                                    © ISLS
                 Figure 1. A preview of an activity in Toccata, and components of the activity.

Toccata
Toccata is a Web-based application enabling teachers to create digital pedagogical activities and conduct them
with a class. As a Web-based application, our system works with any kind of devices containing a web browser
(computer, tablet, phone, video-projector linked to a computer). Toccata is developed to run in online or offline
mode, with an optimal mode and two degraded modes according to network reliability.

Activity scripting
Toccata builds upon an Activity Based [1] model to represent pedagogical activities. When teachers create an
activity, they can define the following components, before enactment or live:
   1.    A set of Instructions for students to guide them in conducting the activity.
   2.    A list of Sub-activities (steps), created by teachers to divide the activity according to pedagogical needs.
   3.    A set of Resources can be associated with activity or steps and are typically all kind of documents
         openable with a web browser (pdf, video, audio, website, etc.). These resources are read-only in our
         system.
   4.    A set of Applications are a set of tools allowing teachers and students to run operations on resources,
         such as text editors; and to control the activity flow, such as timers.
   5.    A list of Participants involved in the activity.
   6.    Notes that teachers can attach to an activity or step, to jot down things to remember or document of the
         class unfolded, to improve future iterations of the activity.

Activity orchestration
During the enactment phase, the teacher and the students have a similar interface. However, the teacher can take
notes on the activity, and has more options and actions available on the applications. S/he can edit during class
each component of the activity. This run-time edition of the activity can help the teacher in the adaptation of the
activity for students. For example, if a student is blocked    on a     particular exercise, the teacher can refine
instructions and give new resources to help the student, or s/he can change the order of steps, add new exercises
for specific group, change the visibility of steps for several groups.

CSCL 2019 Proceedings                                  990                                                    © ISLS
 Figure 2. (a) Tutor view of Toccata when looking at different group progression; (b) Student view of Toccata
                      during an activity with a project management board and timer loaded.

Scenario
We illustrate the use of Toccata with a scenario developed in collaboration with a teacher from a vocational middle
school. The activity was run in the school over a period of 90 minutes, with two groups of learners to test Toccata
in-situ.
          Thomas is an economics teacher in a vocational middle school. At the end of the year, he decides to
create an activity to review the topics covered during the year. He creates the activity with Toccata and divides it
in three steps:
   1.     Students watch a video of a sale situation, analyze it, and answer questions about concepts from previous
          course chapters presented in the video in a text editor. They can use the pdf viewer to read the previous
          lessons related to the video.
   2.     Students calculate taxes and prices using a collaborative spreadsheet.
   3.     Students prepare the plant catalog of the school. They visit the greenhouses of the school, take pictures
          of plants with the tablet and store them in their space in order to build the catalog.
          At the end of the first two steps, Thomas includes a correction: a student will do the exercise on the
teacher environment in front of the class and project it with the classroom's video-projector. At the end of the third
step, Thomas includes a class discussion: each group will present the pictures taken in the greenhouse by using
the video-projector and discuss with the class how they could be used to create the sale catalog.
          In the first phase, students analyzed a sales situation using external applications within Toccata. Due to
an unreliable school network, external Web applications such as the collaborative text editor did not work
perfectly, but resources hosted on Toccata could be properly accessed. Although the internet connection was
fluctuating, students did not encounter major problems, and managed to move from one step to the next. During
the second step, due to the use of an external application for the spreadsheet, changes made during the correction
on the teachers' computer connected to the video-projector were not synchronized with students' activity, and
students had to manually update the activity on their tablet. In the third step, students moved to a greenhouse, with
no WiFi coverage. This step worked smoothly and students could grab their tablet and continue their activity as
expected. In the greenhouse, they moved freely and took pictures of plants they later added to a sales catalog.
When they came back to the classroom, the activity was updated on the global server and the teacher could access
the pictures taken in the greenhouse.

Implementation
Toccata architecture is built on three layers. The first layer consists of a main Web server and Web applications.
The second layer is a local server running inside classrooms. The last layer is composed of client devices running
Toccata. The second layer is not mandatory, and devices running Toccata can directly communicate with the
remote Web server. When the third layer is not available, the devices synchronize with each other via a local
server if they are connected to one. Otherwise they run independently.
          Toccata  is a Progressive   Web   Application built  with Angular, with   duplicated     layers, and extra
synchronization mechanisms. The server delivers a single page application running in the browser. It is hosted on

CSCL 2019 Proceedings                                    991                                                    © ISLS
Firebase. Activities are stored on a CouchDB database. External applications are iframes opened inside Toccata
and local applications are Angular components.
       The local server acts as a WiFi hotspot, it can either connect to the Ethernet network of the school, or
connect to a tethering smartphone, or run without any Internet connection. The server runs on Node.js and only
delivers a simple Single Page Application with very little logic. The activities are stored in a CouchDB database
that syncs with the remote one.
       Each device runs Toccata and a PouchDB instance. PouchDB allows synchronization between multiple
instances of CouchDB servers. As a Progressive Web Application, is offers some native-like feature, like home
icons on mobile OS, and strong caching mechanisms for the data, but also for the application shell: the webpage
can load even when the device is totally offline, and it will synchronize back to the server when it becomes
available.
       Toccata is open-source and available on GitLab (https://gitlab.com/lachand/Toccata). Since Toccata is
built on Angular with reusable web components, everyone can reuse components of Toccata in its own project
and we think that this may lead to a better integration and assimilation of research projects in commercial and
deployed in school systems. In addition, we create a demonstration page where people can use Toccata with a
student or teacher account in order to enable teachers, researchers or system editors to test our system and concepts
beneath Toccata. This demonstration is available at the following page: https://en.demo.toccata.education

Future work
In future work, we will study the use of Toccata in different contexts, such as a collaborative activity with one
device per student instead of one device per groups. We will also work on a classification of tasks and new
interaction to support teachers when they had to manage an activity with several devices (attention management,
support to students, etc.). Another interesting point fur future work is to pass from a note-taking process (what is
actually done by teachers) to a reflexive process to design and re-design pedagogical activities.

Conclusion
We presented Toccata, a system allowing teachers to prepare multi-device activities before class. Toccata enables
teachers to edit their activity at it occurs, in order to adapt it to students' progression or to unexpected events
occurring in class. Toccata has been tested in different schools and pedagogical context, such as a course on
several sessions, a course mixing paper and digital activities, and a course running in class and outside class, with
no available network. The demo of Toccata offers participants the ability to edit and run existing activities created
by real teachers, and to create their own scripts. Participants will be able to run their scripts on tablets during the
demonstration.

References
Bardram, J. E. (2005, September). Activity-based computing-lessons learned and open issues. In ECSCW 2005
       workshop, Activity-From a theoretical to a computational construct.
Dillenbourg,  P. (2013, 11). Design   for classroom orchestration.  Computers  &  Education,        69, 485-492.
       doi:10.1016/j.compedu.2013.04.013
Jalal, G., Lachand, V., Tabard, A., & Michel, C. (2018). Design, Adjust and Reuse -- How Teachers Script
       Pedagogical Activities. Extended Abstracts of the 2018 CHI Conference on Human Factors in Computing
       Systems - CHI '18. doi:10.1145/3170427.3188483

CSCL 2019 Proceedings                                  992                                                  © ISLS
