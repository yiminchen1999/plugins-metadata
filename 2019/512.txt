   Taking the Patch Perspective: A Comparative Analysis of a Patch
                                Based Participatory Simulation
                  Lauren Vogelstein, Vanderbilt University, lauren.e.vogelstein@vanderbilt.edu
                         Corey Brady, Vanderbilt University, corey.brady@vanderbilt.edu

         Abstract:   In  this paper  we explore   the  implementations    of an  activity designed to  engage
         students  in  an  embodied    simulation   of an   artistically expressive    Agent-based   modeling
         environment. We compare how two facilitators implemented the same activity, analyzing how
         they co-developed differing substrates with their students. We argue that instructors facilitated
         different embodied     agent-based   perspectives, which    led  students  to develop  considerably
         different conceptualizations of how these agents interact and how to code in this environment.

Introduction
Agent-based    modeling    (ABM)      offers  a   powerful  representational     infrastructure  for   simulating  and
understanding emergent phenomena and complex systems. However, it also provides an expressive medium for
creating computational art of various kinds. In the constructionist tradition, a single movable agent (turtle) has
been used in environments such as TurtleArt (Bontá, Papert, & Silverman, 2010) and more recently Scratch
(Resnick et al, 2009) as a means of exploring artistic expressivity focused on a single agent. In this paper, we
extend this line of work into a multi-agent environment, NetLogo (Wilensky, 1999), focusing initially on the
expressive visual potential of a large grid of immobile agents (patches), which can be thought of in terms of the
panels of a quilt or the pixels of an image.    As computational agents, patches have Cartesian coordinates, can
change color, and can hold variables. In using the NetLogo patch grid as a medium for visual art, we have found
students encounter conceptual challenges and opportunities in learning to use the environment expressively. In
some  senses,  these challenges  mirror  those  found  with   artistic uses  of single and  multi-turtle programming,
where   physical, embodied    simulation have   provided   critical entry  points  for learners (e.g., "playing  turtle"
(Papert, 1980) for single turtle concepts, and engaging in "star people" activities (Resnick & Wilensky, 1998)
for multiple turtle concepts). We hypothesized, however, that learning to conceptualize patches would require
different mappings from social structures to computational phenomena. Engaging in design-based research to
explore this area, we were interested in how a group of learners new to ABM could use coordinated social
enactment to build familiarity with multi-agent patch programming as an expressive medium. We developed
activities that invited participants to physically embody patches as an assembly of social beings that can each
interpret and respond to code. We designed activities to foster understandings of how these agents function
computationally    and   what  visual effects  they   can produce.     However,    we  found  that teacher   facilitators
implemented    these activities in ways  that  promoted   different  conceptions   of  patch agents, even  when   these
activities were highly specified in professional development and curricular materials.       In our study of two cases
of implementation    these differences  appeared    to be  consequential,    opening   up two distinct   ways of  using
patches, both of which were powerful and expressive but in different ways. In particular, we found that taking
slightly different embodied     perspectives   as patches  could    contribute  to the  development    of considerably
different conceptualizations of how these agents interact and how one codes in this environment. Thus in this
paper we   explore   the following   research  question:  How  do   facilitation choices  in these  socially  embodied
simulations shape the image that emerges for participants of how one programs in a multi-agent environment?

Study overview
In this  paper we  report  on   data collected from   the Computational-Thinking       And   Mathematics  Play  Spaces
(CAMPS) project, a design based research project created specifically to look at how computational thinking
and mathematics could be explored simultaneously with middle school learners in an expressive, artistic ABM
environment. As the acronym suggests, this project took the form of a summer camp. The first design iteration
consisted of a one-week (five-day) free summer camp for middle school students, held in a middle school in a
southeastern U.S. city. The camp was titled "Code Your Art," and was advertised as a camp involving computer
programming and art for rising 7th and 8th graders (although a few rising 6th graders asked to participate and
attended). Code Your Art camp consisted of two groups each with 16 students. Each group was co-facilitated by
two middle school mathematics teachers; Tracy and Isabel were in room 1 and Kiara and Neil were in room 2.
Six researchers and two undergraduate computer science students rotated between the rooms to collect data and
provide technical and facilitation support as needed.
         Over the course of the five-day camp, students created digital works of art in NetLogo to present and

CSCL 2019 Proceedings                                     512                                                    © ISLS
share on  the final day in   each class' art gallery. We  conceptualized    using  NetLogo    to create digital art by
thinking of pixels as computational agents (patches). To do this, we had students import images from the web
into NetLogo so that they could use this computational environment to manipulate different parts of the image,
changing  pixels  based on   color, location, or  both. Since  we conceptualized    images    as being  composed    of
computational agents (pixels) it made sense for us to introduce NetLogo from the patch perspective, having
students' first introduction to NetLogo   be  in  the context of what a    single pixel/patch would   interpret in  the
context of  creating a  larger  composite  image.   Thus  students'  first introduction to NetLogo      was not  on  a
computer, it was in a series of participatory simulations we referred to as the Stadium Card Activities. We took
inspiration from a sports arena phenomenon in which spectators are given one or more colored squares of paper.
When held up in a coordinated manner the entire stadium creates a composite image (Figure 1).

                         Figure 1. Stadium cards in increasing scale from left to right.

         Since we were neither in a stadium nor in the digital world of NetLogo, but rather in middle school
classrooms, we created our own physical computational environment by tapping into the cultural syntonicity
(Papert, 1980) between stadium cards in the arena and patches in NetLogo. We taped out a 2 x 8 grid on the
floor (one square unit for each participant/patch) and instead of giving participants a single colored card, like in
the arena events, we gave each participant five 15" x 15" colored squares (one each of black, red, orange, green,
and blue), each labeled with a number on one side (0, 1, 2, 3, 4, respectively), and attached by a binder ring so
that students could flip through all five colored squares. Although the numbers and colors did not correspond to
the same color system in NetLogo (e.g. in NetLogo red = 15 not 1), they still allowed participants to respond to
code that referred to colors either by name or number, and produced an opportunity to think about modular
arithmetic (e.g. what happens when you are asked to increase your color by 7).
         In the context of the camp, a series of three Stadium Card Activities were used each day to introduce
new computational concepts in NetLogo: patch color, patch location, and turtle movement. For this paper we
will focus our analysis on the first activity, which we used to introduce NetLogo on day one of the Camp. This
activity focused on patches (with color as their primary property), and basic syntax and computational concepts
(e.g. brackets, "ask patches," if/then, colors named and numbered, loops, and randomness). This activity was co-
designed  with  the instructors who  taught   the camp, using  pilot enactments    during four   days of professional
development to change the original researcher-designed activity. Through these conversations with instructors
two consequential   changes  were   made.  (1) Someone    embodied   the   Observer. We   even   dedicated  a   special
location in the room for the Observer to stand and give commands. This created a "Simon Says" feel to the
activity that the instructors thought would be something students could easily understand, taping into the ego
syntonicity (Papert, 1980)   between  the  agents  (patches)  as beings    that can interpret commands      and make
decisions and the participants themselves who have these human abilities. The instructors suggested that this
would also support students in eventually becoming the Observer themselves. (2) A slide deck with all of the
agreed upon NetLogo commands for instructors to read as the Observer, along with a translation into English on
each slide (e.g. "ask patches [if pcolor = black [set pcolor red]]" and "Ask all patches, `if your color is black set
it to red'"). This change allowed instructors to make connections for themselves about NetLogo syntax, such as
relating brackets to quotation marks when "talking" to patches as the Observer. By the end of the professional
development days, a Google slide deck was created for the instructors to use on the first day of camp. Although
both teams of instructors had access to the same professional development and the same slide decks, when they
ran this activity during the camp they made some changes. Although kids in both rooms playfully engaged in
this social ABM environment through their embodiment of agents within the system, the changes instructors
made resulted in significant differences in students' understandings of how to use NetLogo.

Theoretical framework
As seen in the two groups during Code Your Art camp, when groups work together, they develop their own
micro-cultures that shape their understandings as they learn together (Fine, 1979). This development can be
traced through an analysis of co-operative action (Goodwin, 2018). Goodwin describes human interaction as a
process in which participants draw upon interactional components from a "substrate" of their shared history and
reuse them with modification, transforming these resources in ways afforded by the semiotic system to which

CSCL 2019 Proceedings                                    513                                                    © ISLS
they belong  so  that  they   serve emergent interactional  intentions. Substrates   consist  of  shared resources   for
interaction that change as time unfolds and interactions continue. Goodwin defines a substrate as follows:

          It is visibly a form of action that organizes simultaneously 1) the past as something relevant to
          the present by not only incorporating, but transforming, the materials it emerged from; and 2)
          the future that will immediately follow from it by providing a constrained but open-ended
          framework for subsequent action (Goodwin, p. 32, 2018).

This analytic   construct  makes    shared  interactional resources   visible   as influencing   future  interaction by
emphasizing   how   substrates  evolve  over time   through   interaction. Components     of  a  substrate can  include
discourse, material   tools,  gestures, the  physical environment,    and    anything  else  that  can  ground  human
interaction. An analysis of the substrates developed in the enactment of the Stadium Card Activities focuses on
the social nature of the design through the collective embodiment of an ABM environment. During the Stadium
Card Activities, relational metaphors, students position on the grid, and the order in which code was translated
were the three primary components of each room's substrates that differed, constraining participants' respective
open-ended possibilities for interacting with NetLogo as their computational understandings began to develop.
In analyzing the different pedagogical choices instructors made when enacting this activity, an analysis of these
substrates allows us to begin to understand how different choices constrained the possibilities for interaction.

Methods
In both rooms, the first Stadium Card Activity lasted about 40 minutes, starting with (1) a discussion about
stadium   cards as  real life examples,  (2) going   through  a sequence   of   commands    with  an instructor as   the
Observer, and (3) ending with students taking on the role of the Observer. The Stadium Card Activities were
video recorded using four cameras situated around the periphery of the classrooms. Researchers observed this
activity and took  notes  while  watching.   In both  rooms   the second   author  walked  in during   the activity  and
participated as well. This paper reports initial findings from our review and analysis of recordings of the first
Stadium Card Activity. Using Interaction Analysis (Hall & Stevens, 2016; Jordan & Henderson, 1995) we have
developed grounded theoretical categories to describe similarities and differences in the substrates (Goodwin,
2018) present in each room, looking specifically at facilitation and pedagogical choices instructors made and
how they related to how students made sense of new computational concepts in this socially embodied ABM
environment as they began to explore the expressive potential of the system.

Analysis
The Stadium Card Activity provided students with an accessible entry into an ABM environment that invited
expressive play and allowed for participants to productively grapple with computational concepts. Although all
four instructors participated in same pilot enactments of the Stadium Card Activities and had access to the same
slide deck, both pairs of instructors made changes to the activities when facilitating them during the Camp.
Three primary instructional choices created significant differences in how the first Stadium Card Activity was
enacted in each room: (1) how the Observer was described and positioned, (2) where students stood on the grid,
and (3) the order in which NetLogo code and English interpretation were translated. These differences affected
the development of the substrate for the activity and thus how students interacted with each other, the materials
in the room, and the instructors, and ultimately how students began to understand what it meant to use NetLogo
as evident in how students took up the role of the Observer at the end of the activity through their participation
in this socially, embodied ABM environment as they explored visual effects within this computational system.

Three instructional choices that created substrates for student learning

Establishing the Observer-patch relationship
Embodying    agents   in  an  ABM     environment   provided    participants  with  easily  understandable   relational
metaphors  for  the   Observer-patch  relationship. Facilitators' descriptions   of their  role as the  Observer cued
different  relational metaphors,    emphasizing   different   aspects of   this computational     environment.  While
facilitators in both rooms began by equating patches to pixels in an image, they positioned the Observer-patch
relationship differently. In room 1, Tracy introduced the Observer as having authoritarian rule over patches:

          One of us [instructors] is gonna be the Observer. So right now this is gonna be the Observer
          box. I as the Observer have the privilege of being able to change you as patches. Ok? So I can
          speak to you, give you a command, and then you HAVE to follow my command.

CSCL 2019 Proceedings                                     514                                                    © ISLS
This  stance positioned  the  Observer  as being  in  control  over  patches, who  did  not  have a  choice in  their
response. In response to this utterance, the students jokingly groaned and laughed and Tracy quickly chuckled
as well. The groans and laughter indicated how Tracy's positioning of the Observer-patch relationship was an
exaggerated or satirical depiction of the teacher-student relationship, a relationship the students were all too
familiar with. In this moment, Tracy explained how she planned to embody a figure with complete control over
these students: what they could do, when they could do it, and how they could do it. Here, the computational
agents (patches) were depicted as subservient to an all-powerful ruler (Observer). Computationally one might
argue that this is an accurate depiction because unlike humans, computational agents cannot think or choose or
express agency, they can and must perform the actions commanded by the code they receive.
          In room 2, Kiara positioned the Observer as a messenger to the patches, communicating the request
(code) of another being, who could be anyone:

          And so then, I'll be the Observer and I'll be standing in the Observer box and later on you
          could be the Observer. And so what it's asking me, it says, "ask the patches," that's you guys.
          In a moment I'm gonna ask you to do something. So we always, the Observer always tells the
          patches what they're supposed to do.

Kiara began this introduction by telling the students that although she would play the part of the Observer at the
beginning, they would get a chance to play the part later. This pedagogical move emphasized accessibility of
the role as something students would be able to succeed at during the activity. The transient embodiment of the
Observer also distanced the role from the person, describing a different power dynamic than Tracy constructed.
Distancing the person from the role was also evident when Kiara said, "And so what it's asking me, it says, `ask
patches,'" here Kiara depicted the Observer as a messenger, relaying a message (asking patches) for someone
else. Computationally,   this  foregrounded the  role   of the coder   as separate from  a  computer/Observer   that
relayed code to computational agents, placing agency in the coder and not the Observer.
          By positioning  the  Observer differently  in each   room, the  instructors contributed to the creation  of
different substrates in  their respective  rooms, drawing      on two  different relational metaphors--rulers   and
messengers--that turned out to influence students' own relationships with this computational structure and thus
their understandings of how to interact in this environment and imagine differing possibilities.

Positions and perspectives on the grid
Physically standing in for patches on the grid provided students with a point of accessibility into the role and
perspectives of this agent. The students in each room stood in different places on the grid (Figure 2), which
provided students with different agent-based perspectives. In room 1, students stood inside the grid, such that
each student was a patch and held their colored squares for the entire duration of the activity. This meant that
these students experienced "the patch perspective" in which they could not see the entire image created by the
group, only their neighbors were directly visible. In room 2, students stood outside of the grid facing inwards,
meaning that unlike a digital patch, students could see the entire image created by the group. This difference
meant students' perspectives on and visual access to the overall picture were different in each room.
          In room 1, students embodied an intrinsic patch perspective. This arrangement created        "constrained
but open-ended" (Goodwin, p. 32, 2018) possibilities for student and instructor interactions during the activity.
From this intrinsic perspective students could not see the composite image made by all of the patches, which
meant  that  it was  not necessary from    the students'   perspective to  show  their patch color   uniformly. It is
important to note that these students held their colored squares for the entirety of the activity and all presented
them in some manner after they responded to the Observer, which was easily understood as part of their role as
patches. As shown in Figure 2, students in room 1 did not present their colored squares uniformly. There are
three students visible in Figure 2 that all presented their colored squares in different spatial orientations, as if to
different audiences. The first student (1) held her patch in her left hand, presenting the orange square on the
other side to someone standing on her right. From the camera's perspective it looks like she is presenting a red
square, however, her rightward gaze indicates where or to whom she was presenting her colored square. The
boy to her right (2) held his colored square above his head, presenting an orange square towards the instructor or
Observer and the girl to his right (3) held her orange square facing outwards from her chest. While all three of
these students held their colored squares orthogonal to the ground, some students even held their squares above
their heads, parallel to the ground, visible from a bird's eye view. This meant that it was hard for participants
both intrinsically and extrinsically to easily see the color of each patch or the resultant image. This also meant
that it made it more difficult for students as patches to look to their neighbors for clues as to how to respond to a
prompt, something that patches cannot do either. Similar to the conflation of person and role with respect to the

CSCL 2019 Proceedings                                    515                                                  © ISLS
Observer as described in the previous section, in room 1 the person and role of patch was also tightly coupled
due to the students' physical location inside the grid standing in as their patches for the entire activity.

 Figure 2. Students stood in different places on the grid, which afforded different visibilities and perspectives.

         In room 2, students stood outside of the grid, which meant that they had to take an intrinsic perspective
(to think like a   patch) while  standing   in an  extrinsic  position  in which   they  could  see the entire  image
(something that a patch could not "see"). From this position students in room 2 did not hold their squares the
entire time, but they still intuitively understood their relationship to the colored squares, manipulating them
when  asked  by  the observer  and then setting   them   down    in the grid. This  meant  that the composite   image
created by the students in room 2 was visible (Figure 2), which made it possible for the group to evaluate their
image. Had all of the students in room 2 (Figure 2) responded to the Observer correctly the resultant image
would have been two stripes. In Figure 2 it is clear that one of the students in the orange stripe had her colored
square blue instead of orange. This visible difference became a point of discussion for the class, prompting Neil
to talk through interpreting the code with the student and later led Kiara to ask her what had been confusing. It
is also important to note that visual designs were visible in this small grid to the extent that patterns (e.g. stripes)
were easily accessible to the group. The group began to manipulate and see the visual effects transform the
gridded canvas in a way that emphasized that the image consisted of individual programmable agents (patches).
         Not only was the composite image visible, but student manipulation of colored squares was visible as
well. It was clear when students were changing their patch color and when they were done (Figure 3). This
meant that instructors could tell which patches thought they were being talked to and which were not, leading
them  to reiterate what "ask  patches," meant     ("ask ALL   patches").   Similar to the way Kiara positioned the
Observer  as a  messenger,  patches in  room    2 consisted   of a  system  of students  separate from  their  colored
squares.  This consistent social  structure made   processes  and   creations  visible, which  is not afforded  in the
computational   environment   of  NetLogo.     In both   rooms,   the   relational metaphor   of  the Observer-patch
relationship was further embodied by where students stood on the grid, continuing the development of differing
substrates which influenced how students interacted with the Observer's code and the squares they manipulated.

         Figure 3. In room 2, it was clear which students responded to a prompt and how they responded.

Order of translation
The differing substrates in each room were also influenced by the order in which facilitators translated between
NetLogo code and colloquial English when presenting code for students to interpret as patches. This led to the
development of different frames for enacting code. Tracy used an encoding frame: she began with colloquial
English  and then  translated her commands     into NetLogo    code.   Kiara  used  a decoding   frame: she  began by
asking students to interpret NetLogo code and once it was performed she translated it into colloquial English.
         In room 1, Tracy began by describing the first command to the patches as a desired process in plain
English words and praised students for quickly understanding the code, although she had not yet discussed the

CSCL 2019 Proceedings                                     516                                                   © ISLS
specific syntax needed for the computational patches in the computer to respond:

         So as the Observer, I might be thinking that I want to ask you all if you are black set it to red.
         So that might be something that I want to say and so since you all are, ((students manipulated
         their colored squares)) since you guys are all so smart and know both English and how we
         speak when we code, you guys already knew that if you were black you went ahead and set it
         to red. Did anybody not set it to red? No? All right, so the way we might ask this in coding
         language is, as the Observer, so I'm the Observer right now, I would say, "ask patches [if
         pcolor = black [set pcolor red]]"

Again, Tracy began by unifying herself as the Observer and commander, "I might be thinking I want to ask
you." It was Tracy's agency as a human Observer that dictated what the students as patches had to do, the idea
came  from  her. The    students quickly responded   by  changing   their colored squares to  red, although  nobody
questioned whether they had started with black squares. Students were initially handed their squares with black
on one side; however, students explored flipping through their colored squares on their own so by the time
Tracy called   out this command     not all students had their  colored   squares in the same  orientation--another
challenge due to their location and position in the grid. It is also unclear how Tracy quickly asserted that all
students correctly changed their colored squares to red, but her assertion, "since you guys are all so smart and
know both English and how we speak when we code, you guys already knew that if you were black you went
ahead and set it to red," was a pedagogical move in which Tracy gave students early, low-entry-level success
evident in their quick manipulation of their colored squares. Speaking in an English translation of the NetLogo
code  at first and asserting  students  interpretations as a   correct positioned  students as successful    from the
beginning before they started to encode the NetLogo translation of the same command.
         In room 2, Kiara and Neil gave the same command to their students' patches by first saying the specific
NetLogo code and then decoding its meaning, framing coding as a process of interpretation:

         Kiara: So it tells me to ask the patches, so here goes, "[if pcolor = black [set pcolor red]]"
         Neil:  What  do  you  think pcolor  means?   Patch  color. So  if patch  color equals black,   does
         anyone body think they might have a patch color that is black? Right?
         Kiara: What would set pcolor red mean? What do you think you'd have to do?
         Student: Turn it red.
         Kiara: Turn it to the red.
         Neil: All right.
         ((Students manipulated their colored squares, one row changing their black squares to red.))
         Kiara: So in everyday life we don't go around saying all the, all the people holding black just
         turn pcolor, turn the equal black now I want you to set pcolor red. Is that how we speak in
         everyday language?
         Students: No
         Kiara: No! That is our computer language, but if we translate that, what I actually said was
         "ask all patches," which is just this side right ((points to the row of students who changed
         their colored squares))? All patches is just this side right?
         Student: No
         Kiara: NO! It's who?
         Student: All of these
         Kiara: All of you! But I was only talking to which color first?
         Students: Black
         Kiara: Black. So it says ask all patches, which I asked everybody first, and then I said, "if
         your color is black," so you immediately looked down to see if you had black and it, I said,
         "set it to red," and they changed their cards to red.

Kiara began again by positioning herself in the Observer role as a messenger to the patches, "so it tells me to
ask the patches." This cued a syntax detail in the NetLogo code; "ask patches," which syntactically positioned
what  followed  as  a request  or command    spoken  to  patches to  follow. Kiara   and Neil  continued  by  talking
students through interpreting the new vocabulary and syntax. Right away, Neil chimed in asking students to

CSCL 2019 Proceedings                                    517                                                   © ISLS
interpret new   vocabulary,   asking  them what  pcolor meant    and  whose   pcolor   was black.  Kiara   continued   by
asking  students what  setting  pcolor   red might  mean.  Once   the  students  had   interpreted the  code    they then
proceeded to perform it: all of the students whose colored squares were black turned them to be red. Breaking
down the potentially intimidating code into smaller, digestible interpretative questions (e.g. What does pcolor
mean? What does set pcolor red mean?) facilitated students' early success interpreting their first line of code.
          Kiara emphasized that although NetLogo code is not how people normally talk, it is comprehendible
from   an embodied    patch perspective,   emphasizing  the  ego  syntonicity (Papert,  1980)  between     students   and
patches.  Through   this  translation process   she made   certain aspects   of  the  syntax  salient   to the  students,
emphasizing that although not all students changed their pcolors, they were all spoken to because "ask patches"
meant "ask all patches." Noting that the first step was to attend to noticing if one's patch color was black--"so
you immediately looked down to see if you had black"--was an important embodied interpretation of the code,
positioning all individual computational agents as needing to interpret the coded request. In room 2, not only
was the instructor playing the role of the Observer treated as a messenger, but the students themselves were a
distributed part of a patch-person-square-system as messengers to their colored squares. This decoding frame
positioned   students as  interpretive   agents  translating  NetLogo   syntax    into  actionable  English     that they
understood as humans in contrast to the encoding frame that developed in room 1 in which ideas were first
expressed in English by the agentic instructor/Observer and then translated back into NetLogo.

Differences in students' subsequent activity
The different structural pedagogical moves that instructors made in each room created differing substrates in
which two predominant student coding dispositions developed. Goodwin (2018) writes that substrates structure
subsequent activity and thus students' participation as the Observer provides evidence that different substrates
sedimented. Although students in both rooms engaged playfully as they took on the role of the Observer, they
utilized the different frames that developed in each room. In room 1, students engaged in an encoding frame by
first sharing complex     ideas for  the composite   image   that  eventually    over extended   even   the instructors'
computational   understandings,   stretching the group's  encoding    abilities. In contrast, the  students  in  room   2
engaged in a decoding frame in which they proposed much simpler code to the group, but communicated their
code directly using discourse that more closely resembled NetLogo syntax. We argue that room 1 enacted an
encoding   frame  for understanding    code  in  which  one   started from  open-ended     possibilities   that could  be
articulated in English and room 2 enacted an interpretive frame for understanding code in which interpretation
of a new language was foregrounded. Not only were different dispositions for how to code developing in these
two rooms, but the students that chose to participate as Observers differed in both rooms. In room 1, the most
vocal students, three boys with coding experience, volunteered to play the Observer, while in room 2 boys and
girls all of whom had no previous coding experience participated as Observers. The different substrates that
developed in each room influenced the subsequent activity as evidence in students' enactments of the Observer.

Student observers generated different prompts in each room
When    students were    given  the  opportunity  to  perform  the   part of  the   Observer  in   this  physical    ABM
environment, students in each room consistently enacted the different coding frames that had developed in each
room. Although both instructors asked students to try out their own ideas as the Observer, students in each room
took this up either as encoders, sharing their ideas first in English, or as decoders, sharing their ideas first in
NetLogo. In room 1, Tracy emphasized an encoding frame, telling each student Observer to first tell the group
what he wanted to happen and then make the same command in NetLogo: "So Kevin, you tell us what you want
to happen and then we're gonna help you translate it into a language that the patches understand." When student
Observers    shared their ideas  in   English, before  attempting  to  encode    them   in NetLogo,     student  patches
immediately started responding by manipulating their colored squares. When Charlie began as the Observer, he
shared with the class, "Ok, so first I want you to pick a random number from 0 to 5," and students immediately
began flipping through their colored squares. The social relationship between the Observer and patches was so
strong  that as soon  as  the Observer   started uttering commands,    the patches     immediately    responded.   Tracy,
however,   quickly  asked them   to  stop, "Ok,  hold up  patches, hold   up. He    was just  telling in   English   first."
Tracy's request that they wait for the official code ran counter to the students' understanding of their role, and
emphasized that patches could only understand the specifics of coding languages. Tracy also wrote the NetLogo
code on the whiteboard as students developed the code out loud, providing another representation of the code
and emphasizing the official syntax as what patches could respond to. This sequence of action was dependent on
the substrate that began to sediment throughout the activity as described previously.
          Similar to how Tracy positioned the student Observers in room 1, Kiara also encouraged the student
Observers to try out their own ideas with the group: "Are there any other ideas you want to try? Anybody want

CSCL 2019 Proceedings                                     518                                                      © ISLS
to be the Observer? ((One student raised his hand.)) Ok, you want to be the Observer? Ok, you go and I'll take
your place. And you tell us what you want us to do." Kiara asked students to share their ideas, not specifying
that they had to be in NetLogo or in English as Tracy had. The student Observers in room 2, however, all talked
in a manner that resembled NetLogo code. Their syntax was not perfect, but it was also clear that they were not
talking in colloquial English like the students in room 1. In contrast to student Observers in room 1, the students
in room 2 spent about half as much time in the Observer box, quickly reciting their code to their peers. The
barrier for entry seemed much lower in room 2 and although the ideas the student Observers tried were simpler
than in room 1, students' ability to speak in this new coded language and decode it as patches was much more
fluent. As substrates developed and sedimented in each room, students' understandings of how to code in this
ABM remained consistent with the encoding or decoding frame they established, reinforcing these dispositions.

Discussion and conclusion
Facilitation of these Stadium      Card Activities  appears   to afford   a wide range  of   choices. Even  with     tightly
scripted and  explicitly documented     materials,  we   found   that our teacher  partners  could  make  divergent    and
separately   coherent patterns     of facilitation choices,   that produced    (a) distinct   opportunities for      student
participants to experience intrinsic and extrinsic perspectives on their shared simulations, and (b) distinct images
of the nature of agent-based commands. Though our analysis is preliminary, these different facilitation choices
also  appeared  to be  consequential    for the    kinds of  creative  agent-based    programming   ideas   that  students
generated in the moment. In both cases, the activities succeeded in fostering creative expression, but there was a
distinct flavor to each  of   the  two  rooms,  resonant    with  the  choices the  facilitators made.  The   social   and
embodied performances of the infrastructure of an ABM environment was an accessible way for learners to
grapple with important computational ideas with a lively tone that invited expressive play. In our next design
iteration we hope to explore students' participation in a similar activity that allows students to leverage both
intrinsic and extrinsic perspectives and explicitly acknowledges these the two frames for coding (encoding and
decoding) that we saw develop in this first design iteration.
         In addition, creating visual effects on an embodied patch matrix at a small scale provided learners with
a "mid-level"   (Levy &   Wilensky,     2008) conception    of  expressive   designs. The  Stadium    Cards provided    an
activity-type for thinking with patches, which addresses core ideas in that area. These activities can be seen as
providing  experiences   that fill an  analogous   role  to that played   by basic work   in turtle graphics,    for turtles
(movable agents). To fulfill an expressive function, patches must be thought of in groups, and recognizable
visual forms only become coherent with an enormous number of patches (think of the unit of the megapixel),
but a mid-level scale of patches is accessible to learners and gives them an entry point to think about dynamic,
computational images as composed of a grid of individually programmable patches/pixels.

Endnote
(1)  In these transcripts, whenever anybody read NetLogo code aloud we transcribed their verbalization as the written code
     itself. This was done to emphasize the syntactical differences between NetLogo code and colloquial English.

References
Bontá, P., Papert, A., & Silverman, B. (2010). Turtle, art, turtleart. Proceedings of Constructionism 2010.
Fine, G.  A. (1979).  Small   Groups    and Culture   Creation:   The  Idioculture of  Little League   Baseball      Teams.
         American Sociological Review, 44(5), 733. https://doi.org/10.2307/2094525
Goodwin, C. (2017). Co-operative action. Cambridge University Press.
Levy, S. T., & Wilensky, U. (2008). Inventing a "mid level" to make ends meet: Reasoning between the levels
         of complexity. Cognition and Instruction, 26(1), 1-47.
Papert, S. (1980). Mindstorms: Children, computers, and powerful ideas. Basic Books, Inc..
Resnick, M., Maloney, J., Monroy-Hernández, A., Rusk, N., Eastmond, E., Brennan, K., ... & Kafai, Y. (2009).
         Scratch: programming for all. Communications of the ACM, 52(11), 60-67.
Resnick,M., & Wilensky, U. (1998). Diving into complexity: Developing probabilistic decentralized thinking
         through role-playing activities. The Journal of the Learning Sciences, 7(2), 153-172..
Wilensky,    U. 1999.    NetLogo. http://ccl.northwestern.edu/netlogo/.       Center   for   Connected   Learning      and
         Computer-Based Modeling, Northwestern University. Evanston, IL.

Acknowledgments
This material is based upon work supported by the National Science Foundation under No. 1742257.

CSCL 2019 Proceedings                                       519                                                      © ISLS
