Proceedings of CSCL 2002                                                                                               page   716

    Integrating Collaborative Concept Mapping Tools with
                    Group Memory and Retrieval Functions
                                           H. Ulrich Hoppe, Katrin Gaßner
                                           University of Duisburg, Germany
                                      {hoppe,gassner}@informatik.uni-duisburg.de
ABSTRACT
The provision of shared visual representations is considered to be an important facilitator for creative processes in group
working and learning scenarios. Although reusability is an inherent feature of computerised representations in general, a
comparative analysis of existing tools shows clear deficits in this respect. We are convinced that reusability and thus
sustainability of the results of co-constructive group work can be much enhanced by integrating visual environments with
functions for indexing, archiving and retrieval to support the construction of group memories. This is exemplified with a
new tool which supports creative working groups in the area of "trend monitoring" and technology transfer. This is an
example of organisational learning, but also more standard learning scenarios may benefit from this technology.

Keywords
collaborative visual languages, co-construction, group memory, life-long learning

INTRODUCTION
The co-constructive use of shared visual representations is considered to be an important facilitator for creative processes in
group working and learning scenarios. The perspectives range from small learning groups in educational scenarios to
learning organisations.   The  basic  function supported   by shared  visual representations   is  externalisation. According   to
Nonaka (1994), externalisation plays an important role in "organisational knowledge creation", namely in that it supports
the transition from tacit, individual to explicit knowledge.
In computer-supported collaborative learning scenarios, shared workspaces with more or less specific visual representations
are used  to   facilitate and to enrich    synchronous  communication   and   collaboration.   Typical applications    are   group
discussions (Conklin & Begeman, 1987; Streitz et al., 1998; Hoppe et al., 2000; Gaßner, 2001), scientific argumentation
(Suthers et  al., 1997),   scientific modelling (v. Joolingen,  2000;  Pinkwart  et    al., 2001), group   design   (Stahl, 2000).
According to Hoppe & Plötzner (1999) shared workspace environments support the following types of cognitive processes
within the learning group:
·     coordination of individual contributions or action through external constraints of the shared workspace,
·     reification of contributions as manipulable objects,
·     "mise en relation" (in a Piagetian sense) by visually relating individual contributions to each other using a spatial
      metaphor,
·     reuse of group results (e.g., for reflection, comparison, further elaboration).
Reusability is, of course, an inherent feature of computerised representations in general. Yet, a critical analysis of existing
tools shows that it is usually not very explicitly supported (see below). The main concern appears to be the provision of a
rich, flexible  and expressive   environment   for  the collaborative sessions, i.e.,   the  collaborative session  is essentially
conceived as a closed event. We are convinced that reusability and thus sustainability of the results of co-constructive group
work can be much enhanced by integrating visual environments with functions for indexing, archiving and retrieval to
support the construction of group memories.
Similar orientations have been developed from a knowledge management perspective (e.g., Borghoff & Pareschi, 1998) or
from the needs of supporting collaborative design activities (Stahl, 2000). A combination of concept mapping techniques
and discussion support in the IBIS tradition with group memory functions has also been pursued in the Compendium
approach (Selvin et al., 2001). Although we share the basic orientations, our approach is different in so far as it evolved as a
smaller bottom-up activity, driven by the practical need of adapting an existing collaborative visual language framework to
the needs of certain creative group processes.

ANALYSIS OF EXISTING SYSTEMS AND TOOLS
The following synopsis and comparison is targeted at collaborative visual language environments. In general, we see these
as characterised by these features:
·     provision of shareable representations in visual, graph-structured format
·     co-constructive editing facilities
Proceedings of CSCL 2002                                                                                             page  717

·   support of certain methodologies for brainstorming, knowledge management, learning, etc.
An early account of the notion of "visual languages for co-operation" which is very much congruent with our understanding
has been given by Lakin (1990).

Examples
The gIBIS system (Conklin & Begemann, 1987) is an early example of using visual languages to represent and elaborate
arguments during a design process. It is used cooperatively yet asynchronously. It is based on a conceptual representation
but does not provide operational semantics in the sense of automatic processing. The visualisation of the arguments and
ideas is expected to make the design process more rational. As a spin-off, a documentation is obtained and important
concepts may be explicitly recognised.
Another example that stresses more the aspect of workflow semantics is the SEPIA system (Streitz et al., 1992). SEPIA,
developed for   the cooperative    design   of hypermedia   documents,      offers four  types  of visual languages: planning,
argumentation, content and a rhetorical space. Particularly the argumentation space uses a graph representation derived
from S. Toulmin's argument patterns. The generation of some types of contributions in one workspace causes the automatic
generation of an adequate object in another, which is an invitation for further exploration. The SEPIA system has later been
modified to support face-to-face meetings and discussions. This system called Dolphin supports also free-hand-drawing and
handwriting (Streitz et al., 1998). Since Dolphin is based on SEPIA, though not every SEPIA feature is offered, we will
treat the "union" of the two systems as one.
In the CSILE environment (Scardamalia et al., 1992) learners construct knowledge cooperatively by creating a base of
learning material which integrates graphics and text. This "community database" is extended through critical annotations of
documents which capture a flow of a discussion and knowledge refinement. The working procedure is distributed and
asynchronous. Documents in the database are not linked but can be searched which allows using existing material in several
contexts. Although CSILE is not primarily based on a structured visual representation, we have considered it since it is a
collaborative learning environment with interesting group memory features.
The Belvedere   system (Suthers    et al., 1995)   was designed    to teach students scientific argumentation. It uses a graph
notation similar to SEPIA's rhetorical space. It offers two types of content objects, data and hypotheses. By using the
system, argumentation rules such as "hypotheses not supported by data are not accepted" should be understood. Via an
agent, the system analyses the developed structure and points out missing relations. In recent versions, co-operation is
supported by the means of a shared workspace environment (Suthers et al., 1997).
The CardBoard   environment    (Gaßner     et al., 1998) allows for   creating multiple  visual languages  by  parameterising a
general shared workspace environment. A particular language profile specifies the syntax of the respective visual language
in terms of a set of relations ("connector cards"), their argument slots, and the basic object types ("content cards"). To add
semantics in terms of domain models or knowledge bases, an interface is provided that transfers actions from the visual
language environment to the semantic plug-in component (Mühlenbrock, Tewissen & Hoppe, 1997). This architecture
allows for flexibly defining semantically enriched tools, such as, e.g., a cooperative editor and simulator for Petri Nets
(Wagler, 1998) or a discussion environment (Gaßner, 2001). The same plug-in architecture has also been used for analysing
action patterns in collaborative learning and problem solving scenarios (Mühlenbrock & Hoppe, 1999).

Comparison
We will use the following criteria to classify collaboration support systems under the perspective of supporting knowledge
management and a knowledge flow, e.g. for organisational learning (criteria are not meant to be descriptive not to judge the
systems as better or worse):
·   Domain independence: Specific methods such as cooperative text planning or brainstorming need specialised tools.
    The question is how flexibly the system can be adapted to different representations and forms of usage.
·   Shared workspaces (and shared objects) are essential for cooperative work in distributed, both distance and face-to-
    face, scenarios. The reification feature depends on shared objects.
·   Applicability in synchronous mode.
·   Applicability in asynchronous mode (e.g., discussion threads or group archives).
·   Flexible definition of language syntax: It should be easy to define different visual representations on a syntactic level
    without having to reprogram the system.
·   Externally definable semantics: The provision of mechanisms to plug-in components defining object semantics or
    operational semantics    (e.g. in  modelling    applications). Enables   intelligent background  processes  to support the
    workflow as well constraint-checking of solutions.
Proceedings of CSCL 2002                                                                                              page 718

·   System driven interpretations of states or processes can support special perspectives on the visual maps. This can
    increase the awareness for the users.
·   Repositories can   be provided    not only for  storing and accessing   intermediate  or final products,  but also to  store
    processes or action histories. Can be combined with annotation facilities.
·   Replicated architectures in which application data are synchronised but maintained autonomously in several places of
    the distributed environment allow for flexible sharing models (co-existence of private and public workspaces) and
    robustness (recovery).
·   Integration  of  common     media formats  (text, graphics, sound,    animations)  is important   for a  unified knowledge
    management across different representations and tools.
·   Free-hand input: In our experience, free-hand input facilities (hand writing, sketching) are particularly well-suited to
    support informal, creative processes, as e.g. in brainstorming sessions where typing is disruptive.
·   Explicit support of process models means that the system supports different working phases or working goals, usually
    in accordance with certain discussion styles or learning methods.
·   Media repositories: Independent of the products developed with the specific tool, repositories of foreign material in
    common formats can be provided. Here, good retrieval functions are of particular interest.
                                                                           CSILE           SEPIA/              GIBIS
                                   Belvedere          CardBoard                            Dolphin
Domain independence                         o                 +              +                +                   +
Shared workspaces                           +                 +              -                +                   -
Asynchronous work                           ?                 -              +                +                   +
Synchronous communication                   +                 +              -                +                   -
Flexible definition of                      -                 +              -                -                   -
language syntax
Externally definable semantics              -                 +              -                -                   -
System driven interpretation of           through     through                -                -                   -
states or processes (filters)             agents      plug-in
Repositories                              product       action protocol,     +              product               +
                                       repository       no product DB                      repository
Replicated data maintenance                 -                 +              -                -                   -
Process models                        argumentation      - (Gaßner et    (implicit)     different visual          +
(workflow support)                        patterns        al.,1998)                        languages
                                                      + (Gaßner, 2001)                  for diff. phases
Integration of common                       -                 +              +                +                   -
media formats
Free hand input                             -                 +              -                +                   +
Media repositories                     (in learning           -              +                -                   -
                                       material)
                                                        Table 1: Comparison of collaborative environments
The distribution of positive marks indicates that the design of these systems was very much targeted at the first group of
features. The second group of criteria is inspired by the engineering of standardising and "factoring out" certain generic
functions that has guided an essential portion of our work on CardBoard. Replication (criterion 9) is of more general
interest since it allows for very flexible forms of interaction in synchronous mode.
Generally, the last two groups of criteria reflect in some way or other system features which are desirable to support the
sustainability and reusability of the work done in a collaborative environment. Yet looking at the distribution of marks,
here, gives a too positive picture. Even if specific support is provided, there is one restriction: information access functions
and "indexed archives" are usually confined to the products of the system itself, i.e., there is no real interoperability to share
knowledge elements with external sources (e.g., by importing resources from the web or by exchanging elements with a
general corporate memory). So, the main problem is that current systems are not open! We will particularly address this
challenge in the case study reported below.

Extensions of collaborative visual language environments
In most cases,   the   development  of  more   or  less generic visual   language   environments   aims   at obtaining easy-to-
communicate visualisations rather than at providing (seem-)formal machine-interpretable representations. The focus is on
Proceedings of CSCL 2002                                                                                            page   719

interactive tools and  interfaces to  represent  a domain  or  support a   certain  task, not on system-internal structure  and
semantics. In contrast to the generic cooperative environments mentioned, specific tools like STELLA (http://www.hps-
inc.com) or Rational Rose (http://www.rational.com) provide visual interfaces for existing model semantics, as e.g. "system
dynamics" in the case of STELLA or UML in the case of Rational Rose. They (implicitly) use visual languages and provide
a complete semantic interpretation to augment relations between nodes by operations.
A recent example of a collaborative learning environment based on a domain-specific visual language is the COLER
system (Constantine-Gonzalez & Suthers, 2000). COLER supports the co-construction of entity-relationship (ER) models
for database  modelling. A   current   redesign  and reimplementation    of the  CardBoard    environment   (JavaCardBoard)  is
focussed  at supporting  different   kinds  of more  or less  formalised visual  languages,   including Petri nets and   system
dynamics models, which can be mixed and combined with free-hand annotations (Pinkwart et al., 2001).
It  was also  Suthers  (1999) who     studied  and  reflected the impact    of different  visual tools  and representations on
collaborative learning discourse ("representational bias"). Typically, concrete representation systems come with inherent
characteristics which favour or inhibit certain aspects and thus influence learning and working styles.

CASE STUDY: SUPPORTING TREND MONITORING IN SMALL TEAMS
In the following we will describe a modification of the CardBoard environment which has been developed to support small
working groups monitoring new trends in science and technology. As a result, a new system, called FreeStyler has been
developed based on the requirements defined and assessed with two application sites: the technology transfer department
(TTD) of our university and a "pilot development group" in a large European company. Although the scenario is not
primarily a  learning  scenario,  it involves  aspects of organisational   learning and   the incremental building of  a group
memory.
Since the role of TTD is to act as a transmission interface between university and industry, a "trend" cannot be determined
by  a retrospective of cases  but    rather as a combination  of  existing information    and new  requests the TTD   receives.
Information connections result in a structure that is the TTD-perspective on a trend and its information context. The daily
work of TTD consists largely of personal consulting through which individual solutions for co-operation opportunities have
to be found (Figure 20). More or less static information prepared for the web turned out to be not adequate for such a
dynamic process and was also not well-suited to support internal information exchange. The consulting process includes
phases in which only hand-written notes are useful, phases where information is exchanged and phases in which multiple
media have to be put into a common context.
From a representational and media point of view, the system supports free-hand input to be able to smoothly support
informal creative processes, structured representations (discussion graphs, models) as well as certain visual representations
of data collections. All these features are equally interesting for many learning scenarios such as scientific argumentation
and modelling.

                                                       Figure 20: Basic dependencies and requirements
For the TTD, trend monitoring and consulting is a continuous, long term process as shown in Figure 21. In most cases,
hand-written notes are taken during a first telephone contact and are a basis for further meetings. Open questions are fixed
Proceedings of CSCL 2002                                                                                           page 720

to be further annotated and elaborated on, new documents are added or old documents are linked. Such a preparation of
materials represents the input for a later meeting that might lead to another accumulation of media and materials.

                                                 Figure 21: Document flow related to trend monitoring
It is a general observation, that externalisation forms the bottleneck of knowledge management projects which try to
integrate dynamic process information. In our approach, we provide semi-structured, heterogeneous representations which
can be refined and grow. The document flow does not introduce new procedures or formalities as compared to the original
process which was only partially computerised. The benefit that we expect to gain by providing integrated support for this
process lies in the avoidance of representational discontinuities and of interoperability deficits.

Technical features
In the following, the main features of the TTD knowledge management system are introduced. Figure 22 shows the overall
system architecture and main interactions. The user interface is introduced in the next subsection which also includes an
example of the evolution of a document.
Proceedings of CSCL 2002                                                                                                                page 721

                                                     Paging               Layermanagement

                            FreeStyler                                           Keywords

      Visual Language
      objects

     Pageinteractions                                                             AddingCatchword
 Save maps in               Organization of                                       informationFull text search onIndexed filesSupport of specialrequests
 XML-format                 general file indexing

     File System                            Search engine                          Database for catchword
                                                                                   organization

                            Indexes all common file
                            formats including XML
                            format

                                                               Figure 22: System overview

Visual language
FreeStyler is a Java application that interacts with a powerful search engine (Verity, cf. www.verity.com) and a database
system. A visual language is used to structure the content. Predefined shapes provided on a palette represent different input
types to distinguish different elements in the elaboration and analysis of an issue. A clear distinction of contribution types
using shapes and colours supports the interpretation of material by other users. Hand-written annotations can be added
flexibly.

Easy paging through workspace elements
The application offers pages to structure a document. By the use of "page tabs" (on top of the workspace) it is easy to go
directly to a page without scrolling. Pages can be named by the user. Each page offers, in turn, a couple of layers in order to
stratify different levels of input. There are layers for hand-written input and for the entries. The layer sequence can be
changed and can be switched off. This allows for representing different levels of detail and different perspectives.

User-definable hyperlinks
User-definable internal links can be added as specific elements to the workspace. Their content is the link address which
points to another page represented by its marker. It is possible to add multiple markers to pages which are shown as headers
on the page tabs. Another entry type can also be used for external links to URLs and files. According to the file type, an
appropriate viewer is selected and invoked when the node is activated.

Embedding of objects representing data collections or documents
The same type of entries that are used for external links are also used to represent document collections.

Embedding query objects
List entries also contain query results of the search engine which realises a full text search on the common file formats e.g.
.doc, .pdf, .xml, .txt, etc. Using the Java Native Interface the query is handled by a Dynamic Link Library which uses the
API of the search engine. The result is given back to the application and the retrieved documents are listed in the list entry.
There they can be accessed interactively. The associated database offers other query possibilities: It allows for associating
keywords with files and to ask for newest keywords and e.g. connections among keywords. To express these queries, the
Java-SQL interface is used.
Proceedings of CSCL 2002                                                                                             page  722

XML format
The developed materials are called "maps", following the idea of concept mapping. They are saved in XML format using
the Java DOM interface. In connection with the search engine which is also able to search XML format, the maps can be
searched as well. Using the keywords, which are also saved to the XML files, maps can be interrelated using the search
engine.
The TTD working process includes both synchronous and asynchronous co-operation. The search mechanisms support also
the asynchronous access to documents. The development of materials by different authors is intended and supported.
Integrated mail facilities allow for notifying group members about new occurrences. To reach more flexibility, documents
can either be referred inside the mail or the whole document can be sent. For the latter, it is possible either to send the XML
file or a version transformed to a graphics format. Mailing lists can be defined during the work with a document for
automatic notification.
Currently, FreeStyler is either used individually or in face-to-face meetings with a big interactive display. Mostly, co-
operation occurs in asynchronous mode.

Example
The following group of figures show the process of developing a map. In Figure 23, FreeStyler contains first notes that
have been entered during a telephone call. A person from industry has asked for a contact to a university group that works
on the topic of fuel cells. The notes include typical questions at that stage for more detailed elaboration. The "client" asked
for references to former projects and for information on the topic in general. He is also interested in published results. The
right hand side of the application window contains the keyword entry section (for indexing). Here, also name and address
of the contact person are noted.
Figure 24 shows the result of a first preparation phase wherein a user adds some information requests. Subsequently, some
pages have been added. The links on the page (small circles) relate different aspects to this new material put to the linked
pages.

                        Figure 23                                                    Figure 24
Figure  25 represents   a page  with institutional contacts. The  institutions are listed in  entries that are again related to
corresponding URLs. Later, during a meeting, it is a very easy to follow that link for more information and, e.g., to discuss
the relevance of such a contact. This is a typical activity during a meeting with experts because the TTD itself does not have
detailed content  expertise for  each scientific field  or topic and cannot  decide  on   beforehand  which  contact might   be
interesting for an industry partner. On the right hand side of the screen, a web browser has been invoked with a requested
URL. If the content of the list node had been a file path, the appropriate viewer would have been called to show the file by
double clicking on the node.
Figure 26 shows a more content oriented page that might be a central part of a trend documentation. The map represents
information on "fuel cells". Therefore, general concepts and background information are combined in a structured way. In
this figure, multiple entries are integrated: Some entries represent information associated with the trend. Another is a
graphical  entry. The opened    dialogue allows    for searching the indexed   documents   of the file  system  concerning   the
requested concept. This dialogue window covers a list node with results from a previous request.
Proceedings of CSCL 2002                                                                                       page 723

                        Figure 25                                                Figure 26
Figure 27 shows the possible use of FreeStyler for concept mapping enhanced with free hand annotations. The dialogue
supports the request for files that are associated with special keywords. Based on the result, the concepts in this map can be
related to available other material.
Figure 28 is an example of a comprehensive representation that is easily re-usable. Based on a geographical map, internal
links are added which show where contacts to fuel cell producers are available. The links point to other FreeStyler pages
that give more information about this concrete company.

                        Figure 27                                                Figure 28
Through a dialogue, a FreeStyler map can be indexed with keywords. Already existing keywords are shown on the left.
Putting a new keyword, the list on the left goes to the alphabetically closest existing word to avoid the entry of similar and
potentially redundant keywords (synonyms ­ homonyms).

DISCUSSION
FreeStyler is currently being evaluated in everyday use in our TTD. At a first glance, organising technology transfer is still
a tough problem, in contrast to which the use of FreeStyler is smooth and straightforward. Detailed evaluation results will
be available soon.
We see the following analogies between our case study in trend monitoring and general functions for collaborative learning
environments:
·   The "trend monitoring" activity corresponds to learning activities in which students themselves explore a given theme
    or problem by searching relevant information, associating and elaborating this information and by documenting the
    results. This is typical for problem-based learning (Koschmann et al., 1996), but also for other types of open learning
    situations.
·   "Trends"    in our scenario correspond  to "themes" in learning situations. FreeStyler allows for treating themes as
    moving targets, i.e., for moving from one are of interest to others, while maintaining a structured record of what has
    been done.
Proceedings of CSCL 2002                                                                                                page  724

·    The system is open (see requirements formulated above) in that it can search and integrate external sources in arbitrary
     format as long as the standard search engine is able to handle these. References to external sources are objects within
     the system.
·    The system maintains a base of index terms in the form of a rudimentary thesaurus. We would implement a full
     thesaurus support only if practically needed. Yet, we have already identified one very interesting feature: The detection
     of new  terms  in  our TTD    application may    indicate a new    trend (an  "innovation") which   is usually much     more
     interesting than the assignment of an already existing term. Accordingly, in learning, the appearance of a new theme
     may indicate new learning opportunities and may trigger certain types of "innovative" group processes.
Technically, the FreeStyler system is currently unified with the new version of the CardBoard environment which supports
various palettes of languages at a time (e.g. to facilitate modelling). Also this opens new application perspectives.

ACKNOWLEDGMENTS
We   thank Jörg  Dixkens    and  his colleagues from   the TTD    for   his valuable  input and  insightful suggestions.   In  the
implementation work we were strongly supported by our student collaborators Martin Fendrich and Stefan Buschmann.
This work    was partially  supported  by grants from   the    Ministry of  Science  and  Technology   of   the Federal  State of
Nordrhein-Westfalen and Mannesmann Pilotentwicklung (now Vodafone).

REFERENCES
Borghoff, U. M. & Pareschi, R. (1998). Information technology for knowledge management. Berlin, Heidelberg, New York:
         Springer.
Conklin,  J. &   Begemann,   M.   L.  (1987).  gIBIS:  A  hypertext   tool  for team  design  deliberation.  In  Proceedings   of
         Hypertext'87 (pp. 247-251). Chapel Hill (North Carolina).
Constantino-Gonzalez, M. A., Suthers, D. (2000). A coached collaborative learning environment for Entity-Relationship
         modeling. In Gauthier, G., Frasson, C., VanLehn, K. (eds.), Proceedings of the 5th International Conference on
         Intelligent Tutoring Systems ITS 2000 (pp. 252-261), Montreal, June 2000: Springer.
Gaßner, K., Tewissen, F., Mühlenbrock, M., Loesch, A. & Hoppe, H. U. (1998). Intelligently supported collaborative
         learning  environments    based  on   visual languages:  a  generic    approach. In Darses,   F. &     Zaraté, P. (eds.),
         Proceedings    of  3rd International  Conference   on   the  Design    of Cooperative   Systems  (pp.   47-55).   Cannes
         (Frankreich).
Gaßner, K. (2001). Architecture of a Cooperative Discussion Environment based on Visual Languages. In. Dillenbourg, P.,
         Eurelings, A.   &  Hakkarainen,   K.  (eds.). Proceedings    of the   European   Conference   on   Computer-Supported
         Collaborative Learning (EuroCSCL-2001) (pp. 261-268). Maastricht, The Netherlands, March 2001.
Hoppe, H. U., Gaßner, K., Mühlenbrock, M. & Tewissen, F. (2000). Distributed visual language environments for co-
         operation and learning: Applications and intelligent support. In Group Decision and Negotiation, 9(3), 205-220.
v. Joolingen, W. (2000). Designing for collaborative discovery learning. In Gauthier, G. Frasson, C. & VanLehn, K.(eds.),
         Proceedings of the 5th International Conference on Intelligent Tutoring Systems ITS 2000 (pp. 202-211). Berlin et
         al.: Springer.
Koschmann, T., Kelson, A.C., Feltovich, P.J. & Barrows, H.S. (1996). Computer-supported problem-based learning: a
         principled approach to the use of computers in collaborative learning. In Koschmann, T.D. (ed.). CSCL: Theory
         and Practice of an Emerging Paradigm (pp. 83-124). Hillsdale, NJ: Lawrence Erlbaum.
Lakin, F. (1990). Visual languages for co-operation: a performing medium approach to systems for cooperative work. In
         Galegher, J., Kraut, R. & Egido, C. (eds.). Intellectual Teamwork (pp. 453-488). Hillsdale, NJ: Lawrence Erlbaum.
Nonaka, I. (1994). A Dynamic Theory of Organisational Knowledge Creation. Organization Science 5 (1), 14-37.
Pinkwart, N., Hoppe, H.U., & Gaßner, K. (2001). Integration of domain-specific elements into visual language based
         collaborative  environments.    Accepted  for   Proceedings    of  CRIWG     2001  (Int.'l Workshop     on Groupware,
         Darmstadt, Germany, September 2001).
Scardamalia, M. & Bereiter, C. (1992). An Architecture for Collaborative Knowledge Building. In De Corte, E., Linn,
         M.C., Mandl, H. & Verschaffel, L. (eds.), Computer-Based learning environments and problem solving (NATO
         ASI Series, Vol. 84) (S. 41-66). Berlin Heidelberg: Springer-Verlag.
Scardamalia, M., Bereiter, C., Brett, C., Burtis, P. J., Calhoun, C. & Smith Lea, N. (1992). Educational applications of a
         networked communal database. Interactive Learning Environments, 2(1), 45-71.
Proceedings of CSCL 2002                                                                                      page 725

Selvin, A., Buckingham Shum, S., Sierhuis, M., Conklin, J., Zimmermann, B., Palus, C., Drath, W., Horth, D., Domingue,
       J., Motta, E., Li, G. (2001). Compendium: Making Meetings into Knowledge Events. The Open University, Milton
       Keynes (UK), KMI-TR-103 (www.kmi.open.ac.uk/tr/papers/kmi-tr-103.pdf).
Stahl, G. (2000). Collaborative information environments to support knowledge construction by communites. AI & Society
       14, 1-27.
Streitz, N., Geißler, J., Haake, J. & Hol, J. (1998). DOLPHIN: Integrated meeting support across Liveboards, local and
       remote desktop environments. In Fankhauser, P. & Ockenfeld, M. (eds.), Integrated publication and information
       systems. (S. 57-74). Darmstadt: GMD IPSI.
Streitz, N., Haake, J., Hannemann, J., Lemke, A., Schuler, W., Schütt, H. & Thüring, M. (1992). SEPIA: A cooperative
       hypermedia authoring environment. In Proceedings of the 4th ACM Conference on Hypertext(ECHT'92) (pp. 11-
       22). Milano (Italy).
Suthers, D. D. (1999). Representational bias as guidance for learning interactions: A research agenda. In Lajoie, S. P. &
       Vivet, M. (eds.), Artificial intelligence in education (pp. 121-128). Amsterdam: IOS Press.
Suthers, D., Toth, E. E., and Weiner, A. (1997). An integrated approach to implementing collaborative inquiry in the
       classroom. In Proceedings of CSCL '97 (Int.'l Conf. on Computer Supported Collaborative Learning, Toronto,
       Canada, December 1997), 272-279.
Suthers, D., Weiner, A., Connelly, J. & Paolucci, M. (1995). Belvedere: Engaging students in critical discussion of science
       and public policy issues. In Greer, J. (ed.), Proceedings of the 7th World Conference on Artificial Intelligence in
       Education (pp. 266-273). Whashington DC (USA).
TrendMonitoring (1999). Funded by the Ministry for Schools, Science, Economy and Research of the State Nordrhein-
       Westphalen (Gemany). http://www.uni-duisburg.de/THP/trendmonitoring/
Wagler, F. (1998). Erstellung eines Petrinetz-basierten Steuerungsmechanismus zur Behandlung von Turn-Taking-Regeln
       in Gruppen-interaktiven Spielen (Development of a petri net based controlling mechanism for the handling of turn-
       taking rules in interactive group games). Unpublished masters thesis. University of Duisburg,      Department of
       Mathematics and Computer Science.
