Proceedings of CSCL 2002                                                                                          page  237

G. (PEDAGOGY TRACK): COMPUTER SUPPORT TO SCAFFOLD
COLLABORATIVE LEARNING

Mapping Alternative Discourse Structures onto Computer
                                               Conferences
                                                     David Jonassen
                                           University of Missouri-Columbia
                                                    Jonassen@missouri.edu
                                                    Herbert Remidez
                                           University of Missouri-Columbia
                                                  Remidezh@missouri.edu

ABSTRACT
In this paper, we describe a constraint-based discussion board that we have developed. A number of discourse systems have
sought to constrain the ways that learners converse by requiring them to classify the nature of the comments and replies to
others' comments. Those systems imposed a single constraint system on learners. In our system, we enable users to adjust
the structure and content of the system in order to support a variety of discourses, including argumentation, problem-
solution, literary analysis, and any other kind of activity. We describe the rationale for the system and will demonstrate the
results of two discussions during the conference.

Keywords
CSCA, Alternative Discourse Structures, asynchronous learning

INTRODUCTION
Computer support for collaborative learning (CSCL) is a rapidly emerging paradigm. An important focus of CSCL work is
the development of discourse systems such as KIE (Bell and Linn, 1997), CaMILE (Guzdial, 1995), and the Collaboratory
Notebook (O'Neill & Gomez, 1994), and CSILE (Scardamalia & Bereiter, 1994) that are intended to scaffold domain-
specific conversations and problem solving. This paper describes the development and initial implementations of a web-
based environment     for constraining conversations  depending  on the nature   of the discourse you wish to  support. We
describe an  asynchronous     conferencing  environment    for supporting    shared meaning  making    among   members   of
collaborative groups with different learning tasks. Groups engaged in an activity (laboratory, simulation) or groups who
have been presented with an authentic problem by their instructor need to discuss the activities or problems in different
ways. While most scaffolded conferencing systems support a single discourse structure, the scaffolded discourse system
that we describe can be adapted to support alternative discourse structures.

WHY ARGUE? WARRANTS FOR ARGUMENTATION SCAFFOLDS
Effective collaborations require not only convergent activities but also shared meaning making. This shared knowledge
occurs through conversations about the meaning of the activities and their outcomes experienced by the collaborative
group. The goal of that conversation and the collaborative inquiry process that engages it is consensus building, which is
socially mediated through discourse (Meyer & Woodruff, 1995). Knowledge results from the gradual convergence of
informed  opinion. As     learners develop new ideas   and contribute them    to the  discourse, agreement emerges  in  the
development of shared knowledge. That shared knowledge is created through a process of convergent understanding and
"gradual refinement" (Roschelle, 1992). Since the knowledge is shared and owned by the discourse community, it is not
only apprehended better by the members but also more likely to be appropriated by the members. Such knowledge is more
meaningful and lasting to the members of the community than that which is dispensed by the teacher or professor, because
the members own the ideas. Dispensed knowledge is not shared and therefore not as likely to be appropriated by members
of the community, especially new members. Shared understanding through consensus-building also supports the mutual
interdependence of members of the discourse community, which is an essential characteristic of collaborative learning that
is too often ignored.
When  collaborations   involve  problem    solving, especially ill-structured problem   solving, argumentation is required.
Argumentation is a fundamental process of social negotiation through informal reasoning. Most attempts at negotiation do
Proceedings of CSCL 2002                                                                                                   page  238

not expose people's informal reasoning processes so that the group can reason collectively. In order to support social
negotiation, it is essential to make this informal reasoning explicit (Senge, 1990).
How do we facilitate learners' development of argumentation skills? Cerbin (1988) proposed that direct instruction on
reasoning   skills based on  an  explicit model  of argumentation.     Leeman      (1987)  and Saunders   (1994)     advocated  using
Toulmin's (1958) model of argument in law education class to develop argumentation skills. Several researchers have also
advocated direct instruction on the structure and notation of argumentation (Knudson, 1991; Sanders, Wiseman, & Gass,
1994;  Yeh,  1998).   However,   research  findings show     inconsistent results:  direct instruction  does   not   always  improve
argumentation skills as expected. Some research indicates that direct instruction enhances argumentation skills (Sanders,
Wiseman, & Gass, 1994), whereas other research demonstrates no positive effects for direct instruction on improving
argumentation skills (Knudson, 1991).
Technology can support social negotiation and the explication of informal reasoning in the form of argumentation through
computer-supported     collaborative argumentation   (CSCA).    CSCA      scaffolds  negotiation   of   solutions in  problem-based
learning, the situation in which we have chosen to implement our web-based argument tool.

CSCA AS SCAFFOLDING
CSCA    scaffolds   may  be of   two types, threaded   and   constraint-based.  The   threaded  discussion    is  a  simple  form   of
hierarchically structured, textual argumentation provided by discussion boards or bulletin board systems (BBS) (Zumbach
& Reimann, 1999). The threaded discussion shows the list of all the messages with headings, so learners do not have to
search through old messages unrelated to the discussion topic. In a typical use of the threaded discussion, an instructor
specifies a topic heading in advance and has learners associate their input such as opinions, messages, or issues with the
topic. Their inputs are organized around topics and subtopics (Klemm & Snell, 1998) that emerge in the discussion. That is,
the discussion is not prestructured. Thus, the threaded discussion provides a medium for topically organizing a discussion
(Scardamalia & Bereiter, 1994).
The second kind of conversation scaffold is constraint-based. The concept of constraints has been used in a variety of ways
in the psychology literature. Reading researchers have explored syntactic and lexical constraints on meaning generation
while parsing sentences. In problem-solving research, constraints are the set of possible combinations of values between
variables in  the   problem  to  be  progressively  restricted (satisfied)   during  problem    solving   (Darses,    1991;  Richard,
Poitrenaud, & Tijus, 1993). Chi, Slotta, and de Leeuw (1994) describe constraint-based interaction in defined systems that
behave  according   to principled  interactions or  two   or more values    in the  systems.   These    interactions  can be defined
canonically. It is important to note that these constraints are implicit in the problem. Any conceptual system (from a simple
sentence  to a  complex   conceptual  domain)   consists  of  attributes  with values  that   interact. Those   interactions impose
constraints  on the  psychological   processes  required  to operate on   that system.    Those  constraints   must   be  satisfied or
eliminated in order for the processes to be completed.
Constraint-based CSCA conversation scaffolds, on the other hand, are prestructured forms of conversation systems that
impose different conversational ontologies onto the discussion. These ontologies make explicit the constraints involved in
the conversation. They supply the explicit statements of the interactions among the attributes in the domain. Users supply
the values for the attributes. Preclassifying conversational attributes to fit these sets of canonical relations constrains the
nature of   verbal  interactions among    conversants. The   Belvedere    environment,    for example,   provides    four  predefined
argumentation   constraints ("hypothesis,"  "data," "principles,"  and    "unspecified")   and  three   links ("for," "against," and
"and") (Suthers, 1998). These constraints form the links or relations between the ideas that conversants produce.
Many   of   these  constaint-based   CSCA   systems    have  graphical   interfaces  that  utilize node-link   graphs    representing
argumentation or evidential relationships between assertions (Suthers, 1998). Like semantic networking tools that provide
visual and textual tools for developing concept maps, these graphical interfaces provide learners with a visualization of an
argument, so they can view the entire argument and manipulate it with ease (Suthers, 1998). Visualizing argumentation
enables   students  and  faculty  to see  its  structure, thus  facilitating   its more   rigorous  construction     and  subsequent
communication (Buckingham Shum et al., 1997). It also helps learners visualize and identify "the important ideas in a
debate as concrete objects that can be pointed to, linked to other objects, and discussed" (Suthers & Jones, 1997, p. 1). The
primary purpose of most constraint-based conversation systems to date is to support the student's ability to seek warrants as
supporting evidence for claims. Bell and Linn (1997) suggest that conjecturing (with warrants, as opposed to descriptions)
to support arguments provides evidence that students are making scientific conjectures, which enables them to generate
more cogent problem solutions.

CONTEXT:           SUPPORTING             THE       CONSTRUCTION                   OF     SHARED         KNOWLEDGE                  IN
UNIVERSITIES
While   the  construction   of shared  knowledge    occurs   naturally   in  authentic  work   groups    (project   teams,  scientific
communities, etc.), the structure and methods employed in most university courses do not support these processes. Most
Proceedings of CSCL 2002                                                                                       page   239

instructional activities, such as laboratories and writing assignments, are individualistic. However, trends toward to the
integration of active and collaborative learning methods in large universities are changing the activity structures of many
courses. Unfortunately, many of those efforts are only marginally effective because the students do not construct shared
knowledge through discourse processes about the activities. They may learn how to cooperate adequately through division
of labor, but socially constructing shared meaning about their activities requires    that they know how  to discuss their
activities in meaningful ways. More often than not, students do not possess these skills, largely because they have seldom
been encouraged or required to meaningfully discuss what they are doing. Student opinions are not sought or valued.

IMPLEMENTATION OF CSCA ENVIRONMENT
The scaffolded discourse environment that we are testing is derived from a generic asynchronous conferencing forum.
When creating a new forum in our environment, instructors first much chose whether to create a scaffolded forum or a
generic forum (see Figure 1).

                                         Figure 1. Creating a Discussion Board
If the instructor chooses to create a scaffolded forum, s/he must enter a title and description for the forum. Next, s/he
defines the message types from which the student will be able to choose (ex: Problem, Solution Proposal, Support Proposal,
etc.) and defines the name and the description for each message type (see Figure 2).
Proceedings of CSCL 2002                                                                                page 240

                                      Figure 2. Creating Message Types
After specifying all the message types, the third step is to create the input format for each message type (see Figure 3). For
example, an instructor can specify that all problem statements should be composed of a text block (a.k.a. text area in
HTML) labeled "Problem Statement" and another text block labeled "People Affected by The Problem". Currently, the
system only supports combining text blocks and text lines (a.k.a. text fields in HTML) to construct input types, but we
anticipate enhancing the system to support other input types such as check boxes and pull-down menus. There is no limit to
the number of text blocks or text lines that a message type can contain; however, all message types require a subject line.

                              Figure 3. Creating the input format for message types.
Proceedings of CSCL 2002                                                                                         page  241

The  fourth  step is to specify  the relationships between  the  message types  (see Figure 4). The instructor  specifies the
message type relationships by checking which message types are allowed to respond to other message types. For example,
the discourse structure that we are testing defines 14 types of statements (see Table 1). Like Toulmin's argument structure,
we have grouped the types of statements that make up an argument into four levels (problem, proposal, warrant, and
evidence). The hierarchical structure that we have defined constrains users' comments and message response structures. At
the problem   level, the instructor  posts a  problem   statement which  student only  can  respond to using proposal-level
statements. Proposal-level statements include solution proposals, position statements, and administration policy or law
statements, and can be responded to with warrant-level statements. Warrant-level statements include support statements,
clarify/re-interpret requests, rebut/reject statements, and problem redefinition statements. Warrant-level statements can only
be responded to with evidence-level statements, which include facts/statistics/evidence, personal opinion/belief, personal
experience/observation, theory/law, other's experience, and common knowledge. Although this defines the argumentation
structure we have chosen to implement, the conferencing systems we are developing can be adapted to support multiple
structures. After specifying the relationship the message types can take on, the fifth step is to create the board. In addition to
supporting the creation of scaffolding structures, we anticipate the system supporting the ability to save, load, and share
structures.

                                    Figure 4. Defining relationships between message types.
The  scaffolded    discourse    environment   that  we  describe  functions  within  the  Shadow    netWorkspaceTM  (SNS)
(http://sns.internetschools.org). SNS is a Web-based work environment designed and developed to support schools and
universities. Much like a personal computer's desktop SNS provides a personal workspace for organizing, storing and
accessing files and an environment for running applications. SNS also provides the ability to create groups and for each
group to have a "group desktop" for file sharing, communication, and collaboration. Because it is Web-based, teachers and
students can access their workspaces from any computer that can access the World Wide Web, and partners (parents or
mentors), who are unable to participate in schools because of time or distance, can participate in the netWorkspace. SNS is
designed to be installed at individual school locations, has an Application Programming Interface (API) so others can
develop applications    for it, and is freely available under the  open  source (GNU   Public License)  so that anyone    can
participate in enhancing and supporting it. As with all SNS applications to date, the scaffolded discourse environment that
we describe is available under the GNU Public License.
Problem Level
        Problem Statement
Proposal Level
        Solution Proposal
        Position Statement
        Administration Policy or Law
Warrant Level
        Support Proposal
        Clarify/Re-interpret Proposal
        Rebut/Reject Proposal
        Problem Redefinition Proposal
Proceedings of CSCL 2002                                                                                         page 242

Evidence Level
         Facts/Statistics/Evidence
         Personal Opinion/Belief
         Personal Experience/Observation
         Theory/Law
         Other's Experience
         Common Knowledge
Table 1. Discourse structure being used in initial testing of scaffolded discourse environment.

ASSESSMENT OF LEARNING FROM SCAFFOLDED DISCOURSES
An important outcome of any professional education is the assimilation of the language and reasoning in the field. Students
become scientists when they can use the language and discourse structures of the field to solve problems and engage in
discourse communities about problems in the field. The scaffolding of that language acquisition and discourse structures is
the purpose of the scaffolded discourse environment. Therefore, acquisition of those discourse structures will be the focus
of evaluation. During the fall, 2001 semester, the scaffolded discourse environment will be implemented in two university
classes, including an undergraduate teacher preparation class and an undergraduate course on comparative religions. Well-
structured and ill-structured problems will be presented to students in each class. Their conversations will be monitored to
see which  structures are being  used. Coaching, if  needed,    may be added  to  the environment   to suggest the kinds of
comments that need to be added to the conversation. These comments can be generated by a relatively simple intelligent
agent that monitors the structure of the nodes in the conversation. Assimilation of language and discourse structures will be
assessed in transfer tasks, which will be essays on student solutions to problems presented. The students' protocols will be
analyzed by coding their essays using the argumentation structure used in the class.
Additionally, cognitive residue will be assessed by presenting problems in an unstructured discussion board. Conversations
and essays will be assessed for the use of informal argumentation by classifying the number of claims, grounds, warrants,
backings, and rebuttals found in student essays and in the unstructured conferences. Additionally, a protocol analysis of the
essays and  the students' contributions to the unstructured     discussions will be  coded according   to the  frequency of
occurrence components of the problem-solving process using the Decision Function Coding System Categories (Poole &
Holmes, 1995; see Table 2). A recent study showed significant differences in both argument structures and problem solving
components between unstructured conferences and conferences scaffolded by Belvedere (Jonassen & Cho, in press). Their
scores from the protocol analyses will be statistically compared to the number and proportions of statements from the
unstructured computer conference. They will also be compared with essays from control groups who did not use the CSCA
conferencing environment.
Results from these studies will be presented at the conference.
                                    Problem Definition (PD)
                                    Orientation (OT)
                                    Criteria Development (CD)
                                    Solution Development (SD)
                                    Solution Approval (SA)
                                    Solution Critique (SC)
                                    Non-task Statements (NS)
                 Table 2. Poole & Holmes (1995) Decision Function Coding System

NEXT STEPS
Following the implementation and testing the scaffolded conferencing environment during the fall, 2001, we intend to
develop alternative discourse structures and to implement those in other classes. Alternative discourse structures might
include:
Argumentation:              Proposition, issues, positions, evidence, and arguments
                            Major premise, minor premise, conclusion, Cause/effect
                            Deductive: Rule-principle, premises, cases (instances)
                            Inductive: Cases (instances), generalization
                            Evidence: facts, opinions, stories
Proceedings of CSCL 2002                                                                                               page  243

Illustration:                Example, similarity/dissimilarity
Problem/Solution:            Hypotheses, positions, arguments, evidence, conclusion, solutions, event conditions
Description:                 Properties, characteristics, attributes, sequence, examples
Process:                     System parameters, change, catalyst
Compare/Contrast:            Attributes, relationships, examples
Concept Elaboration:         Has analogy, has example, has attributes, has characteristics, has opposite
Decision Making:             Antecedent, condition/state, option, probable effect, weight
Case Analysis:               Problem, learning issues, rrgency, analysis, alternative, decision criteria, preferred alternative,
                             implementation plan, missing information, assumption
Argument Analysis:           Questionable    assumption,  alternative  explanation,   counter example, evidence   for,  evidence
                             against

ACKNOWLEDGMENTS
We would like to thank Abraham Ott for programming this discussion forum, Dr. Dale Musser, Dr. James Laffey, and the
rest of the SNS development team for creating the environment in which this forum operates.

REFERENCES
Bell, M. C., & Linn, P. (1997, March 26). Scientific Arguments as Learning Artifacts: Designing for Learning on the Web.
         Paper presented at the AERA, Chicago, IL.
Buckingham Shum, S. J., MacLean, A., Bellotti, V. M. E., & Hammond, N. V. (1997). Graphical argumentation and design
         cognition. Human-Computer Interaction, 12, 267-300.
Cerbin, B. (1988, April 24-27). The Nature and Development of Informal Reasoning Skills in College Students. Paper
         presented at the National Institute on Issues in Teaching and Learning, Chicago, IL.
Chi, M.T.H., Slotta, J.D., & de Leeuw, N/A. (1994). From things to processes: A theory of conceptual change for learning
         science concepts. Learning and Instruction, 4, 27-43.
Darses, F. (1991). The constraint satisfaction approach to design: A psychological investigation. Acta Psychologica, 78,
         307-325. Jonassen, D.H. & Cho, K.L. (in press). Effects ofd argumentation scaffolds on problem solving.
Klemm,   W.   R., &  Snell, J.  R. (1996).   Enriching   computer-mediated   group  learning  by coupling  constructivism   with
         collaborative learning. Journal of Instructional Science and Technology, 1(2). (http://www.usq.edu.au/ electpub/e-
         jist/vol1no2/article1.htm).
Knudson,  R.   E. (1991). Effects    of instructional strategies, grade and  sex   on students' persuasive writing.    Journal of
         Experimental Education, 59(2), 141-152.
Leeman, R. W. (1987). Taking Perspectives: Teaching Critical Thinking in the Argumentation Course. Paper presented at
         the Speech Communication Association, Boston, MA.
Mauffette-Leenders, L.A., Erskine, J.A., & Leenders, M.R. (1997). Learning with cases. London, Ontario, Canada: Case
         and Publication Services, Richard Ivey School of Business, The University of Western Ontario.
O'Neill, D. K., & Gomez, L. M. (1994). The Collaboratory notebook: A distributed knowledge building environment for
         project learning. Proceedings of ED MEDIA, 94. Vancouver B. C., Canada.
Poole, M.S.,   &   Holmes,  M.E.     (1995).  Decision development     in computer-assisted   group decision   making.   Human
         Communication Research, 22 (1), 1, 90-127.
Richard, J.F.,  Poitrenaud, S., &    Tijus, C. (1993).   Problem-solving  restructuration: Elimination of  implicit constraints.
         Cognitive Science, 17, 497-529.
Sanders, J.   A.,  Wiseman,    R.  L,   & Gass,  R.   H. (1994).   Does   teaching  argumentation  facilitate critical thinking?
         Communication Reports, 7(1), 27-35.
Scardamalia,   M., &  Bereiter,   C.  (1994).  Computer  support   for knowledge-building     communities. The  Journal   of   the
         Learning Sciences, 3(3), 265-283.
Senge, Peter M. (1990). The fifth discipline : the art and practice of the learning organization. NY: Doubleday/Currency
         Press.
Suthers, D. (1998). Representations for scaffolding coolaborative inquiry on ill-structured problems. Paper presented at the
         1998 AERA Annual Meeting, San Diego, California.
Proceedings of CSCL 2002                                                                                         page 244

Suthers, D., & Jones, D. (1997, August). An architecture for intelligent collaborative educational systems. Paper presented
       at the 8th World Conference on Artificial Intelligence in Education (AI-Ed 97), Kobe, Japan.
Toulmin, S., Rieke, R., &Janik, A. (1984). An introduction to reasoning. NY: Macmillan Publishing Co.
Voss, J. F. (1991). Learning to Reason via Instruction in Argumentation. Learning and Instruction, 1(4), 337-50.
Yeh, S. S. (1998). Empowering education: Teaching argumentative writing to cultural minority middle-school students.
       Research in the Teaching of English, 33(1), 49-83.
Zumbach, J., & Reimann, P. (1999, December). Combining computer supported collaborative argumentation and problem-
       based learning: An  approach for designing online    learning environments. Paper presented     at the    Computer
       Supported Collaborative Argumentation Workshop at the CSCL 99 Conference, Stanford, California.
