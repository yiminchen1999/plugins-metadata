Proceedings of CSCL 2002                                                                                           page  679

              Design Principles for Educational Software
                                        Yael Kali, Nathan Bos, Marcia Linn
                                 Center for Innovative Learning Technologies
                                                      Jody Underwood
                                              Educational Testing Service
                                                          Jim Hewitt
                                                 University of Toronto
ABSTRACT
This interactive session at CSCL 2002 will present, and add to our ongoing study of design principles for educational
technology. We are seeking to capture key findings of the field using a three-level framework, including these interlinked
components: educational goals, design principles, and software features.

Keywords: design, design principles, educational technology, representation, visualization
Education takes place in a complex system and needs methods matched to the challenges. We view education as a design
science like architecture (Alexander, 1977) computer science (Simon, 1985; Moran and Carroll, 1996), manufacturing
(Wright, 2001) and medicine. All these fields evidence creative innovations that succeed in complex settings.
This interactive session represents     our  attempts to  capture the collective breakthroughs   in our field and   to enable
researchers to benefit from the successes and failures of others. The initial impetus for this project came from a workshop
on visualization and modeling at the CILT conference in the fall of 2000, where it was acknowledged that methods for
communicating    design knowledge    between     projects were  inadequate. To   progress as a   design science,   educational
researchers need new ways to communicate and build on each others' work.
To pursue these goals we have formed a group including researchers from eight University projects and three commercial
design companies. This group has since collaborated both online via email, and offline at CILT-sponsored workshops.

Project Methods
The first step in our process was to develop a rubric for identifying and presenting design principles. We quickly found that
identifying `principles' are not enough, because this information is usually too decontextualized to be useful. The current
rubric calls for principles to be connected to one or more higher-level educational goals that they address, illustrated with
one or more proven examples, and accompanied by designer's observations about tradeoffs, pitfalls, appropriate contexts of
use, and evidence of effectiveness. We considered many variations on this structure, and refined the rubric with an iterative
process of team discussion, obtaining feedback from colleagues, and attempting to analyze existing projects with draft
versions of the principles. The goal was to have a rubric that `felt right' for designers trying to articulate their principles, but
was also useful to outsiders in understanding and applying principles to new projects. The current rubric is instantiated in
an online database,.
With a fairly stable  framework  in place,   we  developed   an online database,  designated for the  use of  computer-based
curricula designers. Since then, the    task has been  to  aggregate  and synthesize design  principles from  many   different
projects, and to feed them into this mutual design-principles online database. (http://cilt.berkeley.edu:8080/design

Framework for describing design principles
The database is built on a three level hierarchical framework with these three components:
Educational goals-- addressing a specific prl of the field. Each goal is related to one or more design principles.
Design principles-- the rational behind features in software. Each principle addresses one or more educational goals, and
is illustrated by one or more features.
Software/curriculum features -- This includes attributes of features needed in order to make them communicative such
as: Background and rationale, Illustration of the feature, Recommendations of how to use the feature, Use case scenarios,
References & web links. A feature can exemplify one or more design principle.
This framework is illustrated in figure 1. One strength of the database lies in the "many-to-many" type of connections
between the three hierarchical levels of the framework. These connections make it possible to search or browse the database
from one of several starting points. For example, one could browse the database with a particular educational goal in mind,
and find multiple related principles that other designers believe help address this goal, as well as tradeoffs and possible
pitfalls of this design principle, and example software features where this design principle is implemented. Alternately, one
could start the browsing with the database's principles, or the software features. Providing multiple access points will, we
Proceedings of CSCL 2002                                                                                                          page 680

hope, accommodate different audiences (designers, researchers, educators) who will come to the database with different
purposes (creating new designs, evaluation, customization etc.).
At CSCL 2002 we will present the framework and example principles, and then participants will join facilitated small
groups to discuss the project. Small groups will feedback on the rubric or suggest new principles. The workshop will finish
with presentation and discussion of small group work.

ACKNOWLEDGMENTS
We would like to thank the members of CILT, who provided frequent feedback at all stages of this project, and participants
in previous design principles workshop, who contributed their ideas and experience to this effort.

REFERENCES
Alexander, C., Ishikawa, S., & Silverstein, M. (1977). A pattern language : towns, buildings, construction. New York:
       Oxford University Press.
Moran, T.P. and     Carroll,   J.M. (eds.) (1996) Design Rationale:        Concepts,      Techniques,      and   Use,   Lawrence   Erlbaum
       Associates, Mahwah, New Jersey.
Simon, H. A. (1985) The Sciences of the Artificial. MIT Press, 2nd edition.
Wright, P. (2001). 21st Century Manufcturing, Prentice Hall.

   Figure 1: The structure of the database
          Educational Goals                        Design Principles                              Software features

                                                                                                                       Evidence
                                                                                                                       Context

                                                                                     e.g.      two          manipulatable
                                                                                     representation of different type   of
                                                                                     fish in a pond with dynamic linkage
            Assist    Students   to                                                  between  the   numeric   (ratio) and
            understand                                                               graphical (pie chart)
            representations      of
            concepts.
                                                                             Pitfalls
                                                                          Tradeoffs
                                             Representations should provide
                                             students with a bridge between
                                            mental and computer actions and
                                               enable students to develop
                                           conceptual schemes that have been
                                             embodied in the representation.

       LEGEND:
                                       Educational goal, addressing a specific requirement of the field.
                   Each goal is related to one or more design principles.
                   Design principle - the rational behind features in software. Each principle addresses one or more
                   educational goals, and is illustrated by one or more features.
                   Software/curriculum features - This includes attributes of features needed in order to make them
                   communicative such as: Background and rationale, Illustration of the feature, Recommendations of
                   how to use the feature, Use case scenarios, References & web links. A feature can exemplify one or
                   more design principle.
