Proceedings of CSCL 2002                                                                                             page 499

         Applying Open Source Principles to Collaborative
                                      Learning Environments
                                                     Eric Scharff
                      University of Colorado, Center for LifeLong Learning and Design
                                               scharffe@cs.colorado.edu
ABSTRACT
Open source software provides an example not only of a viable software development methodology, but also a model for
collaborative construction of artifacts. Open source communities exemplify principles that are important in collaborative
learning environments.   This  paper  explores  how  open  source   efforts  can be  used as   inspiration for  the creation of
collaborative learning experiences in a university course. Concrete public deliverables and use of collaborative technology
help students explore ill-defined projects that are personally meaningful. This paper provides a description of open source
principles, their role in designing collaborative learning experiences, the application of these principles in a university
course, and the findings based on analysis of course projects and collaborative technology.

Keywords
Open Source, Swiki, CoWeb, undergraduate education

INTRODUCTION
One view of collaborative learning is as a compromise between two extremes of control. At one extreme, learning is a
transmission of knowledge from instructors to learners. At the other extreme, learners choose the topics that are interesting
to them and teachers serve as facilitators. In this dichotomy, collaborative learning is a compromise approach in which
students and instructors both yield some control to create a more dynamic environment. Both extremes are similar, in that
they imply a situation where one party is in control and the other acts in a more passive role. An alternative to this concept
is to contrast "one-way" control models with a more community-oriented approach to learning settings (Rogoff, Matusov,
& White, 1998). Participation in this manner transforms the roles and they become more shared and dynamic. This involves
not a compromise between extremes but a departure from "one-sided" notions of control. Important to the community-
oriented approach  to  learning is the notion  of collaborative construction.   Learners  take an active   role in  constructing
externalized artifacts in order to explore relevant concepts (Papert, 1980). Construction is a social activity involving both
the artifacts created by the community and the relationships between community members (Shaw, 1996). This relation
between learners and teachers may be asymmetric, and the roles may shift over time.
Open source software has been gaining attention recently as a viable software development methodology. In open source
situations, diverse groups of individuals work together to create complex software systems. Much of this attention focuses
on open source software as inexpensive alternatives to commercial software (Davis et al., 2000). One popular use of open
source software is in teaching computer science principles such as operating systems and networking (Claypool, Finkel, &
Wills, 2001;  Nelson   &   Ng, 2000).  Open source  principles  are also being   used  in MIT's   "OpenCourseWare"      project
(Goldberg, 2001), in which all Web course materials will be free to the public. While this provides access to materials, it
doesn't  address  the role the community   will play in   the evolution of   academic  resources  or questions   of intellectual
property. An alternative perspective on open source involves the collaborative aspects of the open source communities
themselves. Although open source communities may not be explicitly designed as collaborative learning communities, they
exhibit many properties relevant to collaborative knowledge building activities. Open source communities provide a real-
world example of how groups of individuals collaborate to create new software. Participants play an active role in the
creation and refinement of software. The act of creating software is the vehicle through which the community learns about
its own needs, explores solutions, and constructs something of benefit to the community.
In this paper, we will explore the relationship between collaborative knowledge construction and open source software. We
will describe open source and how open source communities address problems in collaborative knowledge construction.
We will then describe how open source principles were used in the design of a university course and some observations
about that course. Finally, we will discuss the similarities and differences between open source and course situations as well
as the challenges that face both types of collaborative learning situations.

ACKNOWLEDGEMENTS
The author would like to thank Gerhard Fischer for being receptive in transforming this course. The original course was
developed by Ernesto Arias and Gerhard Fischer, without whom this research would not have been possible. The author
would   also like to  thank Mark   Guzdial  and the  rest of  the Swiki  team    at Georgia  Tech for  providing    an exciting
Proceedings of CSCL 2002                                                                                   page  500

environment that we  could  adopt  and extend for this course. This  research was  supported by  the National Science
Foundation, grant ITR-0082915.

REFERENCES
Arias, E. G., Eden, H., Fischer, G., Gorman, A., & Scharff, E. D. (1999). Beyond Access: Informed Participation and
       Empowerment. Paper presented at the Conference on Computer Supported Collaborative Learning (CSCL '99),
       Palo Alto, CA, pp. 20-32.
Claypool, M., Finkel, D., & Wills, C. (2001). An Open Source Laboratory for Operating Systems Projects. Paper presented
       at the 6th Annual Conference on Innovation and Technology in Computer Science Education, Canterbury, United
       Kingdom, pp. 145-148.
Davis, M., O'Donovan, W., Fritz, J., & Childress, C. (2000). Linux and Open Source in the Academic Enterprise. Paper
       presented at the Conference on User Services: Building the Future, Richmond, VA, pp. 65-69.
dePaula, R., Fischer, G., & Ostwald, J. (2001). Courses as Seeds: Expectations and Realities. Paper presented at the
       European Conference on Computer-Supported Collaborative Learning 2001 (Euro-CSCL 2001), Maastricht, The
       Netherlands, pp. 494-501.
Goldberg,  C.  (2001,   April  4).  Auditing  Classes   at   M.I.T.,  on  the   Web  and   Free.   New  York   Times,
       http://www.nytimes.com/2001/04/04/technology/04MIT.html .
Guzdial, M., Realff, M., Ludovice, P., Morley, T., Kerce, C., Lyons, E., & Seukel, K. (1999). Using a CSCL-Driven Shift in
       Agency    to Undertake  Educational   Reform.   Paper presented   at the Conference   on  Computer  Supported
       Collaborative Learning (CSCL '99), Palo Alto, CA, pp. 590-599.
Papert, S. (1980). Mindstorms: Children, Computers and Powerful Ideas. New York: Basic Books.
Raymond,       E.       S.      (1998).       Homesteading       the        Noosphere.       FirstMonday,      3(10).
       http://www.firstmonday.dk/issues/issue3_10/raymond/index.html
Rogoff, B., Matusov, E., & White, C. (1998). Models of Teaching and Learning: Participation in a Community of Learners.
       In D. R. Olson & N. Torrance (Eds.), The Handbook of Education and Human Development: New Models of
       Learning, Teaching, and Schooling (pp. 388-414). Cambridge, MA: Blackwell.
Shaw, A. (1996). Social Constructionism and the Inner City. In Y. Kafai & M. Resnick (Eds.), Constructionism in Practice
       (pp. 175-206). Mahwah, NJ: Lawrence Erlbaum Associates.
Stallman, R. M. (1999). The GNU Operating System and the Free Software Movement. In T. O'Reilly (Ed.), Open Sources:
       Voices from the Open Source Revolution (pp. 53-70). Sebastopol, CA: O'Reilly & Associates.
