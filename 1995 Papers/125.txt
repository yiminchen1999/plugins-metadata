              Distributed Cognition, Leaming Webs,
       and Domain-Oriented Design Environments

                                               Gerhard Fischer
                                 Centerfor Lifelong Learning and Design (L3D)
                        Department of Computer Science and Institute of Cognitive Science
                                       University of Colorado at Boulder

                     Abstract                                  problems of working, learning, and collaboration with
The human mind is limited, making collaboration with           computational artifacts. The content domains of our
other humans and with things (in our case with compu           work are design activities in which design is under
tational environments) a necessity rather than a luxury.       stood very broadly as the process of determining how
Relevant knowledge for work and for learning is dis            things ought to be (Simon 1981). Design can be seen as
tributed in our head, in the heads of others, and in the       a fundamental activity within all professions. It is a
environment.                                                   collaborative, argumentative process without optimal
    Learning webs are used by (virtual) communities            solutions but with trade-offs. It is impossible for design
of practice. Domain-oriented   design environments             processes to account for every aspect that might affect
(DODEs) support learning webs by allowing all stake            the designed artifact. Therefore, design must be treated
holders in a design process to learn and work collabo          as an evolutionary process, in which all stakeholders
ratively with each other and with their computational          continue to learn new information and insights as the
environments. DODEs serve as models for the design             process unfolds (Fischer, McCall et al. 1994).
of collaborative working and learning environments by              The necessity to intertwine learning, working, and
exploring and supporting different relationships and           collaboration results from the growing recognition that
task responsibilities between humans and computers.            in the information age, change is unavoidable and ob
    DODEs     integrate working  and   learning  by            solescence is guaranteed. Learning can no longer be
grounding learning in self-directed, authentic activities.     considered a process that occurs only in schools. We
They support learning on demand as an essential ele            have to think of learners not as being inherently iso
ment of life-long learning. The creation of DODEs              lated but rather as having to learn to make new, differ
faces the fundamental challenge to make them simulta           ent, and strategic uses of the sources of information
neously learner-directed and supportive. DODEs tran            around them. The successful student or professional is
scend other computer-supported cooperative learning            one who learns how to use research materials, libraries,
systems, which employ the computer only as a medium            and computational environments, as well as knowl
with few interpretable components. They integrate hu           edgeable humans (parents, teachers, peers, mentors,
mans and computational resources more creatively by            and practitioners   from other disciplines) to  master
acknowledging  that  persons become   skill resources          complex problems.
only when they consent to do so, whereas computa
tional environments are available at the bidding of the
user.                                                          2. Distributed Cognition: Limitations of
                                                               the Individual, Unaided Human Mind
Keywords - situated learning in the workplace, envi
ronments for open-ended and termless learning, theo            2.1. Limitations of the Individual Human Mind
ries of collaboration and learning, distributed cogni          Human  beings   have  a  bounded  rationality   (Simon
tion, life-long learning, learning on demand, learningwebs, domain-oriented design environments.1981). There is only so much we can remember andthere is only so much we can learn. Talented people
                                                               require approximately a decade to reach top profes
                                                               sional proficiency. These general observations provide
1. Introduction                                                the rationale that, when  a domain  reaches     a point
In our research over the last fifteen years, we have           where the knowledge for skillful professional practice
created conceptual frameworks and innovative systems           cannot be acquired in a decade, specialization will in
and we have conducted assessment studies to address            crease, teamwork will become a necessity, and practi-

CSCL '95 Proceedings                                       125                                           October 1995
tioners will make increasing use of external reference        have only a limited notion of users' tasks at hand. Do
aids (such as printed and computational media). With          main-oriented design environments (DODEs) (Fischer
powerful  technologies  becoming   widely   available,        1994) exploit domain semantics and the design context
people take on more complex jobs. Therefore, they             to actively notify designers when there is information
need help in accomplishing unfamiliar tasks that are          they should know. Many current design systems are
part of an expanded job. Beyond the need for new and          limited because they function only as "keepers" of the
changing domain knowledge, there is also a large de           artifact, in which one deposits representations of the ar
mand for new tool knowledge.                                  tifact being designed. Our experience has shown that
                                                              designers integrate designing and discussing in such a
2.2. Distributed CognitionLearning is part of living, a natural consequence of bewayastomakeseparateinterpretationdifficult(Reeves 1993) .
ing alive and in touch with the world, and not a process
separate from the rest of life. Acquiring knowledge           4. Domain-Oriented Design Environments
cannot be restricted to obtaining a prescribed education      DODEs have emerged in our research work as compu
at a given time. What learners need, therefore, is not        tational environments in support of collaboration. They
only instruction but access to the world (in order to         are semiformal systems that integrate object-oriented
connect the knowledge in their head with the knowl            hierarchies of domain   objects,  rule-based   critiquing
edge in the world). Education should be a distributed         systems, case-based   catalog   components,  simulation
lifelong process by which one learns material as one          components, checklists, and argumentative hypermedia
needs it. Distributed cognition (Norman 1993) is a ne         systems. They support communications and negotia
cessity in response to the limitations of the individual      tions among all involved stakeholders and between the
human mind.                                                   designers and their work in progress. They do limited
      Distributed cognition needs to include humans and       reasoning and interpretations, trigger breakdowns, de
things, and the two infrastructures should complement         liver information, and support the exploration of the
each other. Humans (e.g., coaches, peers, practitioners       rationale behind the artifact.
from   other domains)   have  extensive   background              The goals associated with DODEs are (1) to bring
knowledge and a shared understanding unavailable in           task to the forefront by supporting human problem
things. Things  can  store information   (e.g., books),       domain interaction, (2) to create a shared context be
highlight relevant information (e.g., graphs, mathemat        tween designers and computational environments, (3)
ical notations), and retrieve, compute, and analyze in        to create an artifact-centered information repository fa
formation (e.g., different forms of computational me          cilitating collaboration among all stakeholders, (4) to
dia).                                                         support learning on demand and information delivery,
                                                              and (5) to have human designers in control. The theo
                                                              ries underlying DODEs are (1) to make objects and
3. Learning Webs                                              ideas ready-at-hand, allowing learners to communicate
Illich (Illich 1971) (long before the world-wide web          more directly with the task, (2) to support reflection-in
and the information superhighway were a reality) has          action (Schon 1983), (3) to integrate problem framing
envisioned learning webs as an alternative and aug            and problem solving, (4) to allow design-in-use, and
mentation to traditional schooling. The major objec           (5) to increase the back-talk of the situations (Fischer,
tives that he envisioned his learning webs would pro          Lemke et al. 1991). The users of DODEs are skilled
vide were (1) reference services to educational objects,      domain   workers who    belong    to  the community  of
(2) skill exchanges, (3) peer matching, and (4) refer         practice that a specific DODE supports.
ence services to educators-at-large. Many collaboration
technologies (e.g., most Computer-supported collabo           4.1. An Example:  The Voice Dialog Design Envi
rative  work  systems)  employ   the   computer   as a        ronment
medium   with  few interpretable components.     Future       The  Voice   Dialog   Design    Environment    (VDDE)
computational environments need to integrate humans           (Repenning and Sumner 1992) will be used to illustrate
and computational resources more creatively. Compu            our conceptual  framework.      Voice dialog   interfaces
tational environments that can interpret objects, ac          consist of a series of voice-prompted menus. Users
tions, and artifacts (not only from a tool perspective        press buttons on a telephone keypad and the system re
but also from a domain perspective) can make infor            sponds with appropriate voice instructions. Current in
mation and resources available at the bidding of the          terface design techniques for voice dialog systems are
user,  whereas persons  become   skill resources   only       based on flow charts. It is difficult for designers, cus
when they consent to do so, and they can also restrict        tomers, and end-users of these systems to anticipate
time, place, and methods as they choose.                      how  the (audio)  interaction    will sound  by  simply
      To increase the computational support of collabo        looking  at a  static visual   diagram.   To experience
rative environments, a limited shared context must be         breakdowns, simulations are needed that can serve as
established. General-purpose information spaces can           representations for mutual understanding by allowing

CSCL '95 Proceedings                                      126                                              October 1995
designers, customers,  and   end-users  to "experience"        situation is accessible and can be "parsed" by the sys
the actual audio interface.                                    tem, providing the system with information about the
   The   VDDE     allows    domain  designers  to  create      artifact under construction; (3) the specification com
graphic specifications using a gallery of domain-ori           ponent  allows  one   to explicitly  communicate   high
ented components and worksheets on which designers             level design intentions to the system; and (4) the em
create a specific design. The behavior of the design can       bedding   of annotations   contextualizes messages   to
be simulated at any time. Design simulation consists of        other stakeholders rather than communicating them in
a visual trace of the execution path combined with au          a decontextualized e-mail message.
dio feedback of all prompts and messages encountered.
   Earlier versions of VDDE did not contain a critiquing component, limiting the "back-talk" to the designersandthelearningopportunitiesprovidedforthem. Voice dialog design is complicated by the factthat there are different rule sets that should be obeyedby a design. VDDE-Critics (Harstad 1993) adds criticsto VDDE to signal additional breakdowns for the designers.Inadditiontoearliercritiquingsystems,VDDE-Criticsallowsdesignerstotailorthe"breakdown" characteristics of the system to their personal needs by (I) selecting the rule set and the associated argumentation to be used, (2) determining theintrusiveness of the critiquing mechanisms with the critiquing thermometer, and (3) choosing the design component to be critiqued (a conceptual unit versus theoverall design).4.4. Learning on Demand and End-User ModifiabilityDODEsprovidelearning-on-demandopportunities(Fischer, Lemke et al. 1991) for a designer through critiquing, simulation, and access to contextualized argumentation and cases. But the information flow is notonlyone-directional.UsingDODEs,designerswilltranscend the existing knowledge and contribute newknowledge themselves. Because these designers aredomain designers and not software designers, end-usermodifiability support is required.End-users may wish to have functionality that fitstheir needs, but the creation of this functionality is adifficulttask.Twomajorapproaches,namelyprogrammable design environments (Eisenberg and Fischer1994)andcollaborativeworkpractices(Nardi
4.2. A Process Model Illustrating CollaborativeProcesses in Design EnvironmentsDesignproblemsareintrinsicallyill-defined,openended, and "wicked," making it impossible to predict,let alone collect, all the potentially relevant informa1993), make end-user programming a more realisticchallenge. Collaborative work practices, leading to thedevelopment of power users and local developers, arenaturally developing practices in communities whereend-user modifiable tools are available.
tion in advance. They must capture information con
tinuously over the lifetime of the system and make that
information available to designers when it is relevant         5. The Support of DODEs for Collabora
to their particular tasks. We have developed the SER           tive Learning-Lessons Learned From
model, a process model for the evolution of domainoriented design environments (Fischer, McCall et al.1994) consisting of three phases: seeding, evolutionarygrowth, and reseeding.During seeding, environment developers and dormain designers collaborate to create a design environment seed. During evolutionary growth, domain designers create artifacts that add new domain knowledgeto the seed (i.e., new knowledge is generated and integrated into the environment by the domain designersthemselves rather than produced by the environmentdevelopers). In the reseeding phase, environment developers again collaborate with domain designers toorganize, formalize, and generalize new knowledge.Our System-Building EffortsIfthingsarebasicresourcesforlearning,thenthequality of the environment and the relationship of persons to them will determine how much they will beable to learn. DODEs are instrumental versions of systems that are simultaneousIv user-directed and computationallysupportive(theebycomplementingopenlearning environments and intelligent tutoring systemswith an additional alternative). DODEs support humanproblem-domain communication by reducing the demands of learning about the tool. They offer a varietyof different learning opportunities through critiquing,simulation, argumentation, and examples. Having anincreased situational awareness through the integration
                                                               of the different components, DODEs are able to incre
4.3. Increasing the Situation Awareness                        mentally obtain a partial understanding of the task at
Design is a well-suited activity to explore concepts in        hand and to contextualize information to it.
collaboration because the design activity takes place              While cognitive questions and content are impor
within the computational environment. The "situation           tant, collaboration technologies raise numerous other
awareness" of a DODE is increased through the fol              issues. What will make people want to share? What
lowing mechanisms: (1) the domain orientation allows           will motivate people to make their knowledge explicit
a default intent to be assumed, namely, the creation of        and    contribute it  to  an   organizational  memory
an artifact in the given domain; (2) the construction          (especially, if they have to do the work but are not nee-

CSCL '95 Proceedings                                       127                                              October 1995
essarily the beneficiaries of it)? These questions will in                         Acknowledgments
the long run be more important than technological is              The author would like to thank the members of the
sues, and successful models to answer them positively             "Center for LifeLong Learning and Design" at the
are still quite rare.                                             University of Colorado. The research was supported by
     One of the benefits of integrating working and               (1) the National Science Foundation, Grant RED RED-
learning is the potential increase in motivation. Motiva          9253425; (2) the ARPA HCI program, Grant N66001-
tion to learn new things is critically influenced by op           94-C-6038; (3) the National Science Foundation and
timal flow, a continual feeling of challenge, direct en           the Advanced Research Projects Agency under Coop
gagement, the right tools for the job, and a focus on the         erative Agreement No. CDA-940860; (4) NYNEX Sci
task (Csikszentmihalyi 1990). Users are willing and               ence and Technology Center; (5) Software Research
motivated to learn when the following conditions hold:            Associates (SRA); and (6) PFU. During academic year
                                                                  1994/95,     the author  was supported  by  the "SEL
(1) They actively desire and control learning-sup-                Stiftungsprofessur" of the Technical University Darm
     ported in DODEs by the integration of working                stadt.
     and learning allowing learners to be engaged in
     authentic, self-directed activities.
(2) They are successful in finding and using new information-supported in DODEs by contextualizing new information to the task at hand and toReferencesCsikszentmihalyi, M. (1990). Flow: The Psychology ofOptimal Experience. HarperCollins Publishers.
     breakdown situations.                                        Eisenberg, M. and G. Fischer (1994). Programmable
(3) They can see the immediate benefit of learning                        Design Environments: Integrating End-User Pro
     something  new     to their current  working  situa                  gramming    with Domain-Oriented    Assistance.
     tion-supported in DODEs by making argumenta                          Human Factors in Computing Systems, CHI'94
     tion serve design, by locating relevant catalog ex                   Conference Proceedings. Boston, MA, 431-437.
     amples, and by illustrating complex behavior with
     simulations.                                                 Fischer, G. (1994). Domain-Oriented Design Environ
                                                                          ments.   Automated    Software   Engineering.
(4) Their environments are intrinsically motivating and                   Boston, MA, Kluwer Academic Publishers. 177-
     allow them to achieve interesting results with a                     203.
     reasonably   small    effort-supported   in DODEs
     through human problem domain communication,                  Fischer, G., A. C. Lemke, et al. (1991). The Role of
     which allows users to focus on their tasks.                          Critiquing  in Cooperative  Problem    Solving.
                                                                          ACM   Transactions   on Information   Systems.
                                                                          123-151.
6. ConclusionsDesign activities require learning and collaboration.We have developed conceptual frameworks and innovative systems that support not only the creation of theartifact but also the professional communities engagedindesignasprofessionalpractitioners.Wehavelearned from our efforts that older frameworks of eduFischer, G., R. McCall, et al. (1994). Seeding, EvolutionaryGrowthandReseeding:SupportingIncrementalDevelopmentofDesignEnvironments. Human Factors in Computing Systems,CHl'94 Conference Proceedings (Boston, MA).292-298.
cation-associated      with notions  of   instructionism,memorization, and decontextualized learning--cannotbeshakenmerelybythepresenceoftechnology,whether that technology takes the form of intelligenttutoring systems, multimedia, or world-wide connectivity.NewframeworksmustinsteadbedevisedtoHarstad, B. (1993). New Approaches for CritiquingSystems: Pluralistic Critiquing, Consistency Critiquing,andMultipleInterventionStrategies,Master Thesis, Department of Computer Science, University of Colorado, Boulder
support lifelong learning-learning webs that allowintegration of learning, working, and collaborating; engagement in authentic problems; self-direction in learnIllich,I.(1971 ).DeschoolingSociety.NewYork,Harper and Row.
ing tasks; and creation of new content and domain areas.          Nardi, B. A. (1993). A Small Matter of Programming.Cambridge, MA, The MIT Press.

CSCL '95 Proceedings                                          128                                             October 1995
Norman, D. A. (1993). Things That Make Us Smart.            Schon, D. A. (1983). The Reflective Practitioner: How
     Reading,   MA,    Addison-Wesley      Publishing            Professionals Think in Action. New York, Basic
     Company.                                                    Books.
Reeves, B. N. (1993). The Role of Embedded Commu
     nication and    Artifact History in Collaborative      Simon, H. A. (1981). The Sciences of the Artificial.
    Design. University of Colorado.                              Cambridge, MA, The MIT Press.

Repenning,  A.   and    T.    Sumner   (1992).  Using
     Agentsheets to Create a Voice Dialog Design
     Environment.      Proceedings     of  the  1992
     ACM/SIGAPP Symposium on Applied Comput
    ing. ACM Press. 1199-1207.

CSCL '95 Proceedings                                    129                                          October 1995
