                                                      JavaCAP:
   A Collaborative Case Authoring Program on the WWW

                   Amnon Shabo, Kris Nagel, Mark Guzdial, Janet Kolodner
                       EduTech Institute, College of Computing, Georgia Institute of Technology

                       Abstract
JavaCAP, a software tool for student authoring and                 Keywords--        case-based     reasoning,    case-based
searching of case libraries, has been implemented in               learning,   learning  by   design,   LBD,     scaffolding,
support     of   the   Learning-by-Design        curriculum        middle school, science education, reflection, tools     to
development      project   at Georgia    Tech's    EduTech         support collaborative settings
Institute.  Its case-authoring component, when used
as part of the LBD curriculum, asks students to reflect           A. BACKGROUND AND CONTEXT
on    a     recent    Learning-by-Design        experience,
summarize it, and present important aspects of it and              A.1.    Learning by Design
what they've learned from it for other students to learn           The    context  for  JavaCAP's      development   is    the
from.   By    focusing on  this  part of  the tool, we   are       Learning-by-Design      (LBD)    curriculum,     currently
able to both put our focus on supporting reflection                being developed by Georgia Tech's EduTech Institute
and collect a library of student-authored cases that we            (Kolodner, 1996).    LBD focuses on promoting better
will  later edit and   publish   as exemplary      cases for       science learning among middle-grades students           by
other students to use as models and to learn from.                 having  them   learn science  in the context   of solving
     JavaCAP is meant to be used as a collaboration                design problems.     Students work in small groups to
tool.   Supporting     collaboration     in middle   school        come up with ideas about how to address a problem,
requires    supporting   both    group   work   around   the       identify   what they  need   to  learn  to solve  it,  and
computer       (synchronous         collaboration)       and       experiment, read, and explore to learn some of those
asynchronous       editing    of  cases.      We    support        things.    They  apply  what    they've  learned  as   they
asynchronous collaboration by allowing each student                solve the design problem.     Building and testing their
to write    on the   case  and   providing   distinguishing        devices   allows them   to  confront    their conceptions
formats for each so it is easy to see the changes made             head   on. When  a   design  fails,  they  recognize   that
since last using the tool and identify whose changes               there is some knowledge they are missing.        Analysis
they are.                                                          of failure promotes identification of what they don't
     Our two studies suggest that JavaCAP does have                understand or    misunderstand.      The    intent,    then,
potential as a collaborative reflection tool.        We've         though   we cannot   always  make   that  happen,   is that
used the metaphor of scenes in a play to help students             students will build and test their designs in order to
remember different aspects of the experience they are              gain immediate feedback about the physical laws they
analyzing and summarizing.        Our first pilot showed           are trying to apply.  Analyzing why something might
that we had indeed found a way to engage students in               not have    worked   as expected    or   might  not    have
effective reflection. However, this pilot also revealed            worked well enough and redesigning, rebuilding, and
flaws in the underlying technology.          We needed to          retesting are critical to LBD.
support    asynchronous    collaboration    better  than we            Students iteratively build, test, analyze, explain,
were   doing;    the  easiest  way    to  do  this  was   to       and refine  several  times.      Sometimes     they   build
reimplement using what the world wide web and its                  models   of some    aspect of what   they  are  designing
development tools had to offer.          Our  second  pilot,       (e.g., when designing a model of artificial lung, they
using   a     revised  tool      both    better  supported         focused just on the pumping action (Hmelo, Holton,
asynchronous student authoring and made it easy for                Allen, and Kolodner, 1996)).     Sometimes they build a
students   to  add images   to their   presentations.  This        full model as a solution (e.g., when studying how to
study pointed    out the need to   better   support writing        control erosion on an Atlantic Ocean barrier island,
itself within the framework we've created and suggests             they built full models used sand, rock, moving water,
other collaboration features that students need.                   etc.).   During all activities, they focus on decision
making      under    uncertainty,     generating      several
alternative solutions and comparing and contrasting                 ·    they will be more successful if we help them
them to each other.                                                      learn to recognize that they've had a previous
    LBD's pedagogical approach and            many    of  its            relevant experience, help them map between old
practices are borrowed from Problem-Based Learning                       and new experiences, and help them apply and
(PBL)     (Barrows,    1985).       Important      in    both            adapt an old experience for a new situation
approaches is   that  students   learn   science   concepts,
cognitive   and  social  skills, meta-cognitive     thinking        ·    making the experiences of others available as
skills,  and  reflection skills  as they  are   engaging  in             children are solving problems might help them
problem-solving      and  design  activities.   LBD,     like            in all aspects of what they are doing and learning
PBL, emphasizes both doing and reflection on what is
being learned.     Reflection is an essential embedded              A.2.     Our tool:      JavaCAP
activity in the curriculum, and students are asked to               It   is within  this  context   that    our  software   tool,
reflect  on  and   articulate the   full range  of   science        JavaCAP,     is being    developed.      When     complete,
concepts and complex skills they encounter as part of               JavaCAP      will include   a  case-authoring    tool,  case
their problem-solving or design experience.                         library,   and    library  browsing     and   access    tools
    In addition, collaboration is perceived as essential            appropriate for middle-grades learners (6th through 9th
for achieving meaningful design goals that are beyond               grades).   Students   will  use JavaCAP      to  (i) publish
the  ability   of    the  individual     student.   We   are        what they have done and what they have learned and
attempting to understand the best ways to orchestrate               (ii) look  up   what  others  have    published  as    needed
individual, small group, and whole-class activities to              while they are solving problems or designing.          When
facilitate good    reflection and learning      in an   LBD         populated, it will provide for students what a library
environment.    And we are attempting to learn the best             of   cases provides   to  experts:   a  rich  `database'  of
ways to facilitate communicative activities that allow              cases,     stories,     lessons     learned,     background
that to happen, sometimes using technology (Hmelo                   information,    and   links   between    them    (Kolodner,
et  al., 1995)   and   sometimes     proposing     particular       1993; Domeshek & Kolodner, 1992).
kinds of classroom activities that encourage sharing                     JavaCAP is meant to be part of the larger system
of ideas (Kolodner et al., 1995).                                   that    comprises    an    LBD      learning  environment:
    LBD     is based,  as well,   on  an  analysis    of the        sequences    of   problems    that  the students    to solve;
cognitive    model   underlying     case-based     reasoning        methodology they use to solve those problems; other
(CBR)      (Kolodner, 1993, 1996).       CBR    focuses   on        classroom       activities    homework         assignments;
learning   from  one's   own  experiences     and  those  of        facilitation   by   the   teacher;   personal,   paper,  and
others.  It tells us that one can use one's experiences             electronic scaffolding; collaboration tools, reflection
well to the extent that one (1) has interpreted each                tools; and so on.       It will serve as a reflection and
experience     well,  (2)  has    access    to    one's  old        articulation tool (when students are creating cases),
experiences, (3) can make the mapping between an                    provide    advice    to   get  students     started  solving
old  and    new    experience    that    allows    something        problems (when they are using its cases), and help
relevant from the old experience to be transferred, and             students   learn  to  make    connections    between    their
(4) can apply and adapt what was learned from the old               varied experiences -- the kind of skill that is needed to
situation  to  the new   one.    CBR     also suggests   that       promote      transfer   (Salomon      &   Perkins,     1987;
one might use other people's experiences similarly if               Kolodner, 1996).
they are well-enough explained and available at the
right times.   We've all had the experience of gaining              A.3.     Current Focus:         Reflection
important insights through the examples and stories                      Our focus to date is on student authoring of cases
that others tell us.                                                and what we need to provide so that students will be
     This    analysis    suggests   several   things     with       successful at (i) reflecting on their experiences and
respect to promoting children's learning:                           extracting from them what they have learned and (ii)
                                                                    presenting their   experiences in    ways   that will  allow
·   they will be more successful if we help them                    others to understand them and learn from them.
    interpret their experiences well and understand                      While reflection is a critical part of learning, it is
    what they can learn from them                                   known     to be   very    difficult for  students    (Rogoff,
                                                                    1990).    Our experience shows, as well, that students
·   they will be more successful in reusing their                   dislike reflection unless their teachers have introduced
    experiences if we help them anticipate when                     it in a way that allows them to see its use and that
    something they have learned from an experience                  many     teachers   are   uncomfortable      with    helping
    might be useful                                                 students reflect -- it is hard.     Without reflection time
                                                                    embeddedinto the curriculum, students and teachers
                                                                    will tend to skip reflection by either continuing with
a design  or  problem solving     effort  itself   or  moving         develop    case   libraries    of   prisons,   courthouses,
on to other activities.                                               skyscrapers, public libraries, and handicapped access
     Scaffolding   is  needed    for    both    students   and        to  support     architects;    for   hydraulics     engineers
teachers to facilitate reflection.  CSILE (Scardamalia,               working on aircraft hydraulic system design; and so
Bereiter, and Steinbach, 1984) provides the first major               on.  An expert using a case library might browse it to
attempt   at scaffolding     reflection  electronically.     It       get ideas or ask to see cases that address a particular
scaffolds student discussions and arguments,           asking         issue (e.g., lighting in a judge's chambers, effect of
students  to  articulate  the   purpose      of each   of   the       high pressure    on  a  hydraulic    system).    Cases    can
contributions they make to a discussion.                              suggest ways to address a problem, suggest solutions,
     We needed to scaffold reflection in some different               suggest results that might accrue, and so on.
ways.   First, CSILE's asynchronous collaboration and                      We've also successfully made these case libraries
ways  of  integrating     it into   the  curriculum        seem       available to students in our architecture and industrial
unnatural for an LBD setting.       Second, we saw that               design classes.   But, as stated above, we had problems
many  teachers  were    uncomfortable     with     the way   it       when we introduced expert-written cases to middle
took  over    the   classroom.         Third,      we  wanted         school students (Hmelo et al., 1997).         The cases, as
something     that  would     integrate   better      into  the       we wrote them, were not aimed correctly for them.
activities the students were doing (design) and support               But  more  than    that  (we    could  have   written   them
their reflection over a wide variety of complex skills,               better), they simply weren't interested in reading what
problem-specific issues, and science content.          Fourth,        experts  had  to  say.     By   asking   students   to author
we wanted to be able to integrate in some natural way                 cases for others to use and then asking students to use
the  reflection that   happens      as  one     is solving   a        other students' authored cases, we thought we could
problem   (almost    always   done   but     usually   hidden)        add both an element of engagement that was missing
with  the reflection   that  is so  useful   after  solving  a        in our adult-written case libraries, an authentic reason
problem (to identify what has been learned, the kind                  for students   to  summarize       and   extract what     they
of  reflection  that   teachers    and   students      are  so        learned, and    an   activity   for  students    that  would
uncomfortable with).                                                  promote deeper learning.       We've focused first on case
     These two kinds of reflection seemed to us              to       authoring.
require different kinds of tools.   We've been designing                   A big issue we had to deal with was how to help
design journals (Puntambekar et          al, 1997)     to  help       the students  look   back    on  what  might   have    been  a
students  make     their     reflections  during      problem         two-week or longer project and extract what they had
solving   and design   activities   explicit.    But helping          learned.   We've     dealt   with   that issue   two   ways.
them reflect on the full experience seemed to us to                   Students   keep   design   diaries   (Puntambekar,     et al.,
require   more  than    simply    asking     them   to    make        1997)   throughout   their   activities.   Design      diaries
reflections explicitly -- we needed to find a way, we                 differentiate between different phases of their design
thought,  to  make   this kind   of summative       reflection        activities: understanding the problem, generating and
feel like a natural activity and do it in such a way that             choosing   between      several     possible     alternatives,
students would quickly recognize the            value  of  this       building, trying out, and analyzing the solution, and
kind of reflection.                                                   so on.   Our   first way of dealing      with  this   issue is
     This  is where    our   familiarity     with case-based          that we've organized JavaCAP in the same way and
reasoning and case libraries came to the rescue.           We         asked students to have their design diaries in front of
had seen earlier that students weren't much interested                them  as they    are writing    their  summaries.      When
in case libraries that experts wrote for them (Hmelo et               entering their experiences understanding the problem,
al., 1997).   But we knew also, from our work with                    they know which design diary pages to refer back to.
undergraduates, that authoring of cases worked well in                Our  second   solution    is as  yet  unimplemented:        we
promoting    learning  and   that  students     liked  reading        intend to integrate electronic versions of design diaries
each others' cases.  We decided to try this      with  middle         (which   support     reflection    while   working     on    a
schoolers.   This is how the concept of JavaCAP was                   problem    or   project)     with   JavaCAP      (used  after
born.                                                                 completion of the project).
                                                                           JavaCAP asks students to think of their previous
B. JavaCAP                                                            design activity as a play with scenes.       They compose
JavaCAP      evolved   from  case   libraries   developed at          a case by describing their experiences as if they are
Georgia   Tech     for aiding    experts     (Domeshek       &        writing  a narrative    (not   quite  a  play,   as they    are
Kolodner, 1992), aiding architecture students, and for                describing and    summarizing       what  happened     rather
supporting     engineering      and      industrial    design         than   writing    dialog).          Students   can     upload
education.    A case library for experts holds "cases"                multimedia elements for a scene and annotate them.
dedicated to a specific content area.        Before getting           When    finished,    they    can  publish   their   case    by
involved  in  educational    endeavors,   our   AI    group  at       choosing   indexes   for   it,  anticipating   the  kind    of
Georgia Tech worked with architects and engineers to
description each of their scenes  needs  to  have  for
others to recognize its usefulness to their endeavors.         B.1.  The Scenes
     JavaCAP  is  implemented  using  Java  and   runs         The  first   scene  in   JavaCAP   is   the   "Problem
over  the   World   Wide  Web    (hence    its  name).         Presentation" scene, where the problem specifications
JavaCAP's main and authoring menus are displayed               and  expectations  are presented   (see an   example in
in Figure 1. The  main  menu  at  the left bar  allows         Figure 2). Then comes the "Alternatives Selection"
students to browse, search or author   cases.    Also,         scene where students complete an alternatives table,
customizing is available for authorized users. When            entering the criteria used to compare the alternatives
authoring is chosen, the student logs in with his/her          considered (see an   example   in  Figure    3). In  the
user name and tells the system which design problem            "Solution"   scene  they  describe the   solution   they
s/he is commenting on.    From   the  authoring  menu          chose, what happened as a result of trying it out, and
students may access the four scenes or  publish  their         what they learned from it. Finally, they conclude the
case.                                                          entire experience in the "It's a Wrap" scene, where
                                                               they  can   also  describe anything     else  that  was
                                                               especially important to their effort (e.g., collaboration
                                                               experiences, what they learned about doing design).

     Figure 1: The authoring menu of JavaCAP after logging in through "Authoring" at the left bar main menu.

     With the exception of the alternatives scene, all         artifacts.  Annotating images  anchors   the  reflection
scenes are   designed with   the same   `two-column            process to concrete and attractive elements.     On the
notebook' screen.  The left column of the notebook             right column of the notebook there are labeled slots
provides an unstructured area for kids to freely write         for  text  entry as well   as pull-down      menus   for
about their experience, while referring to an image.           indexing.   This   format  creates  a   structured  and
Students use digital cameras to capture their design           sequenced procedure for the reflection process. Some
of the slots are accompanied by scaffolding features          talk about what   was     important  to them  when   they
such as suggestions for criteria (general and problem-        began the design problem.     They are encouraged to
specific) to compare alternatives or lessons learned in       use  a digital image   to illustrate some   aspect of the
previous cases (Guzdial, 1994).                               this initial phase of the design process.    This duality
   The   two-page    notebook    interface   supports         requires  distinctly   different  responses,   providing
collaboration by providing distinctly different space         collaboration based on an image and again on more
for two approaches to expressing the problem and the          structured text responses.    While     one student  may
collaborative design solution.  For  instance, in the         contribute by drawing a scale diagram of the proposed
"Problem Presentation"  scene,   the right-hand page          solution, another may be best able to synthesize the
includes requests for a title for the case, the problem       group's  statement     of the problem.       The   paired
presentation and some learning expectations.   On the         presentations   elicit and  support   multiple levels  of
left-hand page, the students are simply prompted to           student participation in the group solution.

                                      Figure 2: The `Problem Presentation' scene in JavaCAP.

          Figure 3: The `Alternatives Selection' scene in JavaCAP where a student filling a 9x3 table.
   Figure     3  shows     an    "Alternatives    Selection"         the process     as well   as  the   content  of  the  design
scene.   This is the   most   challenging     scene.     Kids        solution. The last scene is very open-ended,providing
summarize the set of criteria they used (the vertical                a forum for reflection on the entire spectrum of the
dimension of the table) to make their design decisions               processes   and    content   experienced     in  the  design
and what alternatives they considered (the horizontal                problem.
dimension).   During design, they might       or  might   not
have pulled together all of their considerations in this             B.2 Supporting Collaboration
way.   We  ask   them,  in their  summaries,     to do   that.       We envision the use of JavaCAP as a collaborative
Many     groups  have   "design    fixation",    finding   it        tool, where     authoring a   case  is done   by  a   team of
difficult to go beyond their initial idea. To encourage              students.  One     team   approach     is  to   assign  each
consideration    of multiple     design    alternatives,  the        member to be responsible for the first draft of one
students are asked to evaluate at     least   two solutions          scene,   all    members      review    each    scene,   then
against the same set of criteria.     The interface in the           collaborate  on    the   final version    of   every   scene.
"Alternatives"   scene   illustrates  this    alignment    of        JavaCAP facilitates this collaborative work of a team
different solutions, side-by-side in    vertical    columns          in an asynchronous mode. Once a team member has
against   the  same    set of    criteria.  Students     have        entered a scene page      to edit,  no  one  else in  his/her
difficulties understanding the concept of criteria used              team   can   enter  that  page.     The   warning   message
to select the best alternative. We ask them to give it               includes a link to the e-mail of the member who is
another try after solving a problem even if they had                 currently editing the page, as well as other contact
trouble doing it while they were engaged in design.                  information.    When    a team   member     exits the   scene
JavaCAP provides prompts for criteria appropriate to                 page,  then  it is unlocked    for  others  to  edit.   Team
each problem and also describes criteria in a generic                members can review their peers work at any              time,
manner.   Our intention    is to integrate  the scaffolding          entering  any   of  its   scenes    through   the   browsing
for summarizing (in JavaCAP) with scaffolding for                    section.   Of   course,   there   are  many    collaboration
making    the design   decision  using  electronic   design          issues that need to be addressed before we can say that
diaries.                                                             JavaCAP provides mature collaboration support.
   In     the   two    summative      scenes,     i.e.,   the
"Solution" scene and the "It's a Wrap" scene, there are              B.3 Supporting Customization
several pull-down menus that aid students in indexing                In order to be able to include prompting appropriate
their case based on the knowledge accrued in the case                to particular design problems students are reporting
library. For example, students need to select from a                 on, JavaCAP has a facility for customization that is
list of problems found in previous solutions, the one                simple   enough    for  teachers    to use.   Teachers   can
that is most similar to the main problem they have                   refine existing prompts and scaffolding features, or
encountered in their solution. The list is compiled and              even add new       materials   that might   better  fit their
customized    by   experts and   teachers,    based  on   the        students'  needs.      The   general    preferences include
growing database of cases (see a further section on                  modifications      to     problems      and     its     types,
customizing).                                                        activities/methods/tools,      solution     statuses,    and
     The "It's a Wrap" scene is where the group can                  suggestions  for   criteria  by    problem   types.    For  a
describe important aspects of     the  design   solution   or        specific problem the preferences include: suggestions
process.  The free-form page of the notebook provides                for criteria, classifications of the solution, and major
an area for the group to summarize their experience or               problems encountered in the solution.
tell their story and illustrate it with an image.         The
other page guides the group through describing a key                C. EXPERIMENTS
scene from their work.     This significant event may be             The authoring module of JavaCAP was tested twice
the location of an important resource or some aspect                 in a Georgia middle school to evaluate the usefulness
of the collaborative experience.   There    is a  pull  down         of the authoring tool and to acquire student authored
menu   to select an  activity  or tool  that   was   used  in        cases.
this "key" scene for the design process.         The group
goes on   to  describe  what     happened   in  that crucialevent and then what they have learned in general fromworkingonthisproblem.Thissceneprovidesthe"creative" outlet for the group."It'saWrap" istheplace where they get to "rap".It is like a prologue,where the group has an opportunity to reflect on whatis significant at the end of the design process.Theycan contrast thistotheirinitialexpectationsinthe"Presentation" scene.When peers use the case, thesepersonal reflections may provide valuable insights toC.1 Piloting with StudentsAnearlyversionofJavaCAPwasusedbyseveneighth grade earth science students and one seventhgrade life sciences student, selected by the classroomteachersfromapoolofoverforty-fivevolunteers.Thestudentsusedtheirindividualdesigndiariestoassist in authoring cases representing the experiencesof their group and its chosen solution.The volunteers joined the EduTech staff membersin a science classroom after school for two sessions (a
total of     three   hours)  in  November,      1996.    The         The "Solution Scenes" contained general functional
authoring tool was accessed via an intranet of nine                  science knowledge, many described some detail of the
PowerBooks, with one as the server.                                  collaborative process they used to solve the problem.
      The students were able to complete their cases                 The final scene, "It's a Wrap," was most often used to
and rated the tool's usability as very good.      They liked         show the importance of research to their solution and
the permanence of the case in the computer database                  the collaborative process in determining the solution.
and publishing their solution.                                       These  initial student  cases  contained only     high  level
                                                                     functional   descriptions   of  science   (we   would   have
C.2 Class Use with Students                                          liked  more   technical   detail),  but  the play   metaphor
A new and improved version of JavaCAP was used                       elicited  some    very    specific   explanations    of    the
later by thirteen seventh grade life sciences students in            collaborative design process students used.
June, 1997. They had just spent three weeks in class
developing    a  group  design   for  robotics    locomotion        D. DISCUSSION
derived from     the   way   one or   more    arthropods   get
around.   The students worked in groups of three to                  D.1 Lessons Learned
five keeping individual diaries of their design work as              The net-browser interface for text and images is an
well  as  a  group   portfolio   of  their  experiences  and         easy interface for students to use.      The middle school
design products.     These students felt comfortable with            students readily fill in the blanks on the display form,
the JavaCAP      interface   since  they had   used  another         but  the content    of  the   cases  contained    very   little
EduTech software tool with a web-browser interface.                  evidence of science learning in the problem domain.
The   teacher    selected    thirteen   students  from   two         The    pull down    menus     within  the  text  areas   were
classes, representing a cross-section of abilities and               almost   always     used, but  hyperlinks     to  scaffolding
interest levels.     In each class there was one pair of             were not.   Most of these     links  were at  the bottom    of
students who had worked within the same team, each                   the display, and may not have been seen in time to be
of    these   pairs     authored      a    single    solution        used.  The   time   allocated  to   student  authoring     will
collaboratively,       the     other    students    authored         need to accommodate the accessibility of the cases on
individually.                                                        the  network    and  the  complexity      of  collaboration.
      The    selected   students    joined    EduTech   staff        Accessing    the  tool  via the world-wide     web   yielded
members in the middle school media center during                     variable response times.      The class test did not allow
their science class on two successive days.         JavaCAP          enough time for all students to complete their cases
was accessed via Internet connections available in the               or  to review   and  edit  them.     Image   capturing     and
school;   it was   served    from   a Macintosh     server at        uploading   adds  a considerable amount of time         to the
Georgia   Tech.    None     of the   students  had  previous         case   authoring.       However,     the  use    of  images,
experience with JavaCAP.                                             diagrams and models to represent a design idea is very
      Students   were   provided     with   their individual         valuable in the authoring process, the additional time
diaries  from   the  problem    and   their  design  artifacts       is well-spent.
from the portfolio. They took turns capturing images                      Even though nine of the eleven test cases were
of their design products with a digital camera. Images               authored individually, the students often portrayed the
were captured during the first        session.    Overnight,         collaborative nature of their solutions.      Several scene
EduTech personnel loaded them onto the web into the                  titles included the group name and many alternative
scenes students had designated so that students could                solutions were identified by student names.         The more
write in the context of the images on day two.                       specific    entries  in   the  scenes    usually    portrayed
      Students   were   excited  to   author  their recently-        collaborative processes, with either favorable results
completed problem solutions and were able to use the                 or stating how it might work differently in the next
software with minimal instruction. This was the first                design problem. For instance, an entry in the "It's a
test where the uploading of images was a working                     Wrap scene" by one seventh grader:
option. Students found the digital camera easy to use
and   were    able   to  efficiently    acquire   images   to             "Working in a group and putting your heads
accompany the case they were authoring.             The four-             together gets things done faster. We have also
scene   framework      for  recording   their solutions  was              learned a lot about the movement of the
readily   understood.      Students   grasped   the different             arthropods that we studied."
spaces   within    the authoring    tool and   were  able  to
move between the scenes as intended. Most completed                  During      the  individual    authoring,     the    students
the scenes in the order presented on the introductory                naturally gravitated to the computers in pairs working
screen, but a few skipped a scene in their authoring.                together    on   how    to    use    the  case    tool.    The
Of    the  eleven      cases   authored,    only  three   had        synchronous     collaboration     is very    evident  in   the
alternative tables providing information for          several        students'   case    authoring,  while    the  asynchronous
solutions    and   a systematic    evaluation    mechanism.          mode is not so familiar to them.
                                                                        software will have equal expertise, with the software
D.2 Issues to Explore                                                   and teacher supporting each other.         Other times,    the
Initial development       and   trial of  JavaCAP       perhaps         teacher    will be  able   to help   more.       We     see a
raises more questions that it answers.          Some have to            symbiotic   relationship   here.   When     the  software   is
do with its use. Will JavaCAP perform well when the                     more    capable   than  the   teacher,  it might     serve  as
team    members     access   the  case    asynchronously      to        scaffolding both for the students and the teacher.       The
author and revise the scenes?         How will teachers use             teacher    may  learn from  the   software  how  to  get   the
the tool in the curriculum and how will they manage                     students to more specificity, for example. When the
the computer access required to author cases? What is                   program    is weak    compared    to the   teacher,  we  will
a reasonable time frame for the middle school student                   know that we need to examine what teachers are doing
to  be  able   to   author?    Will   the  depth     of science         and decide whether this is something that we want or
knowledge in      the    scenes  increase   if  more    time  is        can feasibly put into our software.
allocated     to authoring?       Will    more   iterations   of             A tool that would help students be more specific
authoring increase reflection and thus lead to better                   scientifically  might   also  help   teachers   create  more
construction of scientific knowledge?                                   interdisciplinary curriculum.     Students wereconcerned
      Others     have     to    do    with      the   potential         with spelling and punctuation, the need to edit their
contributions     of   case  libraries    and   case-authoring          draft case, and the desire to be understood by many.
tools   to learning.     When    will  browsing     the middle          A tool that helped students with the science would
school student authored case library be useful and in                   make    it easier  for a language    arts   teacher  to  help
what   ways    will it strengthen     the student's  ability  to        students    write   a  narrative   describing      a  science
grapple with an ill-structured problem?          Should there           experience.
be criteria for including student authored cases?            Can
the   student    learn   about    the  design      process    by       E. SUMMARY
browsing a case authored by        a   design   team,   even  if        We   have     described    JavaCAP,     a   case   authoring
the domain knowledge         is  distinct from     that  of  the        program     we    developed     aimed    at   middle-school
current problem?       Can the case reflect the process as              students   studying    the  EduTech     LBD     curriculum.
well as the content used to derive a solution?                          Middle-schoolers can author cases in teams and use
      Some    have    to do  with  its integration      into the        the  tool   in   a  collaborative    way    to  share    their
classroom and LBD environment.             When is it better            experiences while      learning   science  through   solving
to  start  using  JavaCAP       along  the    design    process?        design     problems.   Their    teachers    can    customize
Would      it be  appropriate     to   author    the    problem         scaffolding and indexing features in JavaCAP to better
presentation     and  alternatives    selection  scenes    when         fit their   students'    needs.    Students     can     upload
the   design     solution  was    chosen,     then   finish  the        multimedia elements they have captured during their
solution   and   it's  a wrap   scenes    after the  design   is        studies and eventually they can publish their cases on
completed?                                                              the Web.
      But  the   most    important    questions,     we    think,            We    have  tried JavaCAP     with    20  students    and
have to do with the role the software should play in                    made significant changes in its structure and interface
learning   and    the  embellishments      it   needs   to   help       along the formative evaluation process. According to
students summarize and articulate better.            What they          our  observations,     the  program     is  usable   and   the
entered    into  JavaCAP,      as  mentioned     above,      was        current interface is well understood by students and
lacking the technical kinds of details and specificity                  teachers, though some concepts remain difficult for
we would have liked.       The problem may not be with                  students, such as distinguishing between criteria and
JavaCAP; it may be with what students were pushed                       alternatives.      Teachers     collaborating        in    the
to  do  during    their   classroom    experiences.      We've          development      of the    LBD    science   curriculum     are
found that, in general, students are not pushed to get                  authoring exemplary cases and customizing JavaCAP
to details in middle school but that when we sit with                   for new    problems    they   develop   for  their   students.
them and talk and prompt, they are able to consider                     Further research will be completed in order to learn
far more than is asked of them. We will have to find                    how to better scaffold the authoring process and to
out what levels of detail we can expect and how to                      enhance the collaboration features.
promote it.                                                                  Future    research  efforts   will  focus   on   use   of
      More broadly, we would like to be creating tools                  JavaCAP to support teaching in collaborative settings
that,   in    some     sense,    free     the   teacher    from         at  the middle    school   level.  The   tool   provides   the
responsibility for facilitating perfectly.      If a teacher is         opportunity for teachers to form student groups based
weak    at    helping  students   identify    constraints    and        on  interests,  rather   than  the   by  classroom      period.
criteria or doesn't know what kinds of questions to                     JavaCAP would provide the collaboration across class
ask   students   to   get  them    down    to   specifics,   for        periods    or   even    between    schools,     where      the
example,      a   piece     of   software       that    scaffolds       curriculum      implementation    called    for  wider-based
appropriately might fill in.      Other times, teachers and             collaboration.    JavaCAP might provide the forum for
the sharing of ideas, another tool from our research                   Georgia    Tech     (CSCL     '97),  Proceedings      for
group    may  be   employed     to   facilitate  the  cross-           Computer     Support    for   Collaborative    Learning
classroom discussion.                                                  1997.
     Another     focus   will   be   to  determine     how         Guzdial, M. (1994). Software-Realized Scaffolding to
JavaCAP can better facilitate reflection and iteration.                Facilitate Programming         for  Science  Learning.
The authoring portion of JavaCAP is designed to be                     Interactive Learning Environments, 4(1), 1-44.
completed at the conclusion of the design process, to              Hmelo,  D.    L.  Holton,      J. K.    Allen,  and    J.  L.
prompt the students to take another look at what they                  Kolodner. (1996). Designing for Understanding:
have learned and accomplished within their group. But                  Children's   Models     of Lungs,    In Proceedings of
we see JavaCAP playing an important reflective role                    the Nineteenth Annual Meeting of the Cognitive
throughout the students' design and problem-solving                    Science Society. Mahwah, NJ: LEA.
processes. The task of writing a case would be easier              Hmelo, C. E., Vanegas, J. A., Realff, M., Bras, B.,
on   the  students  if   it was    a piecemeal,    iterative           Mulholland,     J., Shikano,    T.   and   Guzdial,   M.
process, rather than a colossal task at the end of a                   (1995). Technology Support for Collaboration in
project. Further, the solution and "It's a Wrap" scenes                a  Problem-Based        Curriculum    for   Sustainable
could be more reflective. It is important for students                 Technology,         in   Computer       Support       for
to remember and record their design process, including                 Collaborative    Learning      (CSCL       '95),  J.   L.
wrong-turns and other realistic elements that might                    Schnase   and   E.  L.  Cunnius,   Eds.  Bloomington,
not  appear in a  statement   of  a  final, clean solution.            IN: Lawrence Erlbaum Associates, pp. 169-172.
We need to find a way to encourage that.                           Kolodner,  J.,   and    the  EduTech     Design      Project.
     One  path   to   a greater   role  for  the  JavaCAP              (1995). Design Education Across the Disciplines.
software is   to continue    our    process  of  integration           Paper presented      at  the   Second    Congress     on
between JavaCAP and other collaborative tools being                    Computing in Civil Engineering, Atlanta, GA.
developed by the EduTech Institute (Mark Guzdial et                Kolodner, J.   (1993).     Case   Based  Reasoning.       San
al, 1997). For example, JavaCAP has many elements                      Mateo, CA: Morgan Kaufmann Publishers.
that would dovetail nicely with the design diaries that            Kolodner, Janet L., (1996).       Educational implications
we have been developing, and use of JavaCAP could                      of analogy:   A view from case-based reasoning.
be easily scaffolded through use of the Planning tool                  American Psychologist.
in SMILE.                                                          Puntambekar, S., Nagel, K., Hubscher, R., Guzdial,
     In  summary,   JavaCAP      is  playing an   important            M., and Kolodner, J. L. (1997).         Intra-group and
role  in   encouraging      student    reflection  through             intergroup:     An     exploration   of  learning    with
collaborative    case   authoring.   The    task  of   case            complementary          collaboration    tools.         In
authoring  is challenging     for students,  as   are many             Computer     Support    for   Collaborative    Learninb
learning   activities.   Our     hope   is    to   improve             (CSCL     '97).     Lawrence      Erlbaum   Associates.
integration and guidance (through scaffolding) to ease                 (this volume).
the complexity and improve the learning benefits of                Rogoff, B.    (1990).      Apprenticeship    in  Thinking:
the task.                                                              Cognitive Development in Social Context. New
                                                                       York: Oxford University Press.
Ackn owled gm en ts                                                Salomon, G., &    Perkins, D.N. (1989).        Rocky roads
     The research reported here was supported by the                   to  transfer:       Rethinking     mechanisms      of  a
Woodruff Foundation,        the ARPA    CAETI     Program              neglected       phenomenon.                 Educational
under     contract    N66001-95-C-8608,           and    the           Psychologists, 24, 113-142.
McDonnell Foundation.                                              Scardamalia, M., Bereiter, C. and Lamon, M. (1994).
                                                                       The   CSILE      Project:     Trying    to  bring     the
                      References                                       classroom into World 3," in Classroom Lessons:
Barrows,   H.S.  (1985).     How    to design   a problem-             Integrating   Cognitive       Theory and    Classroom
     based curriculum for the preclinical years.       NY:             Practice,  K.   McGilly,      Ed.  Cambridge,     Mass.:
     Springer.                                                         MIT Press, pp. 201-228.
Domeshek, E. A., & Kolodner, J. L. (1992). A case
     based design aid for architecture. In J. Gero (Ed.),ProceedingsoftheSecondInternationalAuthor's Addresses
     Conference on Artificial Intelligence and Design.             Amnon   Shabo,    Kris     Nagel,  Mark     Guzdial,   Janet
Guzdial, Mark, Cindy Hmelo, Roland Hübscher, Kris                  Kolodner: EduTech       Institute,    Georgia   Institute  of
     Nagel, Wendy Newstetter, Sadhana Puntambekar,                 Technology,    GCATT       Building,    250    14th   Street,
     Amnon    Shabo,     Jennifer   Turns,   and  Janet  L.        N.W.    Suite    #138,     Atlanta,     GA     30318-0490.
     Kolodner     (1997).    Integrating     and   Guiding         amnonh@cc.gatech.edu,                  kris@cc.gatech.edu,
     Collaboration:     Lessons   Learned    in  Computer-         guzdial@cc.gatech.edu, jlk@cc.gatech.edu.
     Supported   Collaborative      Learning    Research at
