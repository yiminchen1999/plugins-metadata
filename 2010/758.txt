                                               ICLS 2010  ·  Volume 1

        Preparing for the Long Tail of Teaching and Learning Tools
          Charles Severance and Stephanie D. Teasley, School of Information, University of Michigan,
                                 1075 Beal Ave, Ann Arbor, MI, 48109-2112
                                      Email: [csev, steasley]@umich.edu

         Abstract: In this paper we apply the concept of "the long tail" (Anderson, 2006) to teaching
         and learning tools to discuss how the limitations of current Learning Management Systems
         (LMS) can be overcome to allow instructors to customize the technology they use to support
         their own classroom practices. Learning tools in the long tail are those that are widely used  by
         a subset of instructors - tools specific to large courses or tools specific to a particular field, and
         tools that are only used in a few courses or a single course.     Using several examples from
         courses taught on our campus, we show how to put extensibility in the hands of the instructors
         to create  knowledge-age    learning   technologies   that   are customizable, interactive    and
         controlled by users.

Introduction
Increasingly, learning management systems (LMS) such as Blackboard or Sakai are seen as one of the most
essential Enterprise Services in education. A recent survey of 115 American universities has shown that 89% of
students reported that they had taken a course that used a LMS (Smith, Salaway, & Caruso, 2009). In addition, a
2009 survey of US school district administrators estimated that more than a million k-12 students took online
courses in the school year 2007-2008 (Picciano & Seaman, 2009).        That these systems are basic infrastructure
for learning in higher education is already a fact; that they are as common in K-12 education may also soon be
true (see Means, Toyama, Murphy, Bakai & Jones, 2009).         Yet what do we know about using LMS well for
teaching and learning?   How can we help teachers to incorporate the promise of Web 2.0 technologies into their
classrooms?  In this paper, we examine the trends in the evolution of learning management systems and how
those systems   are currently  being used   in higher  education.   We  then propose how   learning   management
systems must change by leveraging the "the long tail" (Anderson, 2006) of teaching and learning tools.           These
suggestions apply to higher education specifically, but also provide guidelines for development and use that
may ease the transition as LMS use permeates K-12 education.

Background
Few other campus enterprise systems have the requirements of 24x7 availability, with the ability to scale to
support over 10,000 simultaneous users during peak loads.     On many campuses, learning management systems
must run for months without allowing for an outage to perform major software upgrades.           These requirements
lead to a very careful and conservative approach to upgrading or changing the LMS software in the middle of a
semester. This trend is coupled with increasing penetration of the LMS system as measured by the percentage
of students and faculty who are using the LMS (Smith, Salaway, & Caruso, 2009).         On our own campus, the
annual IT survey shows that 99% of students and 81% of faculty have used our LMS for at least one course in
the past year (Lonn & Teasley, 2009).
         Because LMS use has become so pervasive in higher education, we have an opportunity to analyze
how the average instructor uses these systems across many different subjects.   Most analyses of LMS use
(Hanson & Robson, 2004; West, Waddoups, & Graham, 2007) point to a distribution that follows the "long tail"
typically found in analyses of most online systems (Anderson, 2004).      Specifically, the long tail refers to the
statistical phenomenon of a power law or Pareto distribution where few items comprise the most use but there is
a long tail of many items used with a much lower frequency.    This distribution is clearly seen with the use of
tools available within LMS, where a few tools are heavily used then usage drops off dramatically after five or
six core tools. Overall, document management     and broadcast-oriented communication tools (Content Sharing,
Assignments, Announcements, Schedule, and Syllabus) comprise 95% of all user actions (Lonn & Teasley,
2009; Hanson & Robson, 2004). By contrast, the tools that are more interactive (Chat, Discussion, and Wiki)
are not used as much.  While research coming from     the Learning Sciences would have much add to the current
literature addressing the relative value of teaching with one tool or another, in this paper we leave this to others
and focus here on the fact of current LMS use and how to empower instructors improve their own use of these
systems.
         The two trends of "LMS as critical infrastructure" and "only a few of the tools are heavily used" leads
to the inevitable conclusion that LMS development efforts need to focus on improving the core tools which
make up the LMS and spend less effort on the long tail of tools.      If the trend was extended to infinity, LMS
systems of the future might have exactly seven tools which are never changed or upgraded.           While this will
insure that the core infrastructure is solid, consistent, and reliable, it will have a tremendous negative impact on
the ability for instructors and learners to innovate and find new ways to use technology in education.              One

                                                   758  ·  © ISLS
                                                   ICLS 2010    ·  Volume 1

possible    path forward   is that   learning management        systems  will   go  "underground"     - where   in order to
experiment with innovative ideas, savvy faculty host their own learning management systems under their desks
or perhaps run software on their own ISP account.        The "Edupunk" movement (e.g., Kuntz, 2008; Young, 2008)
expresses   this sentiment    in a  call-to-arms to    reject commercial    LMS     products.   This approach does allow
instructors to be innovative, but it adds the burden of maintaining a production infrastructure and saps precious
energy away from their teaching efforts.      Another extreme reaction to the perceived limitations of current LMS
is a call to "teach naked" and reject the use of technology in the classroom altogether (Young, 2009).                 This,
however, seems like a "baby with the bathwater" solution that is not likely to be realistic for today's students
who are considered to be the "net generation" and "tech-savvy Millennials" (Junco & Mastrodicasa, 2007).
           Rather that going Edupunk or even teaching naked, we believe the solution to this problem is to add
features to LMS systems that allow the core functionality to focus on scalability and stability while allowing
innovation at the edges by encouraging more use in the long tail.            The key to this approach is that we need to
add features to LMS systems so that they can be extended without adding a new feature on to the LMS servers
or needing to upgrade the LMS to a new version (Severance, Hardin, & Whyte, 2008).                 The extensibility needs
to be placed in the hands of the instructors rather than only in the hands of the LMS system administrators. This
DIY (Do It Yourself) attitude reflects the growing capacity of Web 2.0 applications to put users in control of the
content  and    distribution  of materials.   In   popular    culture this  DIY  capability   can  be   seen in zines,  self-
publishing, and music re-mixes.       We believe this approach can be extended to educational tools as well and
fulfill Collins   &   Halverson's    (2009)   call for  knowledge-age       learning  technologies    to  be  customizable,
interactive  and  controlled  by    users.  Only   then  can    we meet    both the  needs of   enterprise   production and
innovative approaches to teaching and have the best of both worlds.             The average instructor who only uses 5-6
core tools has access to a scalable and stable toolset, while the instructor with a new idea is allowed to bring that
idea into their class in a few days or weeks of effort - all without destabilizing the LMS production system.

Teaching Tools in the Long Tail
We see learning tools falling into three basic categories: (1) the core 5-10 tools used by nearly every teacher, (2)
a set of tools that are widely used by some subset of the teachers - perhaps tools specific to large courses or
tools specific to a particular fields like mathematics, and (3) tools that are only used by a few courses or even a
tool purpose built for a single course.    As we look at the nature of the tools in (1) and compare them to the tools
in (3), we are likely to see a transition from tools that "manage" the learning process towards tools that support
the learning process.     The tools in category (2) are likely a mix of management and learning.             This leads to a
"long tail" effect where the more learning-oriented tools are in the long-tail.         While each individual tool may
have a very small "market share" when aggregated together, these long-tail tools may well represent a majority
of the overall usage.
           The nature of the content-oriented tools (category 1) that are used universally is that their features are
likely  to  be  useful to every   single   instructor, regardless  of   context  or discipline.    Hence  Category  1  tools
comprise the bulk of the distribution of use curve.       By contrast, the tools in the second category tend to end up
appealing to a smaller but identifiable population of instructors.          For example, the CAPA testing system uses
LaTeX as its question authoring language and as such naturally appeals fields such as mathematics, chemistry,
and physics where most of the instructors with a Ph.D. in those fields learned LaTeX to write and publish
papers.  Furthermore, CAPA provides a very rich (albeit complex) mechanism for generating many equivalent
variations of a problem by altering numeric values randomly.                This functionality  is very  useful for courses
where many of the problem sets assigned to students involve numeric calculations.               While the CAPA system is
very    popular  for use  in  first and  second    year physics,   math,   and  chemistry  classes    with high-enrollment
numbers, it is simply too difficult to learn to ever become widely used for fields like literature or the humanities.
This naturally limits the overall number of courses and faculty who will use a CAPA-based system to a small
fraction of the market ­ perhaps less than 2-3% of the overall courses taught.                However, for those courses,
CAPA     is nearly   the perfect  solution  particularly  when     coupled  with  the ability   to collectively build  large
question pools across institutions and with some publishers providing CAPA question banks with physics and
chemistry textbooks.      Since CAPA reflects such a small market share overall, the testing systems provided in
mainstream LMS products do not include CAPA-like features and so if you teach a course that needs CAPA ­
pretty much your only choice is CAPA.         For tools in the third category, the potential market share is smaller yet
and these tools may have very individualized use that can not necessarily be generalized across disciplines or
teaching contexts.
           In what follows below, we discuss several examples of category 2 & 3 tools in the long tail and provide
detail about the ways in which these tools extend instructors' use of the standard LMS toolset to meet their
unique   needs.   These   examples    reflect current   teaching    practice at  the University    of Michigan   where   the
enterprise LMS is based on the Sakai open-source LMS.

                                                        759   ·  © ISLS
                                               ICLS 2010  ·  Volume 1

Student Assessment Management System (SAMS)
In our College of Literature, Science, and Arts (LSA), instructors have access to a CAPA-based system called
SAMS (Student Assessment Management System) which is heavily used by the physics, mathematics, and
chemistry departments. A requirement unique to SAMS is the need to do extensive data mining across the
multiple sections of the same course. Since there are so many sections taught by graduate student instructors in
introductory-level courses,  SAMS   must  be able to      provide    regular reports  to course  coordinators so that
problems encountered by individual student-instructors can be diagnosed and addressed as quickly as possible.
In addition, error patterns in problem sets seen across sections provides the main instructor with feedback about
which concepts and/or formulas need further elaboration in lecture or additional time in section.          For these
reasons, SAMS is considered to be a powerful tool in achieving consistently high quality in the teaching of these
large-enrollment courses.
          Despite its important role in the largest academic unit on campus, SAMS is not in the standard toolset
provided by the LMS.     Since SAMS is written in PERL and the underlying architecture of the LMS (Sakai) is
written in Java and because the requirements for SAMS are so complex (e.g., including rules about to who can
see which data and reports), it was never practical to re-write SAMS inside of Sakai.       For many years students
in classes that used SAMS visited two separate sites for their courses: one course site in the LMS and one
course site in SAMS.     This was confusing and inconvenient for students and instructors as the SAMS site had
its own navigation, login process, and user interface conventions.     After an early version of IMS Learning Tools
Interoperability was installed in Sakai, we were able to integrate SAMS into Sakai to share identity and roster
information with SAMS     without any user intervention.  We even created     a virtual tool in Sakai that made it look
like we have built SAMS into Sakai.    Instructors can now simply add the SAMS tool to their course site like
any built-in Sakai tool. Figure 1 displays the user's view of SAMS inside of a Sakai course site.

                                    Figure 1. SAMS Running Within Sakai

          Effectively the user experience for both the instructors and students is as if the SAMS tool had been
ported into Sakai. There is no need to rewrite any software; we only had to add some integration in SAMS to
receive and process the IMS Learning Tools Interoperability launch requests from Sakai.            This approach also
allows the College of LSA to maintain their strategic access to their data, and to independently upgrade and
improve   SAMS   to meet   their needs on their own       schedule,   unencumbered     by the   Sakai development  or
production priorities.
          This is an excellent example of how we can develop category 2 tools to meet both the enterprise-wide
needs in teaching and learning as well as the school-level needs for teaching and learning.      The approach allows
reuse of the common capabilities of the enterprise systems while allowing schools or departments to address
their own unique needs in focused areas of teaching and learning.        An enterprise LMS does not have to be a
win-lose proposition across campus.

LectureTools
The LectureTools project provides free tools that support interactivity and enhanced modes of learning during
lectures. Like CAPA, LectureTools is most useful for medium to large lecture courses where the teaching staff
wants to use support interactions between the instructor and student, and between students as part of the lecture
experience.  Again we see a situation where the overall population of instructors for whom LectureTools is
useful is a fraction of the entire set of courses that are taught at the university. And, here again, the functionality
provided by Lecture Tools is not likely to be included into the core functionality of most LMS systems.

                                                   760  ·  © ISLS
                                                  ICLS 2010  ·   Volume 1

          Like the SAMS project, we developed a similar virtual tool approach to integrate LectureTools into
Sakai. Instructors can add the LectureTools tool to their course site like any other tool built into Sakai.      Sakai
uses IMS Learning Tools Interoperability to launch and provision course sites in LectureTools, giving students
and instructors a seamless user experience from a single course site.       Unlike SAMS, the LectureTools service is
available to instructors at any university in the US and Canada.       These additional schools may or may not use
Sakai as their LMS.     As IMS Learning Tools Interoperability support is added to all LMS, any school can
integrate LectureTools into their campus-wise enterprise LMS systems.
          We are currently in the middle of a project integrating LectureTools into Blackboard LMS running at a
community college and one commuter campus of the large research university as shown in Figure 2.                  This
project will not only demonstrate the ability of LectureTools to run regardless of which enterprise LMS is in
use, but provide a model for allowing cross-campus collaboration in teaching specific courses.

                               Figure 2. Using LectureTools in Sakai and Blackboard

          We   are  using  an  open-source    Blackboard     Building     Block  that  supports IMS    Learning  Tools
Interoperability   developed   by Stephen   Vickers     of  Edinburgh  University     [www.spvsoftwareproducts.com].
Once the IMS Tools Interoperability integration is completed, the same tool can be used across these three
institutions  with each   set of  users  experiencing   the  tool seamlessly    integrated into their  local LMS  user
interface.  As this pattern is extended, it allows a cross-institutional community to develop where the common
thread is the use of the LectureTools platform to augment their lecture experiences.        By combining small pools
of interest across many campuses, is it possible to end up with a much larger overall demand for a tool or
capability.    By reducing the integration costs to nearly zero using IMS Learning Tools Interoperability, we
increase   the likelihood that  these  cross-institutional   communities   will  form  around   particular pedagogy or
domain specific tools.
          In summary, the middle category of tools, Category 2, are those tools that appeal to some subset of the
overall teaching space and are very valuable to that those teachers and learners.       By allowing tools to be scoped
at a college or department level or perhaps by bringing a cross-institutional community of interest together, we
can match the tool with its level of demand.          While  the core tools are  very  focused  on the management   of
learning,  the tools in the   middle  category    are generally   some combination     of  "learning management"    and
content or  context specific learning.   That is, these more   narrow tools will often focus on supporting   a particular
teaching pedagogy or objective rather than simply moving content around and facilitating students' access to
that content.

Wisdom of Crowds
In addition to Category 2 tools that have broad use with a small market segment, there are also tools that only
appeal to a very tiny population ­ perhaps as small as a single instructor (Category 3).         The exemplar for this
category of tools comes from the book "Wisdom of Crowds" by James Surowiecki (2005).                 Surowiecki's book
provides examples of how groups of people can have collective intelligence that surpasses the intelligence of
any of its individual members.    The author uses examples from social science, economics, and game theory to
provide a basis to explain the mechanisms that make crowds wise.            Often these concepts are explained in the
form of a multi-player game where students play a game and then afterwards the class analyzes player behavior
to illustrate the point of the exercise.
          Often when teachers use the book "Wisdom of Crowds" they play the games with small scraps of paper

                                                      761  ·  © ISLS
                                                ICLS 2010  ·  Volume 1

and a designated student who "runs" the games.       However it is also possible to write computer software that
simulates the game and enforces its rules.   When computer software is used to run the game, the educational
advantage is we can retain the history of player interactions to facilitate a deeper insight into why a player made
a move at a particular moment in time.     For example, the simplest of the games proposed by Surowieki has a
group guess a numeric value such as the number of jellybeans in a jar.       First people independently guess the
value and then an average the values is calculated.
          This game can be played much more effectively on a computer using student laptops or PDA's rather
than averaging numbers on slips of paper. Using technology, students experience first hand how their own
guesses may be less accurate that the group mean and the visible display of individual guesses shows more
clearly how the collective arrives at the correct answer.    To implement the software for the game, we built a
simple application that consisted of 118 lines of Python code hosted in the Google Application Engine cloud
environment.    The tool handled the IMS Basic LTI protocol and implemented the rules of the guessing game.
The instructor could reset the game or view the results ­ the students could simply make a guess.    The tool was
then integrated into Sakai using IMS LTI and made available in the course site as shown in Figure 3.

                        Figure 3. The Number Guessing Application Running in Sakai

          The number guessing game was written in about two hours and used in lecture on the same day that it
was written. After the game was used for one lecture, there were a few bugs that were found and fixed for use in
later lectures.   A tech-savvy  instructor did  the entire   process with no impact  on, nor involvement  of,  the
enterprise Learning Management System.       And since the tool was hosted for free on the Google Application
Engine, the instructor did not even have to worry about the infrastructure needed to run the tool.
          Another game was written to demonstrate the "Free Rider" problem which occurs when groups are
sharing the costs of some shared common good and how people balance the overall group benefit against their
own short-term potential for gain.   The Free Rider Application had several features that made it very effective
for in-class use.  First, since the game enforced the rules, it was not necessary to teach anyone how to "run" the
game. Also, the game picked five students to play the game automatically. Once the players were selected and
the game started, the other students were given a display that updated dynamically as the game     was played. So
students could learn by playing the game and when they were not playing, they could watch as game masters.
The students who were watching could see when players changed strategies and could see the game develop and
see which strategies led to the largest payoff.
          The games are very simple and easy to write ­ since they are embedded in a rich LMS, the tools only
have to solve the very simple problem related to the lesson at hand.    Once these tools are written and put up on
Google Application Engine, they could be used by any instructor using the "Wisdom of Crowds" book in their
classroom by simply exchanging the IMS Learning Tools Interoperability URL, Key, and Secret.
          The number of teachers using "Wisdom of Crowds" in their classroom at any given moment or during
any given semester is very small.   But at the same time, the effort to develop and the tools is also very small.
And the   effort  involved is small enough   that a single   teacher might  do it simply for his or her own    use.
Following the example of free applications available in an "apps store" this instructor might also post it on a
public site for any other instructor using Surowiecki's book in their course.  This example is toward the far end
of the long tail of teaching applications. However, even if it only affects 25 courses across the country in any
semester, these tools can be designed to be really helpful for helping students to understand more deeply this
material. One could imagine a future where books like "Wisdom of Crowds" might come with already-built
games developed and provided by the author or publishers.      These games would be ready to plug into the local
enterprise LMS using IMS Learning Tools Interoperability.

                                                   762  ·   © ISLS
                                                ICLS 2010  ·  Volume 1

Required LMS Features to Enable the Long Tail
If we are to address the need to build and use the long tail of learning tools, we must reduce the barriers to
plugging  new   tools into Learning   Management    Systems.    Opening    up  these system  to  outside applications
ultimately puts the ability to "add a tool" in the hands of the instructors and allows them to add the new tools in
a few clicks and with no intervention on the part of the technical support staff.     Sakai is generally designed to
give instructors a great deal of control of course content to the instructors. A Basic LTI tool has been developed
for Sakai  that   allows the instructor to easily integrate  externally provided   tools into Sakai.   The  primary
information needed for to integrate a tool using Basic LTI is a URL, Key, and Secret as shown in Figure 4.

                      Figure 4. Setting the URL, Key, and Secret in the Sakai Basic LTI Tool

Since the IMS Basic LTI tool will send roster information to the externally provided tool, it is important to
make  sure   that the instructor  is aware  that this is  happening   and  approves  the release  of any  identifying
information using the configuration options shown in Figure 5.

                              Figure 5. Privacy Controls in the Sakai Basic LTI Tool

The IMS Basic LTI specification makes any data that contains identifying information optional.        The default in
Sakai is not to send any identifying information so the teacher must explicitly agree to send the identifying
information to the external tool.
         The developers of each LMS will make their own choices about which aspects of LTI are placed in the
hands of instructors and which aspects of configuration are only available to system administrators or technical
support staff.  The Sakai tool allows local customization of the configuration process for LTI, giving system
administrators  fine-grained  access  control over    which  features  and capabilities  are made    available to the
Instructors. This allows each institution to progress toward the model of many tools in the long tail at the pace
that is comfortable and sustainable for their organization.

Conclusion
We present the case for adding more flexibility to Learning Management Systems and putting that flexibility in
the hands of instructors.  By making it possible to easily integrate more narrow and learning-centered tools into
the LMS without requiring a change in production software or server reboot, we make it far more practical for
teachers and students to experiment with new tools and to find the right set of tools for their particular course,
supporting   a move   from   accidental to intentional  pedagogy   (McGee,  Carmean     & Jafari, 2005).   Once   the
barriers are removed from within the LMS, a market for these externally hosted tools can develop ­ particularly

                                                    763  ·  © ISLS
                                               ICLS 2010  ·  Volume 1

in the "middle tail" category where tools have broad applications within a narrow segment of the population.
We would hope that many commercial and free tools would be developed and made easily available ­ resulting
in many innovative experiments that can lead to a greatly improved learning experience for students of any age.
          Once the barriers for implementation are reduced even further, we envision that tools will be written by
teachers  or students to  solve very  focused  learning   needs.  As  LMS    evolve  and interoperability standards
improve, many of these tools will be very simple to develop and use because they will be placed in the rich
context of a mainstream LMS.
          Perhaps the most exciting aspect of enabling teachers to build, exchange, and use thousands or even
hundreds of thousands of new tools is how we enable the exploring of an increasingly wide range of new ways
to teach.    In addition, by opening the enterprise LMSs to virtually unlimited expansion, we have a place to
explore emerging approaches such as social learning and the increased use and remixing of content from Open
Educational Resources in new and novel ways.      In a sense, while we can see an immediate exciting future that
this approach enables, the truly exciting innovations are those that we can't even imagine because we are locked
into the  content-delivery  patterns of the  current   crop of   enterprise LMS.     Finally, by opening    up these
opportunities to instructors we simultaneously open them up for students to build, organize, and use tools for
their own collaboration and learning purposes.

References
Anderson, C.   (2004). "The Long Tail" Wired, 12 (10).
          http://www.wired.com/wired/archive/12.10/tail.html.
Anderson, C.   (2006). The Long Tail: Why the Future of Business Is Selling Less of More.     NY: Hyperion.
Collins, A. & Halverson, R. (2009). Rethinking Education in the Age of Technology: Digital Revolution and
          Schooling in America.    New York, NY: Teachers College Press.
Hanson, P., & Robson, R. (2004). Evaluating course management technology: A pilot study. Educause Center
          for Applied Research, Research Bulletin, (24), Boulder, CO: EDUCAUSE.
          http://www.educause.edu/library/ERB0424
Junco, R.    &   Mastrodicasa,  J.  M.  (2007).   Connecting     to the  Net.Generation:  What    higher  education
          professionals need to know about today's students.
Kuntz, T.  (2008). The Buzz for 'Edupunk', New York Times.
          http://ideas.blogs.nytimes.com/2008/10/17/the-buzz-for-edupunk/
Lonn, S. & Teasley, S. D. (2009).     Saving time or innovating practice: Investigating perceptions and uses of
          Learning Management Systems.      Computers & Education, 53, 686-694.
Means, B., Toyama, Y, Murphy, R., Bakia, M., & Jones, K. (2009).        Evaluation of Evidence-Based Practices in
          Online  Learning:   A Meta-Analysis   and  Review   of  Online    Learning Studies.    Report for the  US
          Department of Education.
          http://www.ed.gov/rschstat/eval/tech/evidence-based-practices/finalreport.pdf
McGee, P. Carmean, C., & Jafari, A. (2005).       Management systems for learning: Moving beyond accidental
          pedagogy. Hersey, PA: Information Science Publishing.
Picciano, A. G., & Seaman, J. (2007). K-12 online learning: A survey of U.S. school district administrators.
          Boston, MA: Sloan Consortium.
          http://www.sloan-c.org/publications/survey/K-12_06.asp
Severance,   C., Hardin,  J., &  Whyte,  J. (2008).  The    Coming  Functionality    Mashup   in Personal Learning
          Environments, Interactive Learning Environments, 16 (1), p. .
Smith, S.  D.,   Salaway,  G.,  &  Caruso,  J. B. (2009).    The  ECAR      Study of Undergraduate   Students   and
          Information Technology, 2009.  Boulder, CO: EDUCAUSE.
          http://www.educause.edu/Resources/TheECARStudyofUndergraduateStu/187226
Surowiecki, J. (2005). The Wisdom of Crowds.      New York, NY: Anchor Books.
West, R. E., Waddoups, G., & Graham, C. R. (2007).          Understanding the experiences of instructors as they
          adopt a course management system. Educational Technology Research and Development, 55 (1), 1-26.
Young, J. R.   (May 30, 2008).     Frustrated With Corporate Course-Management Systems, Some Professors Go
          'Edupunk'", Chronicle of Higher Education.
          http://chronicle.com/wiredcampus/article/3045/frustrated-with-corporate-course-management-
          systems-some-professors-go-edupunk
Young, J. R. (2009), "When computers leave classrooms, so does boredom." Chronicle of Higher Education.
          http://chronicle.com/article/Teach-Naked-Effort-Strips/47398/

Acknowledgments
Thank you to Perry Samson, Bret Squire, and Francisco Roque for their assistance in this work.

                                                   764  ·  © ISLS
