           Designing for Constructionist Web-Based
                                   Knowledge Building

                    Yishay Mor                                  Jakob Tholander & Jesper Holmberg
           London Knowledge Lab                                      Royal Institute of Technology
           University of London, UK                                          Stockholm, Sweden
                  y.mor@ioe.ac.uk                                    {jakobth},{jesperh}@dsv.su.se

Abstract.  This   paper describes the  iterative design   of a web-based    collaborative    workspace used in
educational practice, called WebReports. The system's unique feature is that it allows participants to
discuss mathematical and scientific concepts using programmed animated and interactive models of their
ideas. Rather than focusing on the specific features of the collaboration tool, we analyze it as part of a
constructionist activity system. We describe the context in which the system was developed and used and
compare our approach to previous research in the field. Further, we then present two scenarios which
demonstrate the system in action. Following that, we attempt to map our cases to an activity theory
framework.  We     highlight several  issues in   the process   of  the  systems'   development,    where   the
contradictions between   the WebReports    system    and  other elements    in the  activity system  shaped its
design, and comment on several issues which go beyond the activity theory framework.
Keywords:   Iterative   design; Design experiment;    Web-based    collaboration;   Constructionism;   Activity
Theory;

INTRODUCTION: KNOWLEDGE BUILDING THROUGH CONSTRUCTION

WebLabs is a 3 year EU-funded educational research project oriented towards finding new ways of representing
and expressing mathematical and scientific knowledge in communities of young learners1. Our work focuses on
the iterative design of exploratory activities in domains such as numeric sequences, cardinality, probabilistic
thinking, fundamental kinematics, and ecological systems. WebLabs utilizes two main media for its activities:
ToonTalk (a programming environment) and WebReports (a web-based collaboration system).
One of the central aims of our work is to extend the idea of knowledge building. Building on the constructionist
tradition (Papert & Harel, 1991; Hoyles & Noss, 1996) we combine software model construction activities with
web-based  collaborative  knowledge    building.  By  doing    so we expand     the range    of communication   forms
learners have at their disposal. Participants can express their ideas as working models, and present these as
representations of ideas and arguments in a discussion. Moreover, computational models also allow students to
explore  aspects   of mathematics    and  science    that  were   simply    were   not available  to study  in   other
representations. This possibility is especially powerful in a multi-cultural environment. When students lack a
common spoken language, the availability of a common visual modelling language is an enabling factor for
collaboration.

CSCL and knowledge building
A majority of the CSCL work focuses on sharing of knowledge through language. This fact limits the potential
of incorporating   knowledge    expressed through    non-verbal   artefacts in  the process   of knowledge  building.
Moreover, there is an obvious problem with this if one wants to achieve interaction and knowledge building
across European countries where students do not share a common spoken language. The paradigmatic computer
support for knowledge building is the CSILE system (Scardamelia & Bereiter, 1996). CSILE is basically a
discussion board where students can post notes on different topics and then comment on each other's notes. The
first interesting aspect regarding   the  system  is  its close connection     to the  so-called  knowledge  building
community model of education and learning. This model builds on sociological descriptions of how knowledge
is created and refined in scientific communities (Latour, 1986). It describes learning as a process of collective

1 http://www.weblabs.eu.com

                                                          
construction   of knowledge.   Topics    are discussed,   elaborated, and  continuously   refined by  a  community    of
learners (or perhaps knowledge constructors). The mutual influences of individuals' actions within a community
compel people to adapt to each other. Adaptation is not only a positive contribution to efficient knowledge
building, but it is also a necessary requirement for a knowledge building community to arise at all.
CSILE's unique innovation was its scaffolding feature: a built-in structure which guides students to focus on
particular knowledge    building  aspects    of their discussions. These  scaffolds  include  prompts   that encourage
students to clarify problem statements, develop theories, state difficulties in understanding certain issues, tag
new information on a topic, and summarize what they have learned. Scaffolds are designed to structure the
students' discourse to replicate the work of a scientific research team or a research community. Two issues that
the extensive research of the use of CSILE in classrooms settings have shown is the need to focus on community
building and on the organisation of learning activities aiming to achieve productive use of the technology (e.g.
Hewitt, 2001; Hakkarainen, Lipponen & Järväla, 2001). These two issues have also been addressed in the work
discussed in this paper.
Another    well-known     system  based   on    the knowledge    building  model    is KIE    (Knowledge     Integration
Environment) (Linn, 1995). Whereas CSILE is domain independent, KIE is targeted towards science education
and the particular properties of that domain. It is based on an educational model called Knowledge Integration.
This model highlights conceptual change, focusing on fostering students' conceptual understanding of scientific
phenomena as the integration of facts, argumentation, and evidence. KIE provides software scaffolding for
students to build arguments (the SenseMaker component) and to collect and categorize pieces of evidence such
as facts   and notes   in a reflective   manner     (the Mildred component).    With   the SenseMaker     (Bell, 2002)
component, students collect evidence that they connect to claims to either support or contradict the argument
they are making, hence, models for scientific argumentation are combined with personal understandings. The
Mildred component (Bell & Davis, 2000) focuses on the content of the evidence and the claims that are used to
build the scientific arguments. A particular aspect is the meta-cognitive support which encourages students to
reflect upon the information they are collecting in their projects.

Designing for systems of activity
Over the last decade, activity theory has been gaining attention as an aid for Human Computer Interaction
(Nardi, 1996), CSCL, and the learning sciences in particular (Kaptelinin & Cole, 1997; Jonassen, 2000; Fjuk &
Ludvigsen, 2001; Barab et al, 2002). Activity theory spans from the idea, put forth by Vygotsky (1962; 1987),
that human actions are directed at objects and mediated by artefacts. These objects define the focus of our
attention, while  the  mediating  instruments    shape   our  perception. Hence,  the  three  form a  minimal    unit of
analysis in understanding cognition and learning. Objects and instruments are artefacts of culture, developed
through its history. A comprehensive analysis of an activity system needs to take these factors into account as
well. Cognition and learning are always situated in socio-cultural contexts. Vygotsky's method is dialectic and
emphasizes how the different components of the system shape and change one another; it builds on a Marxist
tradition and on the ideas of Hegel.
These ideas have been elaborated by Engeström (1987; 1999) and Cole & Engeström (1993), to include the
community in which the subject (acting agent) operates, the outcomes, or aims, of the activity, the rules which
define the subjects relations with the community and the division of labour between subjects. Activity theory is
never content with describing these constituents in isolation, but focuses on the relations and tensions between
them. Indeed, learning is often driven by the need to resolve contradictions within the system.
The  novelty   of  our project   lies in the    integration of constructionist  modelling  activities with   web-based
knowledge   building   discussions,   to support  learners  distributed across  six European   countries. For  us, this
means looking beyond the isolated constituents of educational design, and exploring the activity system as a
whole. This system includes a combination of components such as technological development, design of novel
learning activities, and organizational efforts to support teachers and students in different countries. In the
analysis we use activity theory due to its emphasis on understanding human action as systems of activity in
social, cultural, and  historical settings.  By   viewing   our design  efforts not  only  as particular technological
developments (in the form of new ways to support model building and programming or a new system for
collaboration) but also as the creation of a system consisting of new educational activities and organisational
changes, we intend to show how all these components interact to form the system in which the students are
central actors. This allows us a rich understanding of the educational context the students are working in. Note
however, that this does not mean that technical developments are not important contributions of our work, but
rather that these developments must be understood in the context of the activities and the settings in which they
are used. By introducing new technologies in an activity system, the system itself is changed which may be the
source of contradictions between the different components in the system. Fjuk & Ludvigsen (2001) discuss how

                                                            
contradictions in the use of such instruments arise from their multiple purposes, and how the particular purpose
within one activity system is shaped by the activities that accompany the use of the instruments from another.
They demonstrate how contradictions between the different purposes of an instrument may afford contradictory
activities. Their analysis suggests that in order to understand the design of educational technologies we need to
analyse these within the context of the activity and settings where they being used. This viewpoint has been a
guiding element in the analysis of the present paper. Our system was designed in tandem with the educational
activities, and the analysis is done in their context. These activities do not occur in a void; we need to be aware
of a number of components of the activity system:
    x     The structure of the community (or communities) of researchers, teachers and students.
    x     The division of labour between these three groups and within them.
    x     The  social  rules  which  govern   interactions  between  students  and  between   students    and teachers /
          researchers.
    x     The web of connections which tie local groups and global communities.
    x     Other instruments    in  the   environment,   such as  the programming      environment     and  spreadsheets,
          traditional  tools,  such  as  whiteboards    and  paper,  as  well  as   specifically designed   objects  for
          collaborative group activities.
    x     The mathematical and scientific objects which are explored and the educational outcomes of these
          explorations.

COMPONENTS OF THE WEBLABS ACTIVITY SYSTEM

In  the following   section   we  discuss the  four central  components   involved   designing   the  WebLabs   activity
system:   the activity   sequences,  the  WebReports    system, the  ToonTalk    programming     environment,   and  the
educational and school settings that are involved in our work.

Activity sequences
Our   methodology     of activity design  has  emerged   through  a  process  of  iterative refinement.   Our  approach
interleaves   modelling  tasks   and discussions (face-to-face  and  on-line).   The  former  builds   intuitions in the
domain area, while the later forges these into formal argumentation. Our activities follow a common cycle: first
a scientific phenomenon or research question is introduced via a group discussion and specific modelling tasks
are derived   from  it.  Students  then   work  individually or in   pairs, exploring  the  question   at hand  through
modelling in ToonTalk. Once done, they use a specialized template to publish (on the web) a written report on
their findings. The models they have developed are embedded in this report. These reports are then used as input
for a group discussion, which concludes with the publication of a group report. When possible, this report will
be reviewed by groups from other countries, working on the same topic, to initiate inter-group discussions.
The evolution of our methodology is in itself an interesting example of the mediating role of technology. At an
early stage of the design, we realized that if we wanted to interleave on-line discussion with modelling, the
WebReports system (described below) would have to support this practice. Among the required features were
streamlined embedding of coded models in a textual report and templates which scaffold students' writing. Only
after these features were available did we realize that they enabled us to create a new tool, and a new related
practice, which   we    called task  templates. These   are  report  templates which   include   task  instructions  and
questions. The novelty of this tool is that all the tools required for the task are embedded in the template.
Students click on the tools they need, work their way through the modelling task, and eventually replace the
question text in the template with their own observations.

The ToonTalk programming environment
We see software programming as playing a key role in individual and group learning. Children explore and test
their   conceptions   of  the  phenomena    through     programming     working   models.   Furthermore,    by    sharing
programmed     models,   they  communicate    ideas  in a  concrete  yet accurate   form. We     are programming    with
ToonTalk (Kahn, 1996; 1999; http://www.ToonTalk.com) a language used in the past with younger children to
construct  video  games    (Hoyles,   Noss  &   Adamson,     2002).  ToonTalk    is a computer    game,   programming
environment and programming language in one. In ToonTalk programs take the form of animated cartoon
robots. Programming is done by training these robots: leading them through the task they are meant to perform.
After training, programs are generalised by "erasing" superfluous detail from robots' "minds".

                                                           
Train the robot to take a number 1   Generalise   the     program   by    Give the robot its input box. The robot will
from the toolbox and drop it on the  erasing the value    of the  input   continuously repeat the actions it has been
input, to increment it.              from the robots memory.              taught.
                                      Figure 1: Training a robot to count
Figure 1 shows three snapshots of what it means to write a program (train a robot) to count through the natural
numbers. In fact, we only have to train the robot to "add 1" to a number and then generalise it to any number.
The robot iterates the actions it was trained to do, for as long as the conditions it expects hold true.

The WebReports system
The individual and collaborative facets of learning are intertwined at all stages of our activities. The WebReports
system (Figure 2) was set up to support both. The primary aim of this system is to allow learners to reflect on
each others work by sharing working models of their ideas. The "atomic unit" of content in the system is a web
report: a document containing formatted text, along with multi-media objects, Java applets, and most important
­ ToonTalk models. These models are embedded in the report as images, which link to the actual code object.
When clicked, they automatically open in the reader's ToonTalk environment ­ which could be in another
classroom or another country. The reader can then manipulate the object, modify it, and even respond with a
comment that may include her own model. Note that by including a revised or alternative model the students
have several ways of building on each others knowledge. This last point is crucial: rather than simply discussing
what each other thinks, students can share what they have built and rebuild each others' attempts to model any
given task or object.

                      Figure 2: WebReports front page (http://www.weblabs.org.uk/wlplone/)
Since our primary focus was on the design of a system consisting of technology, activities, and organizational
interventions we made a strategic decision to use (and enhance as needed) existing "vanilla flavour" open source
systems. Our first prototype was built upon JSPWiki (http://www.jspwiki.org) whereas the current system is
based on Plone (http://www.plone.org). This led us to focus on the functional and usability design, and minimize
our implementation efforts.
Reports are edited using a visual editor. Apart from standard text formatting features, this editor allows users to
easily embed media including Java applets of their models as well as objects embedding the ToonTalk code in

                                                         
their reports. Students can grab any program object in their ToonTalk environment, and copy it instantaneously
into their report.
Reports are catalogued along three axes: topic, site and function. The first categorizes reports by their subject
content (e.g. Infinity, Sequences, 1D collisions). The second lists the reports by the real-world team of the
author (school, class or club). The function heading presents content by the way it was conceived to be used
(programming component, personal report, tutorial etc.).

School settings
Working across six European countries means having to acknowledge more than language differences. We
encounter a wide range of classroom cultures, practices and curricula, which all have to be accounted for in our
design.
First, there are pragmatic issues: school times, session length, and firewalls. As mundane as they seem, these had
an actual impact on the success of activities, primarily in cases where our design was in contradiction with
existing rules.
One such example regards the use of web reports between sites. Our original plan was to have two groups work
on a topic in parallel, publish concluding group reports, and then comment on each others' reports. In practice,
synchronizing between sites proved impossible: even if one succeeded in scheduling an activity to start at the
same time in both sites, the difference in session duration dictated by the local educational system meant that
one group would be well into the next activity before the other published its concluding report. This realization
led us to shift the emphasis to individual reports, as a means of collaborative knowledge building within groups.
Other issues are much more subtle, and relate to established classroom rules and norms regarding knowledge
sharing. The    first issue we   encountered was that in most  educational  institutions,   sharing    knowledge  goes
against the grain of standard practice; often it is called cheating. This problem was easy to overcome. A much
more difficult issue was getting students to publish work in rudimentary form. Our design builds on iterative
refinement of knowledge through social interaction. This requires students to publish work that is not "correct"
or finished, acknowledge public feedback, and republish. Again, this contradicts standard educational practice.
In school, you submit a paper or exam when you think it is right, and the feedback you receive is judgmental.
To our surprise, the main hurdle in this case was put forth by teachers. In some cases, teachers found it hard to
accept that students publish scientifically or mathematically incorrect texts for fear that this might be interpreted
as a lack of proficiency on their side. Similar conflicts in norms and values will be further discussed below in
order to illustrate how activity theory may support designers in understanding how aspects that might appear
peripheral at initial stages of design later turn out to be the core challenges.

CASE STUDY EXAMPLES FROM SCIENCE EDUCATION ACTIVITIES WITH THE
WEBLABS SYSTEM

Below we present two case study examples from our work. These two differ in several respects and have
therefore been important to our understanding of the activity system as a whole. The first activity, called "Guess
my robot", focuses on the intense collaboration and exchange between students in England and Bulgaria using
small pieces of program code representing number sequences. The collaborative setting here works as a way for
students to  respond    and  act  on  each other's models   on a    day-to-day   basis.  The    second activity, called
"EcoModelling", focuses on students' illustration and presentation of their understanding of foodweb systems.
Here, the collaborative setting has more of an indirect role but still significantly shapes the models that the
students are    building    with less focus  on  day-to-day  exchanges.   Our     analysis  is   aimed  at  identifying
contradictions in the system. Contradictions are central to the development and changes of all activity systems
(Engeström, 1987) and therefore useful as    analytical tools (Fjuk & Ludvigsen, 2001).
A comprehensive       analysis of the system  would  need to   analyse more      cases, comb    them meticulously   for
contradictions, and resolve them by modifying the various aspects of the design. Such an undertaking would be
far beyond the scope of this paper. We restrict ourselves to several of the more illustrative issues in each case.

Collaboration and "discussion" in the guess my robot activity
One of the activities we designed was the Guess my Robot (GmR) game. This game is a pivotal activity in our
explorations of number sequences.      Most students enter it with very little formal knowledge of sequences, and
minimal  ToonTalk      experience. After GmR    they move   on to   more advanced       topics, such as the Fibonacci

                                                          
sequence, convergence     and  divergence,   and cryptography.   See Mor    et   al (2004) for a  discussion  of the
mathematical-educational context of this game.
In this game, proposers train a robot to generate a numerical sequence, and publish its first few terms as a
ToonTalk "box" in a WebReport, using a special purpose template. Responders build a robot that will produce
this sequence, and thus show that they have worked out the underlying rule. As one girl said: "So, like, the robot
is my proof that I got it?"
We first experimented with this activity in 2002/3 (Mor and Sendova, 2003). Our experience from this pilot
informed both the design of the activity and of the WebReports system. In 2003/4 we expanded the experiment,
with significantly greater response (Mor & Noss, 2004; Matos et al, 2004). This iteration included far more
students and resulted in rich interactions.
We now analyze this case, using the activity theory framework as a guideline. We will focus on the role of the
WebReports system, both as an instrument and as an arena for the activity. As mentioned above, the constituents
of the system are not seen in isolation, but rather in relation to one another.
Outcome: The proposers' explicit outcome is the challenge, and the responders' the responses. Yet the game
had additional   implicit   outcomes  ­ the   collaborative  construction  of    knowledge  about   sequences.   The
WebReports system supports both, yet our activity design supported the former, but neglected the latter.
The explicit outcomes are embodied in models of number sequences, as ToonTalk boxes or robots. These can be
seamlessly embedded in both challenge reports and response comments. The implicit outcomes are higher level
abstractions and arguments    about  sequences.  These   are the more  important    outcomes   from the educational
viewpoint. They can be represented verbally, or as situated abstractions (Hoyles & Noss, 1996) by ToonTalk
models. The system is flexible enough to support both. However, we failed to design the activity in a way that
would promote them and make them explicit. To use Wenger's terminology (1998), we failed to foster a sense
of joint enterprise (although, in some exceptional cases, this sense emerged from the students' initiatives).
Subject: We wish to focus on two relationships ­ that between subject and instruments, and that between
subject and community.
On the issue of subject and tools, we find Ivan Illich's notion of conviviality a useful benchmark:
  Convivial tools are those which give each person who uses them the greatest opportunity to enrich the
  environment with the fruits of his or her vision... Tools foster conviviality to the extent to which they
  can be easily used, by anybody, as often or as seldom as desired, for the accomplishment of a purpose
  chosen by the user... They allow the user to express his meaning in action. (Illich, 1973)
Students developed a convivial attitude towards ToonTalk. They used it in ways we had not expected, to test
conjectures and express mathematical arguments (Mor & Noss, 2004). However, while some students (and
teachers) approached the WebReports with conviviality, bending it to their needs and expressing themselves
freely with whatever means it provides, others did not. Students' inability to post challenges and responses in
the prescribed way hampered collaboration and undermined the success of the activity. We see the causes in two
other aspects of the activity system: insufficient attention to the rules imposed by local settings, and a lack of
investment in the roles of facilitation and tutoring.
Object: The objects in focus were numeric sequences. Having those as the play-things in the game eliminated a
contradiction often found in educational games, where the learning objects are exogenous to the activity (Squire,
2002).
Instruments:   Access  to   the mathematical   objects   was  mediated by   the     computational media: ToonTalk
programming and Excel worksheets. Each one has its own affordances and constraints. While ToonTalk allows
the students to construct surprisingly complex sequences, in many cases they preferred to use Excel as an
analytic tool. We are not sure whether this preference originated with the students, or reflected the techno-
cultural background of their teachers. ToonTalk's mediating role was facilitated by the WebReports streamlined
embedding of models in report text.
Rules: Engeström (1987) identifies rules as mediating between the subject and the community. In our case, the
main design challenge of GmR was setting the rules of the game. These rules cannot be designed in isolation ­
they need to acknowledge existing rules: those which regulate the social system of the classroom, and those
which are constructed when students engage with remote peers. In fact, we had supplied the students with very
little other than these rules. The activity is defined by the roles of proposer, responder and their protocol of
interaction. Indeed, when     these rules   were observed,   the  activity followed    a productive  path.   To  our

                                                          
disappointment, this happened in less then half the cases (21 out 45 challenges and 15 of 33 responses). We read
a very strong message here, which relates to the issue of division of labour, discussed below.
The design of GmR demonstrates a relation which is not usually observed: the mediating role of technology in
the construction of rules and their relationship with subjects and objects. As an example, the communication
afforded by    a web-based   system  is  very  sparse  compared  to  face-to-face interaction. This  meant  that for
interactions to be successful, each utterance had to be rich in content. In part, this limitation was overcome by a
virtue of the tools: the animated code fragments participants embedded in their texts served as avatars, or
proxies, in delivering their ideas.
Division of labour: As mentioned above, the success of the activity was impeded by participants' failure to
adhere to its rules. This failure was a result of a contradiction between the designed rules and those which
participants   had  appropriated in  common    classroom  practices.  For instance, the emphasis     on  using code
fragments as an element of communication was a completely novelty. In vernacular activity systems, the rules
are  transparent:   they are maintained    by  consensus of the  community,    and  new members      learn them  by
Legitimate Peripheral Participation (Lave & Wenger, 1991). In designed activity systems ­ such as ours ­ the
rules need to be consciously accepted by all members of the community at once. This creates the need for a
facilitator, a person whose   role  is  to monitor  adherence to  the rules. The  facilitator regularly scanned  the
WebReports system for GmR contributions. When they were ill-formed, he would alert the authors to their
mistakes, and guide them in correcting them. In other cases he would point participants to contributions which
they would     find interesting  ­  an  action that would   have  not been   necessary  had    the authors  of these
contributions observed the rules.

Construction and presentation of eco-system models - EcoModelling
The EcoModelling activity sequence focused on allowing students (5th grade) to program their own models of
food webs where an endangered species plays a central role. The students chose to focus on animals such as the
giant panda, killer whales, and Siberian white tigers. The specification of the activity sequence include on as
well as  off  the  computer  activities where  students  design, program  and  discuss their   models.  The activity
sequence was presented to the students as having the goal of producing models that could be published as
WebReports and that others could try out, discuss, and comment upon. The students also used the WebReports
system to report on their progress in the form of diaries that include partial models of the phenomena they are
working with.

Figure 3: The Whale game by two students exploring the life conditions of killer whales
"I and The Best have made a whalegame. The endangered species is the killer whale. The threat is the net. The
killer whale is supposed to try to catch the fish. When the killer whale touches a fish it grows. If it touches the
net it blows up, same thing if the fish touch the net"
Goals of activity sequence: The practice that we aimed to stimulate in this activity sequence was twofold. First,
to support students in constructing models of their ideas and knowledge about ecological systems. Second, for
students to publish their models of these along with textual explanations and description.      Receiving students
would analyse the models and modify and comment upon these. The intended outcome would thereby be the
joint enterprise of knowledge production of ecological phenomena.       The two central mediating instruments in

                                                          
the production      of models     and   knowledge  are   the programming           tools used  for  building models    and the
WebReports system used for publishing models, and commenting and discussing these. These instruments serve
dual purposes, both to shape the artefacts but also as mediators in the production of knowledge. Therefore, the
students were engaged in two different roles throughout the activities, both as producers of models of ecological
systems and as actors in the knowledge production community that we aimed to promote. Moreover, these two
roles also occurred at two different levels of collaboration; both at the level of individuals and small groups
producing models, and at the community level of knowledge building using the WebReports system.
Community, rules, and norms: The students' model construction and sharing were significantly influenced by
the international setting. This was the case even though at the time of this study the WebReports system was just
recently up and running so collaboration with students from the other countries only happened to a limited
extend.  Here,   we    would   like  to focus  on  two  relationships       that we  identified  as important   sources of the
contradiction in the activity system: the relations between subjects and the surrounding community and the
relations  between     subjects   and   rules and  norms.  The   relation        between  the  students  and the  surrounding
community influenced the models that the students produced as well as the final outcome of the activity in two
ways. First, the nearby group participants actively contributed to the shaping of the models that the students
produced through discussions and comments that occurred in local activities and through use of the WebReport
system. Moreover, the local community also affected the students through their own social relationships. This
indirectly shaped the final outcome in that students were highly engaged in the particular impressions their
models would make on other local community members. The following fragment illustrates this issue. The four
students are discussing the model that is being built by two of their friends (Sebastian and Jonathan) which aims
to illustrate how a drought may influence the life conditions of rats and sunflowers. Throughout this episode the
students have quite a critical tone towards their friends' model.
    1.     Tobbe:    Their huge sun flower in the middle of the screen is...
    2.     Jonna:    Really, seriously speaking their sun flower is kind of ...
    3.     Tobbe:    The rat is not really that pretty either, do you think
    4.     Tina:     Yeah, I thought that
    ...
    5.     Mimmi: Tina please let our buffalo be part of your game
The most important thing that happens in this episode is not how the students exchange specific ideas about how
to implement a phenomenon in their models, nor that they find specific suggestions relevant to their own work
by studying what their friends are doing. Instead, what we find to be most important is that the students relate to
and compare what they are doing to the work of their friends on a social level. Most of the influence of the
collaboration does not concern the specific scientific content of the models they are building. It is rather about
comparing and discussing each one's work in relation to everyone's overall progression. There is also extensive
engagement in making sure that what they are building complies with the agreed upon overall norm for what
they find the activity to be about. The two girls, Mimmi and Jonna, here come over to Tina and Tobbe to
compare with their own work, to discuss the work of the Sebastian and Jonathan, and to try out the game that
Tina and Tobbe have built. Hence, the role played by social influences for the modelling and programming of
their system     is mostly    as a   motivator for the   progression  of       the activity as  a  whole, rather  than  having
implications for specific considerations concerning knowledge about modelling of ecosystems.
Second, even though there was only limited immediate interaction between groups of students in different sites,
the student's awareness of a larger community significantly influenced how they approached the production of
ecosystem models. This relates to a contradiction that we identified in the different ways that the WebReports
system  may   be    used.   In   the EcoModelling   activities the  students       mostly   used   WebReports   as  a tool for
presentation of the models they had produced (see Figure 3) and much less as a tool for discussion and sharing
of knowledge. This is a consequence of a contradiction between the goals that students developed in local group
activities  and   goals   at  the  community     level. We   see this       as  an example    of  a more   general  issue: the
contradictions between motives and goals of the different actors (students and teachers) within educational
activities. In our case the students' motives were partly to jointly discuss their ideas and thereby be co-producers
of knowledge. However, we discovered that for the students, the goals of joint knowledge production often
stood   in contrast    to the  more   immediate   goal  of actually designing        and  implementing    their models  in the
programming tools with their peer students as the particular audience. These two goals are different in character
and   may  therefore   subsequently     lead  to a different set of  sub-activities;      the  practical activity producing  a
working computational artefact vs. the activity of discussing the ideas that the artefact represents.
This contradiction has important consequences not only for the activities that students engage in but also for
how we as designers of the system should approach the redesign of the different components and sub-activities.
We see that a significant source of this contradiction is found in the underlying values of these two activities.
The model construction activity has a clear resemblance to the established practice of schooling: performing a

                                                              
task by following instructions, which here involved building a model using this particular tool. On the contrary,
knowledge building as a joint activity requires the fostering of a new set of social rules and norms for what the
school activity should be about. To resolving these contradictions we would need to redesign the WebReports
system and the activity sequence, and also to raise awareness of the unorthodox rules we wish to establish.

CONCLUDING DISCUSSION

We have reviewed two examples of educational activities designed and tested by the WebLabs project. While
both cases were fairly successful, they both had their weaknesses. These activities differ in their knowledge
domains, but also in how different aspects of of Knowledge Building and Constructionism took form. While
GmR had various elements of the traditional knowledge building interactions, EcoModelling focussed more on
model  building    and  presentation.   GmR   used  ToonTalk's       low  level  programming   facilities, whereas
EcoModelling applied a component-based approach. In GmR WebReports served as a platform for discussion,
in EcoModelling they functioned primarily as a display medium.
A key result concerns how the students perceived the expected outcome of the different activities in the two case
studies. In the EcoModelling activity the students mainly focused on creating their models and presenting them
to their peers, both over the web and in group presentations. Thereby, the web-based collaboration did not
become an aspect of the actual model building activity. In the Guess my Robot activity on the other hand, the
students focused on using the WebReports system to create challenges and respond to each others challenges,
and the intense web-based collaboration became a prerequisite for successfully engaging in the game. Thereby,
the web-based collaboration provided additional benefits to the outcome of the activity as a whole which local
collaboration would not have afforded.
In both our case study examples we saw how the goal of the technologies that we have designed sometimes
contrasted with existing classroom practices. The two technologies also introduced a few conflicting goals.
Hence, design efforts to a large extent involved helping students and teachers to find ways to incorporate these
technologies into their classroom practices. The changes and extensions we made to our systems were hence
always accompanied by changes to the activity sequences, particularly as the kind of activity we aimed to foster
involved a range    of different social (schools, research practice,   virtual  places) and technological  contexts
(websystems, programming tools). It has been central to our design efforts to always take this range of aspects
into account.
Three themes are common to all our other activity sequences and contributed to their success:
   x     An attempt to blend ideas of knowledge building, as a social practice, with constructionist modelling,
         as an individual (or small-group) endeavour.
   x     A view of designing, and analyzing, the epistemic activity system as a whole: the tasks, their aims, the
         tools (ToonTalk    programming    and  WebReports     collaboration),   school   settings and  community
         practices.
   x     An iterative process, in which the activity system evolves through cycles of design, critical evaluation
         and refinement.
These  themes  are  tightly bound  together. An   activity-theoretic view  leads us  to the understanding   that the
individual-cognitive   and  social factors of learning are  intertwined.     In  our case,  these  are reflected  as
construction and discussion. It also suggests that the historical process of refinement (even at the micro-level of
iterative design) is inevitable; Instruments, both concrete and social, are invented for a purpose ­ but their full
potential is realized through use. In our case, testing the activity sequences with one version of the tools led to
insights regarding the refinement of both the tools and the activity design.

REFERENCES

Barab, S., Barnett,    M.,  Yamagata-Lynch,   L., Squire,  K., Keating,    T.   (2002). Using Activity   Theory   to
Understand the Systemic Tensions Characterising a Technology-Rich Introductory Astronomy Course. Mind,
Culture, and Activity 9(2). 76-107.
Bell, P. (2002). Using Argument Map Representations to Make Thinking Visible for Individuals and Groups. In
T. Koschmann & R. Hall & N. Miyake (Eds.), CSCL 2: Carrying Forward The Conversation. Mahwah, NJ:
Lawrence Erlbaum Associates.
Bell, P., & Davis, E. A. (2000). Designing Mildred: Scaffolding Students' Reflection and Argumentation Using a
Cognitive Software Guide. Paper presented at ICLS 2000, Ann Arbor, Michigan.

                                                        
Cole, M. & Engestrom, Y. (1993) A cultural-historical approach to distributed cognition,       in: G. Salomon (Ed)
Distributed   cognitions: Psychological    and   educational  considerations (New    York,   Cambridge   University
Press).
Engeström, Y. (1987) Learning by Expanding (Helsinki, Orienta-Konsultit Oy).
Engeström, Y. (1999) Perspectives on activity theory (Cambridge, Cambridge university Press).
Fjuk, A. & Ludvigsen, S. (2001) The Complexity of Distributed Collaborative Learning: Unit of Analysis in
Proceedings of CSCL, 2001:
Hakkarainen,   K.,  Lipponen,   L., &   Järväla,  S.  (2001). Epistemology   of Inquiry    and Computer-Supported
Collaborative   Learning.   in Koschmann,     T., Hall,  R.,  Miyake,   N. (eds) CSCL2:     Carrying   Forward   the
Conversation, (Mahwah, NJ / London, Lawrence Erlbaum Associates).
Hewitt, J. (2001). From a Focus on Tasks to a Focus on Understanding: The Cultural Transformation               of a
Torontio Classroom, in Koschmann, T., Hall, R., Miyake, N. (eds) CSCL2: Carrying Forward the Conversation,
(Mahwah, NJ / London, Lawrence Erlbaum Associates).
Hoyles,  C.   &  Noss,  R.  (1996)   Windows     on   Mathematical  meaning:Learning      Cultures and   Computers
(Dordrecht, Kluwer).
Hoyles,  C.,  Noss,  R.   & Adamson,      R. (2002)   Rethinking  the  Microworld    Idea, Journal  of  Educational
Computing Research, 27(1), pp. 29-53.
Illich, I. (1973) Tools for Conviviality (New York, Harper & Row).
Jonassen, D.H. (2000) Revisiting Activity Theory as a Framework for Designing Student-Centered Learning
Environments,   in: D.H. Jonassen & S.M. Land (Eds)       The Theoretical Foundations of Learning Environments
(Mahwah, NJ / London, Lawrence Erlbaum Associates).
Kahn,   K.  (1996)  ToonTalk    - An   Animated     Programming   Environment    for Children,   Journal of  Visual
Languages and Computing, 7(2), pp. 197-217.
Kahn, K. (1999) A Computer Game to Teach Programming in Proceedings of National Educational Computing
Conference, 1999: Atlantic City, New Jersey
Kaptelinin, V. & Cole, M. (1997) Individual and Collective Activities in Educational Computer Game Playing
in Proceedings of Computer Support for Collaborative Learning, 1997: Ontorio, Canada
Lave, J.& Wenger, E. (1991) Situated Learning: Legitimate Peripheral Participation (Cambridge University
Press).
Linn,  M.  (1995).  Designing   computer     learning environments  for  engineering  and   computer   science. The
scaffolded knowledge integration framework. Journal of Science Education and Technology, 4(2), 103-126.
Matos, J.F., Mor, Y., Noss, R. & Santos, M. (2005) Sustaining Interaction in a Mathematical Community of
Practice in Proceedings of Fourth Congress of the European Society for Research in Mathematics Education
(CERME-4), 2005: Sant Feliu de Guíxols, Spain
Mor, Y. & Sendova, E. (2003) ToonTalking about Mathematics,         in: I. Derzhanski, N. Dimitrova, S. Grozdev &
E. Sendova    (Eds)  History   and  Education    in  Mathematics  and  Informatics,  Attracting  Talent to Science;
Proceedings of the International Congress MASSEE 2003, september 15-21, Borovets, Bulgaria.
Mor, Y., Hoyles, C., Kahn, K., Noss, R. & Simpson, G. (2004) Thinking in Process, Micromath, 20(2).
Mor, Y. & Noss, R. (2004) Good stories to good math: pathways from the imaginative to the paradigmatic
presented at the CSCL SIG First Symposium (Lausanne, Switzerland,
Nardi,  B.A.  (Ed.) (1996)     Context and   Consciousness:   Activity Theory   and  Human-Computer      Interaction
(Cambridge, MA, MIT Press).
Scardamalia, M. & Bereiter, C. (1994) Computer support for knowledge-building communities, Journal of the
Learning Sciences, 3(3), pp. 265­283.
Vygotsky, L.S. (1987) Mind in society: The development of higher psychological processes (Cambridge, MA,
Harvard University Press).
Wenger,    E. (1998)  Communities      of Practice:   Learning, Meaning,   and   Identity  (Cambridge,   Cambridge
University Press).

                                                          
